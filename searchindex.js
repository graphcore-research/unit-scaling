Search.setIndex({"docnames": ["api_reference", "development", "generated/unit_scaling", "generated/unit_scaling.CrossEntropyLoss", "generated/unit_scaling.DepthModuleList", "generated/unit_scaling.DepthSequential", "generated/unit_scaling.Dropout", "generated/unit_scaling.Embedding", "generated/unit_scaling.GELU", "generated/unit_scaling.LayerNorm", "generated/unit_scaling.Linear", "generated/unit_scaling.LinearReadout", "generated/unit_scaling.MHSA", "generated/unit_scaling.MLP", "generated/unit_scaling.Parameter", "generated/unit_scaling.RMSNorm", "generated/unit_scaling.SiLU", "generated/unit_scaling.Softmax", "generated/unit_scaling.TransformerDecoder", "generated/unit_scaling.TransformerLayer", "generated/unit_scaling.analysis", "generated/unit_scaling.analysis.example_batch", "generated/unit_scaling.analysis.graph_to_dataframe", "generated/unit_scaling.analysis.plot", "generated/unit_scaling.analysis.visualiser", "generated/unit_scaling.constraints", "generated/unit_scaling.constraints.amean", "generated/unit_scaling.constraints.apply_constraint", "generated/unit_scaling.constraints.gmean", "generated/unit_scaling.constraints.hmean", "generated/unit_scaling.constraints.to_grad_input_scale", "generated/unit_scaling.constraints.to_left_grad_scale", "generated/unit_scaling.constraints.to_output_scale", "generated/unit_scaling.constraints.to_right_grad_scale", "generated/unit_scaling.core", "generated/unit_scaling.core.functional", "generated/unit_scaling.core.functional.logarithmic_interpolation", "generated/unit_scaling.core.functional.rms", "generated/unit_scaling.core.functional.scale_elementwise", "generated/unit_scaling.core.functional.transformer_residual_scaling_rule", "generated/unit_scaling.formats", "generated/unit_scaling.formats.FPFormat", "generated/unit_scaling.formats.format_to_tuple", "generated/unit_scaling.formats.tuple_to_format", "generated/unit_scaling.functional", "generated/unit_scaling.functional.add", "generated/unit_scaling.functional.cross_entropy", "generated/unit_scaling.functional.dropout", "generated/unit_scaling.functional.embedding", "generated/unit_scaling.functional.gelu", "generated/unit_scaling.functional.layer_norm", "generated/unit_scaling.functional.linear", "generated/unit_scaling.functional.linear_readout", "generated/unit_scaling.functional.matmul", "generated/unit_scaling.functional.mse_loss", "generated/unit_scaling.functional.residual_add", "generated/unit_scaling.functional.residual_apply", "generated/unit_scaling.functional.residual_split", "generated/unit_scaling.functional.rms_norm", "generated/unit_scaling.functional.scaled_dot_product_attention", "generated/unit_scaling.functional.silu", "generated/unit_scaling.functional.silu_glu", "generated/unit_scaling.functional.softmax", "generated/unit_scaling.optim", "generated/unit_scaling.optim.Adam", "generated/unit_scaling.optim.AdamW", "generated/unit_scaling.optim.SGD", "generated/unit_scaling.optim.lr_scale_for_depth", "generated/unit_scaling.optim.lr_scale_func_adam", "generated/unit_scaling.optim.lr_scale_func_sgd", "generated/unit_scaling.optim.scaled_parameters", "generated/unit_scaling.parameter", "generated/unit_scaling.parameter.OrderedDict", "generated/unit_scaling.parameter.Parameter", "generated/unit_scaling.parameter.ParameterData", "generated/unit_scaling.parameter.Protocol", "generated/unit_scaling.parameter.Tensor", "generated/unit_scaling.parameter.has_parameter_data", "generated/unit_scaling.scale", "generated/unit_scaling.scale.scale_bwd", "generated/unit_scaling.scale.scale_fwd", "generated/unit_scaling.transformer_residual_scaling_rule", "generated/unit_scaling.transforms", "generated/unit_scaling.transforms.Metrics", "generated/unit_scaling.transforms.compile", "generated/unit_scaling.transforms.prune_non_float_tensors", "generated/unit_scaling.transforms.prune_same_scale_tensors", "generated/unit_scaling.transforms.prune_selected_nodes", "generated/unit_scaling.transforms.simulate_format", "generated/unit_scaling.transforms.simulate_fp8", "generated/unit_scaling.transforms.track_scales", "generated/unit_scaling.transforms.unit_scale", "generated/unit_scaling.transforms.utils", "generated/unit_scaling.transforms.utils.apply_transform", "generated/unit_scaling.transforms.utils.patch_to_expand_modules", "generated/unit_scaling.transforms.utils.replace_node_with_function", "generated/unit_scaling.transforms.utils.torch_nn_modules_to_user_modules", "generated/unit_scaling.utils", "generated/unit_scaling.utils.ScalePair", "generated/unit_scaling.utils.ScaleTracker", "generated/unit_scaling.utils.ScaleTrackingInterpreter", "generated/unit_scaling.utils.analyse_module", "generated/unit_scaling.visualiser", "index", "limitations", "posts/almost_scaled_dot_product_attention", "user_guide"], "filenames": ["api_reference.rst", "development.md", "generated/unit_scaling.rst", "generated/unit_scaling.CrossEntropyLoss.rst", "generated/unit_scaling.DepthModuleList.rst", "generated/unit_scaling.DepthSequential.rst", "generated/unit_scaling.Dropout.rst", "generated/unit_scaling.Embedding.rst", "generated/unit_scaling.GELU.rst", "generated/unit_scaling.LayerNorm.rst", "generated/unit_scaling.Linear.rst", "generated/unit_scaling.LinearReadout.rst", "generated/unit_scaling.MHSA.rst", "generated/unit_scaling.MLP.rst", "generated/unit_scaling.Parameter.rst", "generated/unit_scaling.RMSNorm.rst", "generated/unit_scaling.SiLU.rst", "generated/unit_scaling.Softmax.rst", "generated/unit_scaling.TransformerDecoder.rst", "generated/unit_scaling.TransformerLayer.rst", "generated/unit_scaling.analysis.rst", "generated/unit_scaling.analysis.example_batch.rst", "generated/unit_scaling.analysis.graph_to_dataframe.rst", "generated/unit_scaling.analysis.plot.rst", "generated/unit_scaling.analysis.visualiser.rst", "generated/unit_scaling.constraints.rst", "generated/unit_scaling.constraints.amean.rst", "generated/unit_scaling.constraints.apply_constraint.rst", "generated/unit_scaling.constraints.gmean.rst", "generated/unit_scaling.constraints.hmean.rst", "generated/unit_scaling.constraints.to_grad_input_scale.rst", "generated/unit_scaling.constraints.to_left_grad_scale.rst", "generated/unit_scaling.constraints.to_output_scale.rst", "generated/unit_scaling.constraints.to_right_grad_scale.rst", "generated/unit_scaling.core.rst", "generated/unit_scaling.core.functional.rst", "generated/unit_scaling.core.functional.logarithmic_interpolation.rst", "generated/unit_scaling.core.functional.rms.rst", "generated/unit_scaling.core.functional.scale_elementwise.rst", "generated/unit_scaling.core.functional.transformer_residual_scaling_rule.rst", "generated/unit_scaling.formats.rst", "generated/unit_scaling.formats.FPFormat.rst", "generated/unit_scaling.formats.format_to_tuple.rst", "generated/unit_scaling.formats.tuple_to_format.rst", "generated/unit_scaling.functional.rst", "generated/unit_scaling.functional.add.rst", "generated/unit_scaling.functional.cross_entropy.rst", "generated/unit_scaling.functional.dropout.rst", "generated/unit_scaling.functional.embedding.rst", "generated/unit_scaling.functional.gelu.rst", "generated/unit_scaling.functional.layer_norm.rst", "generated/unit_scaling.functional.linear.rst", "generated/unit_scaling.functional.linear_readout.rst", "generated/unit_scaling.functional.matmul.rst", "generated/unit_scaling.functional.mse_loss.rst", "generated/unit_scaling.functional.residual_add.rst", "generated/unit_scaling.functional.residual_apply.rst", "generated/unit_scaling.functional.residual_split.rst", "generated/unit_scaling.functional.rms_norm.rst", "generated/unit_scaling.functional.scaled_dot_product_attention.rst", "generated/unit_scaling.functional.silu.rst", "generated/unit_scaling.functional.silu_glu.rst", "generated/unit_scaling.functional.softmax.rst", "generated/unit_scaling.optim.rst", "generated/unit_scaling.optim.Adam.rst", "generated/unit_scaling.optim.AdamW.rst", "generated/unit_scaling.optim.SGD.rst", "generated/unit_scaling.optim.lr_scale_for_depth.rst", "generated/unit_scaling.optim.lr_scale_func_adam.rst", "generated/unit_scaling.optim.lr_scale_func_sgd.rst", "generated/unit_scaling.optim.scaled_parameters.rst", "generated/unit_scaling.parameter.rst", "generated/unit_scaling.parameter.OrderedDict.rst", "generated/unit_scaling.parameter.Parameter.rst", "generated/unit_scaling.parameter.ParameterData.rst", "generated/unit_scaling.parameter.Protocol.rst", "generated/unit_scaling.parameter.Tensor.rst", "generated/unit_scaling.parameter.has_parameter_data.rst", "generated/unit_scaling.scale.rst", "generated/unit_scaling.scale.scale_bwd.rst", "generated/unit_scaling.scale.scale_fwd.rst", "generated/unit_scaling.transformer_residual_scaling_rule.rst", "generated/unit_scaling.transforms.rst", "generated/unit_scaling.transforms.Metrics.rst", "generated/unit_scaling.transforms.compile.rst", "generated/unit_scaling.transforms.prune_non_float_tensors.rst", "generated/unit_scaling.transforms.prune_same_scale_tensors.rst", "generated/unit_scaling.transforms.prune_selected_nodes.rst", "generated/unit_scaling.transforms.simulate_format.rst", "generated/unit_scaling.transforms.simulate_fp8.rst", "generated/unit_scaling.transforms.track_scales.rst", "generated/unit_scaling.transforms.unit_scale.rst", "generated/unit_scaling.transforms.utils.rst", "generated/unit_scaling.transforms.utils.apply_transform.rst", "generated/unit_scaling.transforms.utils.patch_to_expand_modules.rst", "generated/unit_scaling.transforms.utils.replace_node_with_function.rst", "generated/unit_scaling.transforms.utils.torch_nn_modules_to_user_modules.rst", "generated/unit_scaling.utils.rst", "generated/unit_scaling.utils.ScalePair.rst", "generated/unit_scaling.utils.ScaleTracker.rst", "generated/unit_scaling.utils.ScaleTrackingInterpreter.rst", "generated/unit_scaling.utils.analyse_module.rst", "generated/unit_scaling.visualiser.rst", "index.rst", "limitations.rst", "posts/almost_scaled_dot_product_attention.md", "user_guide.rst"], "titles": ["<span class=\"section-number\">4. </span>API reference", "<span class=\"section-number\">2. </span>Development", "<span class=\"section-number\">4.1. </span>unit_scaling", "<span class=\"section-number\">4.1.4. </span>unit_scaling.CrossEntropyLoss", "<span class=\"section-number\">4.1.5. </span>unit_scaling.DepthModuleList", "<span class=\"section-number\">4.1.6. </span>unit_scaling.DepthSequential", "<span class=\"section-number\">4.1.7. </span>unit_scaling.Dropout", "<span class=\"section-number\">4.1.8. </span>unit_scaling.Embedding", "<span class=\"section-number\">4.1.9. </span>unit_scaling.GELU", "<span class=\"section-number\">4.1.10. </span>unit_scaling.LayerNorm", "<span class=\"section-number\">4.1.11. </span>unit_scaling.Linear", "<span class=\"section-number\">4.1.12. </span>unit_scaling.LinearReadout", "<span class=\"section-number\">4.1.13. </span>unit_scaling.MHSA", "<span class=\"section-number\">4.1.14. </span>unit_scaling.MLP", "<span class=\"section-number\">4.1.1. </span>unit_scaling.Parameter", "<span class=\"section-number\">4.1.15. </span>unit_scaling.RMSNorm", "<span class=\"section-number\">4.1.16. </span>unit_scaling.SiLU", "<span class=\"section-number\">4.1.17. </span>unit_scaling.Softmax", "<span class=\"section-number\">4.1.18. </span>unit_scaling.TransformerDecoder", "<span class=\"section-number\">4.1.19. </span>unit_scaling.TransformerLayer", "<span class=\"section-number\">4.2. </span>unit_scaling.analysis", "<span class=\"section-number\">4.2.1. </span>unit_scaling.analysis.example_batch", "<span class=\"section-number\">4.2.2. </span>unit_scaling.analysis.graph_to_dataframe", "<span class=\"section-number\">4.2.3. </span>unit_scaling.analysis.plot", "<span class=\"section-number\">4.2.4. </span>unit_scaling.analysis.visualiser", "<span class=\"section-number\">4.3. </span>unit_scaling.constraints", "<span class=\"section-number\">4.3.1. </span>unit_scaling.constraints.amean", "<span class=\"section-number\">4.3.2. </span>unit_scaling.constraints.apply_constraint", "<span class=\"section-number\">4.3.3. </span>unit_scaling.constraints.gmean", "<span class=\"section-number\">4.3.4. </span>unit_scaling.constraints.hmean", "<span class=\"section-number\">4.3.5. </span>unit_scaling.constraints.to_grad_input_scale", "<span class=\"section-number\">4.3.6. </span>unit_scaling.constraints.to_left_grad_scale", "<span class=\"section-number\">4.3.7. </span>unit_scaling.constraints.to_output_scale", "<span class=\"section-number\">4.3.8. </span>unit_scaling.constraints.to_right_grad_scale", "<span class=\"section-number\">4.1.20. </span>unit_scaling.core", "<span class=\"section-number\">4.1.20.1. </span>unit_scaling.core.functional", "<span class=\"section-number\">4.1.20.1.1. </span>unit_scaling.core.functional.logarithmic_interpolation", "<span class=\"section-number\">4.1.20.1.2. </span>unit_scaling.core.functional.rms", "<span class=\"section-number\">4.1.20.1.3. </span>unit_scaling.core.functional.scale_elementwise", "<span class=\"section-number\">4.1.20.1.4. </span>unit_scaling.core.functional.transformer_residual_scaling_rule", "<span class=\"section-number\">4.4. </span>unit_scaling.formats", "<span class=\"section-number\">4.4.3. </span>unit_scaling.formats.FPFormat", "<span class=\"section-number\">4.4.1. </span>unit_scaling.formats.format_to_tuple", "<span class=\"section-number\">4.4.2. </span>unit_scaling.formats.tuple_to_format", "<span class=\"section-number\">4.1.21. </span>unit_scaling.functional", "<span class=\"section-number\">4.1.21.1. </span>unit_scaling.functional.add", "<span class=\"section-number\">4.1.21.2. </span>unit_scaling.functional.cross_entropy", "<span class=\"section-number\">4.1.21.3. </span>unit_scaling.functional.dropout", "<span class=\"section-number\">4.1.21.4. </span>unit_scaling.functional.embedding", "<span class=\"section-number\">4.1.21.5. </span>unit_scaling.functional.gelu", "<span class=\"section-number\">4.1.21.6. </span>unit_scaling.functional.layer_norm", "<span class=\"section-number\">4.1.21.7. </span>unit_scaling.functional.linear", "<span class=\"section-number\">4.1.21.8. </span>unit_scaling.functional.linear_readout", "<span class=\"section-number\">4.1.21.9. </span>unit_scaling.functional.matmul", "<span class=\"section-number\">4.1.21.10. </span>unit_scaling.functional.mse_loss", "<span class=\"section-number\">4.1.21.11. </span>unit_scaling.functional.residual_add", "<span class=\"section-number\">4.1.21.12. </span>unit_scaling.functional.residual_apply", "<span class=\"section-number\">4.1.21.13. </span>unit_scaling.functional.residual_split", "<span class=\"section-number\">4.1.21.14. </span>unit_scaling.functional.rms_norm", "<span class=\"section-number\">4.1.21.15. </span>unit_scaling.functional.scaled_dot_product_attention", "<span class=\"section-number\">4.1.21.16. </span>unit_scaling.functional.silu", "<span class=\"section-number\">4.1.21.17. </span>unit_scaling.functional.silu_glu", "<span class=\"section-number\">4.1.21.18. </span>unit_scaling.functional.softmax", "<span class=\"section-number\">4.1.22. </span>unit_scaling.optim", "<span class=\"section-number\">4.1.22.5. </span>unit_scaling.optim.Adam", "<span class=\"section-number\">4.1.22.6. </span>unit_scaling.optim.AdamW", "<span class=\"section-number\">4.1.22.7. </span>unit_scaling.optim.SGD", "<span class=\"section-number\">4.1.22.1. </span>unit_scaling.optim.lr_scale_for_depth", "<span class=\"section-number\">4.1.22.2. </span>unit_scaling.optim.lr_scale_func_adam", "<span class=\"section-number\">4.1.22.3. </span>unit_scaling.optim.lr_scale_func_sgd", "<span class=\"section-number\">4.1.22.4. </span>unit_scaling.optim.scaled_parameters", "<span class=\"section-number\">4.1.23. </span>unit_scaling.parameter", "<span class=\"section-number\">4.1.23.3. </span>unit_scaling.parameter.OrderedDict", "<span class=\"section-number\">4.1.23.1. </span>unit_scaling.parameter.Parameter", "<span class=\"section-number\">4.1.23.4. </span>unit_scaling.parameter.ParameterData", "<span class=\"section-number\">4.1.23.5. </span>unit_scaling.parameter.Protocol", "<span class=\"section-number\">4.1.23.6. </span>unit_scaling.parameter.Tensor", "<span class=\"section-number\">4.1.23.2. </span>unit_scaling.parameter.has_parameter_data", "<span class=\"section-number\">4.5. </span>unit_scaling.scale", "<span class=\"section-number\">4.5.1. </span>unit_scaling.scale.scale_bwd", "<span class=\"section-number\">4.5.2. </span>unit_scaling.scale.scale_fwd", "<span class=\"section-number\">4.1.2. </span>unit_scaling.transformer_residual_scaling_rule", "<span class=\"section-number\">4.6. </span>unit_scaling.transforms", "<span class=\"section-number\">4.6.9. </span>unit_scaling.transforms.Metrics", "<span class=\"section-number\">4.6.1. </span>unit_scaling.transforms.compile", "<span class=\"section-number\">4.6.2. </span>unit_scaling.transforms.prune_non_float_tensors", "<span class=\"section-number\">4.6.3. </span>unit_scaling.transforms.prune_same_scale_tensors", "<span class=\"section-number\">4.6.4. </span>unit_scaling.transforms.prune_selected_nodes", "<span class=\"section-number\">4.6.5. </span>unit_scaling.transforms.simulate_format", "<span class=\"section-number\">4.6.6. </span>unit_scaling.transforms.simulate_fp8", "<span class=\"section-number\">4.6.7. </span>unit_scaling.transforms.track_scales", "<span class=\"section-number\">4.6.8. </span>unit_scaling.transforms.unit_scale", "<span class=\"section-number\">4.7. </span>unit_scaling.transforms.utils", "<span class=\"section-number\">4.7.1. </span>unit_scaling.transforms.utils.apply_transform", "<span class=\"section-number\">4.7.2. </span>unit_scaling.transforms.utils.patch_to_expand_modules", "<span class=\"section-number\">4.7.3. </span>unit_scaling.transforms.utils.replace_node_with_function", "<span class=\"section-number\">4.7.4. </span>unit_scaling.transforms.utils.torch_nn_modules_to_user_modules", "<span class=\"section-number\">4.8. </span>unit_scaling.utils", "<span class=\"section-number\">4.8.2. </span>unit_scaling.utils.ScalePair", "<span class=\"section-number\">4.8.3. </span>unit_scaling.utils.ScaleTracker", "<span class=\"section-number\">4.8.4. </span>unit_scaling.utils.ScaleTrackingInterpreter", "<span class=\"section-number\">4.8.1. </span>unit_scaling.utils.analyse_module", "<span class=\"section-number\">4.1.3. </span>unit_scaling.visualiser", "Unit Scaling", "<span class=\"section-number\">3. </span>Limitations", "Almost-scaled dot-product attention", "<span class=\"section-number\">1. </span>User guide"], "terms": {"unit": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 25, 28, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 70, 82, 84, 88, 89, 90, 91, 97, 101, 104], "scale": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 81, 82, 84, 85, 86, 88, 89, 90, 91, 97, 101, 102, 104], "i": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 21, 22, 23, 24, 27, 32, 39, 46, 47, 48, 49, 51, 52, 53, 57, 59, 60, 61, 62, 64, 65, 66, 72, 73, 76, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 102, 103, 104], "implement": [0, 6, 9, 12, 13, 15, 17, 18, 19, 24, 35, 59, 64, 65, 66, 76, 84, 91, 93, 101, 102, 103, 105, 106], "us": [0, 1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 22, 24, 25, 27, 29, 41, 47, 48, 53, 55, 56, 57, 59, 62, 64, 65, 66, 75, 76, 82, 83, 84, 86, 88, 89, 90, 91, 93, 94, 96, 99, 100, 101, 102, 103, 104, 106], "thin": 0, "wrapper": [0, 63, 91, 93], "around": [0, 76, 91, 93, 104], "exist": [0, 72, 76, 91, 106], "torch": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 22, 23, 24, 44, 45, 46, 48, 53, 59, 62, 64, 65, 66, 68, 69, 70, 71, 73, 74, 76, 82, 84, 88, 89, 90, 91, 93, 94, 96, 99, 101, 102, 104, 106], "nn": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 22, 23, 24, 44, 48, 59, 64, 65, 66, 71, 73, 74, 76, 84, 88, 89, 91, 93, 94, 96, 99, 100, 101, 102, 106], "class": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 40, 41, 46, 48, 59, 62, 63, 64, 65, 66, 71, 72, 74, 75, 76, 82, 83, 91, 96, 97, 98, 99, 100, 101, 106], "function": [0, 2, 3, 5, 6, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 25, 27, 34, 40, 63, 64, 65, 66, 71, 76, 78, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 106], "document": [0, 7, 17, 106], "also": [0, 3, 14, 16, 56, 60, 64, 65, 73, 74, 76, 90, 91, 99, 106], "inherit": 0, "from": [0, 4, 6, 7, 9, 10, 11, 17, 21, 23, 24, 47, 48, 64, 65, 66, 72, 76, 84, 85, 86, 88, 89, 90, 91, 93, 99, 100, 101, 102, 106], "standard": [0, 9, 17, 24, 40, 76, 84, 89, 91, 93, 98, 99, 100, 101, 102, 106], "pytorch": [0, 20, 59, 76, 84, 91, 106], "doc": [0, 1, 104], "modif": [0, 4, 5, 76, 99], "note": [0, 1, 3, 4, 5, 7, 9, 10, 11, 15, 18, 46, 48, 53, 59, 64, 65, 66, 76, 84, 90, 91, 93, 99, 105, 106], "some": [0, 3, 46, 51, 52, 53, 59, 64, 65, 66, 76, 91, 103, 106], "mai": [0, 3, 24, 51, 52, 53, 57, 59, 64, 65, 66, 76, 84, 86, 90, 91, 99, 102, 103, 104, 106], "longer": [0, 76], "relev": [0, 9, 23, 24, 70, 102], "ar": [0, 3, 4, 5, 6, 9, 10, 11, 15, 17, 23, 24, 39, 46, 48, 53, 57, 59, 64, 65, 66, 72, 75, 76, 81, 83, 86, 88, 89, 90, 91, 93, 99, 100, 102, 105, 106], "nevertheless": 0, "The": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 27, 38, 39, 41, 45, 46, 48, 49, 51, 52, 53, 57, 59, 60, 62, 64, 65, 66, 73, 76, 81, 84, 85, 86, 88, 89, 90, 91, 93, 99, 100, 103, 106], "built": [0, 101], "mirror": [0, 76], "close": 0, "possibl": [0, 48, 76, 106], "can": [0, 3, 4, 5, 6, 7, 23, 57, 59, 64, 65, 66, 75, 76, 84, 86, 90, 91, 99, 100, 103, 104, 106], "easili": 0, "swap": [0, 76, 106], "out": [0, 6, 10, 11, 45, 51, 52, 53, 55, 63, 76, 99, 103, 106], "equival": [0, 3, 7, 9, 59, 76, 88, 89, 91, 99, 101, 106], "For": [0, 1, 7, 9, 24, 36, 39, 53, 59, 64, 65, 66, 70, 76, 81, 90, 99, 102, 103, 106], "code": [0, 5, 24, 76, 101, 102, 105, 106], "which": [0, 3, 5, 9, 13, 17, 24, 57, 59, 62, 64, 65, 66, 70, 76, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 99, 100, 102, 106], "follow": [0, 1, 3, 24, 38, 53, 59, 64, 65, 66, 72, 76, 84, 90, 94, 99, 102, 103, 106], "import": [0, 23, 66, 84, 85, 86, 90, 91, 106], "f": [0, 38, 46, 48, 59, 64, 65, 66, 72, 76, 106], "appli": [0, 3, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 27, 38, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 70, 76, 79, 80, 84, 85, 86, 91, 93, 94, 99, 106], "first": [0, 1, 5, 7, 38, 53, 64, 65, 76, 84, 93, 99, 100, 106], "ad": [0, 5, 9, 15, 59, 64, 65, 66, 76, 90, 104, 106], "unit_sc": [0, 103, 104, 106], "uu": [0, 14, 70, 73, 106], "u": [0, 10, 11, 14, 39, 63, 64, 65, 66, 70, 71, 73, 74, 81, 91, 101, 105, 106], "replac": [0, 76, 91, 95, 106], "letter": 0, "those": [0, 3, 46, 76, 88, 89, 103, 106], "assum": [0, 30, 31, 32, 33, 106], "thei": [0, 5, 23, 24, 64, 65, 66, 75, 76, 91, 99, 102, 103, 106], "support": [0, 1, 3, 6, 7, 10, 11, 14, 24, 45, 46, 47, 48, 51, 52, 53, 59, 64, 65, 66, 73, 74, 76, 77, 84, 91, 93, 99, 102], "click": 0, "below": [0, 9, 17, 46, 106], "full": [0, 21, 64, 65, 66, 76, 90, 99, 106], "user": [1, 24, 59, 64, 65, 66, 76, 88, 89, 90, 91, 93, 96, 99, 102, 103], "who": [1, 103, 104, 106], "wish": [1, 93, 103, 106], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 38, 39, 41, 45, 47, 48, 49, 51, 52, 53, 57, 59, 60, 62, 64, 65, 66, 70, 72, 74, 76, 81, 84, 85, 86, 88, 89, 90, 91, 93, 94, 96, 99, 100, 102, 103, 104, 105, 106], "codebas": [1, 103, 106], "setup": 1, "requir": [1, 3, 59, 76, 90, 91, 99, 106], "time": [1, 9, 45, 53, 64, 65, 66, 76, 106], "python3": [1, 101], "m": [1, 6, 8, 10, 11, 16, 17, 53, 84, 88, 89, 90, 91, 93], "venv": 1, "sourc": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102], "bin": [1, 76], "activ": [1, 9, 16, 60, 88, 106], "pip": [1, 103, 106], "instal": 1, "r": [1, 7, 48, 76, 99], "dev": 1, "txt": 1, "Or": 1, "ipu": [1, 76], "subsequ": [1, 5], "run": [1, 5, 22, 23, 59, 64, 65, 66, 76, 88, 89, 100, 103, 106], "pre": [1, 64, 65, 66, 100, 106], "flight": 1, "check": [1, 70, 75, 76, 77, 99, 106], "help": [1, 103, 104, 106], "see": [1, 3, 7, 8, 10, 11, 12, 13, 16, 17, 18, 19, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 62, 75, 76, 91, 99, 100, 103, 104, 105, 106], "command": 1, "id": [1, 21, 64, 65, 66], "recommend": [1, 24, 28, 76, 102, 103, 106], "python": [1, 4, 76, 101], "intepret": 1, "set": [1, 3, 6, 9, 10, 11, 15, 39, 46, 47, 59, 64, 65, 66, 70, 72, 76, 81, 83, 87, 90, 91, 99, 106], "format": [1, 76, 88, 89, 103, 106], "save": [1, 64, 65, 66, 76, 99], "enabl": [1, 59, 66, 70, 76, 78, 91, 93, 99, 106], "consid": [1, 3, 76, 106], "env": [1, 99], "file": 1, "pythonpath": 1, "exampl": [1, 3, 5, 6, 7, 8, 9, 10, 11, 16, 17, 18, 36, 45, 46, 48, 53, 59, 64, 65, 66, 70, 75, 76, 99, 100, 101, 104, 106], "echo": 1, "pwd": 1, "differ": [1, 5, 10, 11, 24, 48, 53, 57, 59, 64, 65, 66, 76, 78, 84, 93, 102, 106], "path": [1, 21, 24, 102], "devcontain": 1, "cd": 1, "make": [1, 23, 59, 76, 91, 93, 96, 106], "html": 1, "view": [1, 23, 72, 76], "_build": 1, "index": [1, 3, 4, 7, 39, 48, 76, 81, 99], "your": [1, 76, 99, 106], "browser": 1, "version": [2, 24, 38, 44, 53, 64, 65, 66, 76, 84, 90, 91, 93, 94, 96, 102, 106], "common": [2, 25, 44, 45, 64, 65, 66, 104, 106], "modul": [2, 4, 5, 6, 7, 9, 10, 11, 15, 18, 22, 23, 24, 27, 34, 48, 53, 59, 76, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 96, 100, 101, 102, 106], "mult": [3, 8, 12, 16, 17, 46, 49, 59, 60, 61, 62], "float": [3, 6, 7, 8, 9, 12, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 76, 79, 80, 81, 83, 85, 86, 90, 98, 100, 102, 106], "1": [3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 36, 39, 45, 46, 48, 49, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 70, 76, 81, 86, 99, 101, 103, 106], "0": [3, 6, 7, 8, 9, 12, 16, 17, 18, 19, 36, 37, 39, 41, 45, 46, 47, 48, 49, 51, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 70, 75, 76, 81, 99, 101, 106], "weight": [3, 7, 9, 10, 11, 14, 15, 16, 18, 19, 36, 46, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 64, 65, 66, 70, 73, 76, 88, 91, 101, 106], "tensor": [3, 7, 10, 11, 14, 15, 17, 21, 23, 24, 37, 38, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 70, 73, 79, 80, 83, 85, 86, 90, 93, 98, 99, 100, 101, 102, 106], "none": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 23, 27, 37, 38, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 62, 64, 65, 66, 70, 72, 73, 76, 95, 96, 98, 99, 100, 101, 106], "size_averag": [3, 46, 54], "bool": [3, 6, 7, 9, 10, 11, 12, 15, 16, 19, 23, 24, 37, 46, 47, 48, 54, 59, 60, 64, 65, 66, 70, 76, 95, 99, 100, 101, 102], "ignore_index": [3, 46], "int": [3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 24, 37, 39, 41, 42, 43, 45, 46, 48, 50, 58, 62, 64, 65, 66, 73, 75, 76, 81, 83, 99, 100, 102, 106], "100": [3, 36, 46, 76], "reduc": [3, 46, 54, 76, 88, 89], "reduct": [3, 46, 54, 76], "str": [3, 8, 10, 11, 12, 13, 16, 17, 18, 19, 21, 23, 24, 27, 38, 41, 45, 46, 49, 51, 52, 53, 54, 60, 62, 64, 65, 66, 70, 76, 87, 100, 101, 102], "mean": [3, 6, 8, 9, 10, 11, 15, 16, 17, 23, 26, 28, 29, 37, 46, 51, 52, 54, 76, 84, 106], "label_smooth": [3, 46], "comput": [3, 6, 7, 9, 17, 26, 28, 29, 37, 39, 46, 48, 54, 59, 62, 64, 65, 76, 81, 99, 106], "cross": [3, 46, 76, 106], "entropi": [3, 46, 106], "loss": [3, 23, 24, 46, 64, 65, 66, 85, 86, 90, 102, 106], "between": [3, 5, 23, 36, 39, 46, 57, 64, 65, 66, 76, 81, 106], "input": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 30, 31, 32, 33, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 76, 79, 80, 86, 89, 90, 91, 99, 100, 101, 102, 106], "logit": [3, 46, 76], "target": [3, 46, 54, 66, 76, 87, 95, 100, 106], "It": [3, 5, 24, 62, 64, 65, 66, 76, 99, 102, 106], "when": [3, 5, 8, 9, 10, 11, 15, 17, 46, 49, 53, 59, 64, 65, 66, 76, 88, 89, 90, 94, 96, 100, 106], "train": [3, 6, 7, 9, 47, 48, 57, 59, 64, 65, 66, 103, 104, 106], "classif": 3, "problem": [3, 103, 106], "c": [3, 9, 45, 46, 59, 75, 76, 99], "If": [3, 6, 7, 9, 10, 11, 39, 46, 47, 48, 51, 52, 53, 59, 62, 64, 65, 66, 72, 76, 81, 88, 89, 99, 100], "provid": [3, 5, 24, 26, 28, 29, 30, 31, 32, 33, 59, 63, 64, 65, 66, 72, 76, 86, 90, 91, 102, 104, 106], "option": [3, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 21, 23, 24, 27, 38, 39, 45, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 70, 76, 81, 83, 86, 91, 93, 95, 99, 100, 101, 102], "argument": [3, 8, 49, 53, 59, 64, 65, 66, 76, 99, 100, 106], "should": [3, 17, 38, 46, 55, 57, 59, 64, 65, 66, 74, 76, 88, 89, 90, 91, 93, 94, 99, 100, 101, 106], "1d": 3, "assign": [3, 76], "each": [3, 5, 6, 7, 9, 10, 11, 23, 24, 46, 48, 51, 59, 64, 65, 66, 76, 88, 89, 90, 99, 100, 101, 102, 106], "particularli": [3, 106], "you": [3, 51, 52, 53, 59, 64, 65, 66, 76, 99, 100, 104, 106], "have": [3, 7, 22, 23, 48, 51, 52, 53, 57, 64, 65, 66, 76, 85, 86, 88, 89, 90, 91, 99, 103, 104, 106], "an": [3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 21, 22, 23, 24, 32, 38, 39, 47, 48, 53, 57, 59, 64, 65, 66, 70, 72, 73, 76, 81, 85, 86, 87, 88, 90, 91, 98, 99, 100, 102, 106], "unbalanc": 3, "expect": [3, 9, 15, 48, 76, 88, 89, 106], "contain": [3, 4, 5, 7, 22, 46, 48, 64, 65, 66, 76, 83, 85, 88, 89, 90, 95, 98, 99, 106], "unnorm": [3, 46], "do": [3, 6, 7, 47, 48, 64, 65, 66, 76, 99, 100, 105, 106], "need": [3, 57, 76, 84, 90, 99, 101, 106], "posit": [3, 18, 76, 100], "sum": [3, 15, 17, 46, 62, 76], "gener": [3, 21, 22, 23, 24, 41, 64, 65, 66, 75, 76, 85, 86, 91, 101, 102, 106], "ha": [3, 6, 9, 15, 27, 46, 53, 59, 64, 65, 66, 72, 76, 90, 91, 99, 105, 106], "size": [3, 7, 9, 10, 11, 12, 13, 18, 19, 21, 24, 46, 48, 59, 76, 99, 102], "unbatch": 3, "minibatch": [3, 46], "d_1": [3, 46], "d_2": [3, 46], "d_k": [3, 46], "k": [3, 10, 11, 46, 53, 72, 76], "geq": [3, 46], "dimension": [3, 7, 9, 17, 46, 53, 76], "case": [3, 8, 10, 11, 12, 13, 16, 17, 18, 19, 24, 38, 45, 46, 49, 51, 52, 53, 60, 62, 64, 65, 66, 72, 76, 86, 91, 94, 96, 102, 106], "last": [3, 5, 9, 10, 11, 50, 58, 72, 76, 84], "being": [3, 7, 46, 57, 64, 65, 66, 76, 84, 93, 99, 100], "higher": [3, 59, 76], "dimens": [3, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 50, 51, 52, 53, 58, 62, 76, 99], "per": [3, 9, 15, 46, 64, 65, 66, 70, 76, 99], "pixel": 3, "2d": [3, 76], "imag": [3, 9, 76], "criterion": 3, "either": [3, 46, 72, 76, 99], "indic": [3, 7, 23, 24, 46, 48, 59, 64, 65, 66, 76, 99, 102], "rang": [3, 17, 24, 62, 76, 84, 88, 89, 91, 100, 102, 106], "where": [3, 7, 8, 9, 10, 11, 16, 17, 46, 48, 49, 51, 52, 53, 59, 60, 61, 64, 65, 66, 76, 88, 90, 91, 100, 106], "number": [3, 8, 10, 11, 12, 16, 17, 18, 19, 21, 32, 40, 41, 45, 46, 48, 50, 51, 52, 58, 76, 106], "specifi": [3, 7, 46, 48, 59, 62, 64, 65, 66, 72, 76, 86, 90, 99, 106], "accept": [3, 5, 76, 99], "necessarili": [3, 76], "unreduc": 3, "e": [3, 7, 9, 48, 53, 59, 72, 76, 84, 85, 86, 90, 99], "describ": [3, 6, 9, 15, 39, 46, 76, 81, 105], "ell": 3, "x": [3, 8, 9, 15, 16, 23, 37, 41, 49, 60, 61, 75, 76, 91, 99, 101, 106], "y": [3, 9, 15, 51, 52, 76, 99], "l": [3, 59], "l_1": 3, "dot": [3, 53, 59, 76], "l_n": 3, "top": [3, 91], "quad": 3, "w_": 3, "y_n": 3, "log": [3, 76, 106], "frac": [3, 6, 9, 10, 11, 15, 17, 59, 62, 76], "exp": [3, 17, 62, 76], "x_": [3, 17, 62], "n": [3, 7, 9, 17, 46, 53, 59, 76, 100], "sum_": 3, "cdot": 3, "mathbb": 3, "text": [3, 7, 8, 9, 10, 11, 16, 17, 21, 45, 46, 49, 60, 61, 62, 64, 65, 66, 76], "ignor": [3, 46, 75, 76, 106], "_index": 3, "w": [3, 7, 9, 48, 76, 99], "span": [3, 76], "well": [3, 64, 65, 66, 76, 104, 106], "default": [3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 23, 24, 38, 39, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 62, 64, 65, 66, 70, 72, 76, 81, 86, 91, 93, 94, 95, 96, 99, 101, 102, 106], "begin": [3, 46, 64, 65, 66, 72, 76, 106], "end": [3, 4, 5, 18, 46, 64, 65, 66, 72, 76, 106], "logsoftmax": 3, "nllloss": 3, "probabl": [3, 6, 12, 18, 19, 46, 47, 59, 76], "label": [3, 21, 24, 102], "beyond": [3, 64, 65, 106], "singl": [3, 5, 9, 56, 64, 65, 66, 76, 84], "item": [3, 72, 76], "blend": 3, "smooth": [3, 46], "etc": 3, "w_c": 3, "y_": 3, "perform": [3, 5, 59, 62, 64, 65, 66, 70, 76, 99, 106], "better": [3, 59, 91], "allow": [3, 5, 57, 76, 84, 106], "optim": [3, 59, 84, 93, 94, 103], "onli": [3, 9, 24, 30, 31, 32, 33, 41, 46, 53, 59, 67, 75, 76, 79, 80, 84, 85, 88, 89, 90, 93, 99, 100, 102, 104, 106], "too": [3, 59, 76, 88, 89], "restrict": [3, 53], "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 100, 101, 102, 103], "manual": [3, 5, 46, 64, 65, 66, 76, 84, 91, 106], "rescal": [3, 17, 46], "given": [3, 4, 5, 7, 18, 21, 39, 41, 43, 46, 48, 59, 63, 72, 75, 76, 81, 85, 86, 87, 88, 89, 95, 99, 101, 106], "point": [3, 23, 24, 41, 48, 59, 76, 85, 86, 90, 102, 106], "dtype": [3, 7, 9, 10, 11, 46, 51, 52, 53, 59, 62, 76, 99, 100], "deprec": [3, 46, 76], "By": [3, 46, 76, 91, 94, 96, 106], "averag": [3, 39, 46, 64, 65, 81], "over": [3, 5, 9, 15, 46, 55, 56, 57, 59, 64, 65, 66, 76, 91, 99, 106], "element": [3, 6, 9, 15, 17, 38, 46, 47, 49, 54, 59, 62, 72, 76], "batch": [3, 7, 9, 21, 24, 46, 48, 53, 64, 65, 66, 76, 102], "multipl": [3, 46, 53, 76, 79, 80, 86, 106], "sampl": [3, 6, 7, 10, 11, 21, 46, 47, 48, 76], "field": [3, 46, 74, 76], "fals": [3, 6, 7, 9, 10, 11, 15, 16, 23, 37, 46, 47, 48, 59, 60, 64, 65, 66, 70, 72, 76, 99, 101], "instead": [3, 46, 64, 65, 66, 76], "true": [3, 6, 7, 9, 10, 11, 15, 23, 24, 46, 47, 48, 59, 64, 65, 66, 70, 72, 76, 88, 89, 95, 99, 100, 101, 102], "valu": [3, 5, 7, 9, 10, 11, 15, 17, 23, 24, 36, 41, 46, 55, 56, 57, 59, 64, 65, 66, 70, 72, 76, 85, 88, 89, 91, 99, 100, 102, 106], "doe": [3, 4, 5, 7, 46, 53, 59, 64, 65, 66, 70, 72, 76, 84, 93, 106], "contribut": [3, 7, 39, 46, 48, 55, 56, 57, 81], "gradient": [3, 7, 8, 10, 11, 12, 13, 16, 17, 18, 19, 30, 31, 32, 33, 38, 45, 46, 48, 49, 51, 52, 53, 57, 60, 62, 64, 65, 66, 76, 83, 88, 91, 99, 106], "non": [3, 7, 12, 19, 40, 41, 46, 48, 53, 57, 59, 70, 76, 86, 99, 106], "applic": [3, 46, 76, 99], "observ": [3, 46, 76], "depend": [3, 23, 46, 53, 59, 70, 76, 91, 100, 106], "return": [3, 5, 14, 17, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 43, 46, 53, 55, 57, 59, 61, 62, 64, 65, 66, 70, 72, 73, 75, 76, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 106], "output": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 23, 24, 30, 31, 32, 33, 38, 45, 46, 48, 49, 51, 52, 53, 59, 60, 61, 62, 73, 76, 85, 99, 100, 101, 102, 106], "taken": [3, 106], "process": [3, 7, 46, 64, 65, 66, 85, 91, 100], "meantim": [3, 46], "two": [3, 30, 46, 53, 57, 59, 64, 65, 66, 76, 84, 99, 106], "arg": [3, 5, 24, 38, 46, 64, 65, 66, 74, 76, 95, 99, 100, 102], "overrid": [3, 46, 99], "A": [3, 4, 5, 6, 7, 12, 13, 17, 18, 19, 46, 48, 53, 59, 62, 64, 65, 66, 76, 83, 84, 103, 106], "amount": [3, 46], "becom": [3, 5, 46, 76], "mixtur": [3, 46], "origin": [3, 16, 46, 60, 76, 80, 100], "ground": [3, 46], "truth": [3, 46], "uniform": [3, 46, 76], "distribut": [3, 6, 8, 46, 47, 49, 76, 104, 106], "rethink": [3, 46], "incept": [3, 46], "architectur": [3, 46], "vision": [3, 46], "multipli": [3, 8, 12, 16, 17, 46, 49, 53, 59, 60, 61, 62, 76, 106], "chang": [3, 4, 5, 7, 8, 12, 16, 17, 23, 46, 49, 59, 60, 61, 62, 64, 65, 66, 76, 84, 86, 106], "shape": [3, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 45, 46, 48, 49, 51, 52, 59, 60, 61, 62, 76, 99], "nonlinear": [3, 8, 12, 16, 17, 46, 49, 59, 60, 61, 62], "typic": [3, 8, 12, 16, 17, 46, 49, 59, 60, 61, 62, 76, 94, 96, 106], "high": [3, 8, 12, 16, 17, 46, 49, 59, 60, 61, 62, 76], "correspond": [3, 7, 8, 12, 16, 17, 24, 27, 43, 46, 48, 49, 59, 60, 61, 62, 64, 65, 66, 72, 76, 91, 99, 102], "sharper": [3, 8, 12, 16, 17, 46, 49, 59, 60, 61, 62], "low": [3, 8, 12, 16, 17, 46, 49, 59, 60, 61, 62, 76, 103, 106], "temperatur": [3, 8, 12, 16, 17, 46, 49, 59, 60, 61, 62], "while": [3, 8, 12, 16, 17, 46, 49, 59, 60, 61, 62, 76, 99], "flatter": [3, 8, 12, 16, 17, 46, 49, 59, 60, 61, 62], "same": [3, 5, 6, 8, 9, 10, 11, 16, 17, 39, 46, 53, 59, 61, 76, 81, 86, 88, 89, 99, 106], "otherwis": [3, 64, 65, 66, 72, 76, 99], "scalar": [3, 9, 53, 76, 79, 80, 98, 106], "align": [3, 46, 59, 64, 65, 66, 76], "randn": [3, 6, 8, 9, 10, 11, 16, 17, 45, 46, 76, 101, 106], "3": [3, 7, 8, 9, 17, 45, 46, 48, 49, 64, 65, 66, 76, 106], "5": [3, 5, 6, 7, 8, 9, 15, 36, 45, 46, 47, 48, 49, 51, 59, 64, 65, 66, 76, 106], "requires_grad": [3, 7, 46, 76, 99], "empti": [3, 76], "long": [3, 76], "random_": [3, 76], "backward": [3, 10, 11, 22, 23, 24, 41, 46, 53, 57, 64, 65, 66, 76, 78, 79, 83, 85, 86, 88, 89, 90, 91, 98, 99, 100, 101, 102, 106], "softmax": [3, 12, 18, 19, 46, 59, 76, 103, 106], "dim": [3, 17, 37, 46, 59, 62, 76], "iter": [4, 64, 65, 66, 70, 72, 76, 87, 93], "modulelist": [4, 5], "automat": [4, 5, 23, 24, 59, 76, 90, 91, 94, 99, 101, 102, 106], "configur": [4, 5], "depth": [4, 5, 39, 67, 81, 106], "sake": [4, 5, 82, 90], "track": [4, 5, 23, 24, 76, 85, 90, 102], "caus": [4, 5, 76, 106], "after": [4, 5, 27, 53, 64, 65, 66, 76, 91, 99], "initi": [4, 5, 7, 9, 10, 11, 15, 39, 48, 64, 65, 66, 76, 81, 106], "construct": [4, 5, 7, 14, 48, 73, 76], "like": [4, 5, 12, 18, 19, 64, 65, 66, 72, 76, 99, 106], "regular": [4, 6, 65, 70, 91], "list": [4, 5, 7, 9, 48, 64, 65, 66, 76, 93, 100, 104], "properli": 4, "regist": [4, 5, 64, 65, 66, 76], "visibl": 4, "all": [4, 7, 10, 11, 22, 23, 24, 39, 48, 59, 62, 64, 65, 66, 72, 76, 81, 85, 86, 87, 91, 99, 102, 106], "method": [4, 5, 24, 64, 70, 72, 76, 84, 85, 86, 88, 89, 90, 93, 99, 100, 101, 102, 103, 106], "add": [4, 55, 64, 65, 66, 76, 91, 103, 104, 106], "append": [4, 5, 18, 53, 76, 106], "extend": [4, 71, 99], "self": [4, 12, 16, 19, 59, 60, 64, 65, 66, 75, 76, 100, 101, 106], "insert": [4, 72, 88, 89], "befor": [4, 62, 64, 65, 66, 76, 88, 89, 99, 100, 106], "ani": [5, 6, 7, 8, 9, 10, 11, 16, 17, 23, 24, 32, 51, 52, 59, 63, 64, 65, 66, 70, 76, 87, 90, 91, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106], "sequenti": [5, 18], "order": [5, 57, 59, 64, 65, 66, 72, 76, 100, 106], "pass": [5, 7, 22, 23, 24, 41, 57, 59, 64, 65, 66, 70, 75, 76, 78, 79, 80, 83, 88, 89, 90, 91, 94, 98, 99, 100, 101, 102, 106], "constructor": 5, "altern": [5, 39, 63, 81, 106], "ordereddict": 5, "forward": [5, 6, 22, 23, 24, 41, 59, 76, 78, 79, 80, 83, 84, 88, 89, 90, 91, 93, 94, 98, 99, 100, 101, 102, 106], "chain": [5, 76, 90], "final": [5, 11, 52, 53, 90, 91], "call": [5, 6, 22, 23, 24, 59, 64, 65, 66, 76, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 101, 102], "sequenc": [5, 12, 19, 21, 24, 50, 76, 102], "treat": [5, 9, 17, 76], "whole": 5, "transform": [5, 9, 10, 11, 18, 19, 22, 23, 24, 38, 39, 51, 52, 63, 64, 65, 66, 76, 81, 102, 103, 104, 106], "store": [5, 7, 76, 100], "submodul": 5, "what": [5, 59, 64, 65, 66, 85, 99, 103], "": [5, 13, 30, 31, 32, 33, 51, 52, 53, 59, 64, 65, 66, 72, 76, 90, 99, 100, 101, 106], "exactli": [5, 106], "sound": 5, "On": [5, 10, 11, 53, 64, 65, 66], "other": [5, 20, 45, 53, 59, 64, 65, 66, 76, 90, 104, 106], "hand": 5, "layer": [5, 9, 10, 11, 12, 13, 15, 18, 19, 39, 50, 57, 64, 65, 66, 81, 84, 91, 106], "connect": [5, 19, 55, 56, 57, 91, 106], "cascad": 5, "wai": [5, 76, 84, 91, 99, 106], "creat": [5, 7, 70, 72, 76], "small": [5, 106], "model": [5, 20, 23, 24, 57, 64, 65, 66, 70, 85, 86, 88, 89, 90, 91, 97, 102, 103], "conv2d": 5, "20": [5, 6, 9, 10, 11, 45, 76], "relu": [5, 101], "64": [5, 59, 106], "second": [5, 7, 53, 64, 65, 99], "abov": [5, 59, 76, 106], "conv1": 5, "relu1": 5, "conv2": 5, "relu2": 5, "p": [6, 7, 14, 47, 48, 53, 59, 73, 76], "inplac": [6, 16, 47, 60, 64, 65, 66, 99, 101], "zero": [6, 7, 9, 14, 47, 48, 59, 64, 65, 66, 73, 76, 91, 99], "chosen": [6, 30, 31, 32, 33, 59], "independ": [6, 70, 76, 91], "bernoulli": [6, 47, 76], "channel": [6, 9, 76], "everi": [6, 17, 39, 76, 81, 99, 100], "proven": 6, "effect": [6, 76, 88, 89, 106], "techniqu": [6, 106], "prevent": [6, 62, 76, 99], "co": [6, 76], "adapt": [6, 106], "neuron": 6, "paper": [6, 9, 15, 39, 64, 65, 81, 91, 103, 106], "improv": [6, 59, 64, 65, 66], "neural": [6, 16, 60], "network": [6, 11, 16, 52, 60, 64, 65, 66], "featur": [6, 51, 52, 53, 103, 104, 106], "detector": 6, "_": [6, 59, 64, 65, 66, 99], "furthermor": [6, 76], "factor": [6, 13, 30, 31, 32, 33, 57, 59, 66, 67, 68, 69, 70, 78, 79, 80, 91, 106], "dure": [6, 7, 23, 24, 48, 59, 76, 99, 102, 106], "evalu": [6, 9, 59, 100, 106], "simpli": [6, 106], "ident": [6, 106], "oper": [6, 9, 15, 23, 24, 25, 47, 51, 52, 53, 59, 62, 76, 78, 86, 91, 99, 101, 102, 104, 106], "place": [6, 47, 48, 76, 99, 106], "2": [6, 7, 8, 9, 15, 16, 17, 37, 45, 48, 49, 51, 52, 53, 59, 64, 65, 66, 76, 86, 99, 101, 106], "16": [6, 76, 86, 106], "num_embed": 7, "embedding_dim": [7, 9, 48], "padding_idx": [7, 48], "max_norm": [7, 48], "norm_typ": [7, 48], "scale_grad_by_freq": [7, 48], "spars": [7, 17, 48, 51, 52, 53, 76], "_weight": 7, "_freez": 7, "devic": [7, 9, 10, 11, 51, 52, 53, 59, 76, 100], "lookup": [7, 48], "tabl": [7, 48], "look": [7, 48, 53, 64, 65, 66, 76, 100, 106], "up": [7, 48, 76, 99, 100, 106], "fix": [7, 48, 76, 106], "dictionari": [7, 64, 65, 66, 72, 76, 91], "often": [7, 48, 76, 106], "word": [7, 48], "retriev": [7, 27, 48, 76, 99, 100], "them": [7, 17, 62, 76, 91, 99, 100, 104], "vector": [7, 48, 53, 76], "entri": [7, 48, 64, 65, 66, 76], "therefor": [7, 48, 76], "updat": [7, 48, 70, 72, 76, 106], "remain": [7, 48], "pad": [7, 12, 19, 48, 76], "newli": 7, "anoth": [7, 76], "norm": [7, 10, 11, 14, 48, 73, 76], "larger": [7, 48, 55, 56, 57, 76, 91, 106], "than": [7, 48, 57, 59, 64, 65, 66, 76, 84, 90, 91, 100], "renorm": [7, 48, 76], "invers": [7, 48, 76], "frequenc": [7, 48], "mini": [7, 9, 48], "t": [7, 23, 24, 43, 48, 51, 52, 64, 65, 66, 75, 76, 84, 85, 86, 91, 93, 94, 96, 99, 102, 104, 106], "matrix": [7, 48, 53, 59, 76], "more": [7, 48, 59, 60, 62, 64, 65, 66, 76, 90, 99, 104, 106], "detail": [7, 8, 10, 11, 12, 13, 16, 17, 18, 19, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 62, 64, 65, 75, 76, 91, 99, 100, 104, 106], "regard": [7, 48, 64, 65, 106], "learnabl": [7, 9, 10, 11, 15], "mathcal": [7, 10, 11], "type": [7, 10, 11, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 45, 48, 55, 57, 59, 61, 62, 64, 65, 66, 70, 75, 76, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 100, 101, 102], "inttensor": [7, 76], "longtensor": [7, 48, 76], "arbitrari": [7, 22, 23, 24, 48, 59, 76, 91, 98, 102, 106], "extract": [7, 48, 100], "h": [7, 9, 76], "_dim": 7, "10": [7, 9, 14, 36, 45, 48, 73, 76, 101, 106], "4": [7, 13, 45, 48, 76, 99, 101, 103, 106], "9": [7, 48, 64, 65, 66, 76], "xdoctest": [7, 48, 66, 99], "ignore_w": [7, 48], "determinist": [7, 48, 59, 76], "0251": 7, "6902": 7, "7172": 7, "6431": 7, "0748": 7, "6969": 7, "4970": 7, "3448": 7, "9685": 7, "3677": 7, "7265": 7, "1685": 7, "4362": 7, "4004": 7, "9400": 7, "9124": 7, "3616": 7, "1151": 7, "0000": [7, 48, 76], "1535": 7, "0309": 7, "9315": 7, "1655": 7, "9897": 7, "0635": 7, "7895": 7, "7089": 7, "0364": 7, "6778": 7, "5803": 7, "2678": 7, "no_grad": [7, 64, 65, 66, 76], "ones": [7, 9, 15, 48, 59, 76], "classmethod": 7, "from_pretrain": 7, "freez": 7, "instanc": [7, 9, 64, 65, 66, 76, 90], "floattensor": [7, 76], "get": [7, 70, 72, 76, 104, 106], "learn": [7, 9, 10, 11, 16, 60, 64, 65, 66, 70, 106], "pretrain": 7, "6": [7, 45, 76, 101], "1000": [7, 36], "3000": 7, "constraint": [8, 10, 11, 12, 13, 16, 17, 18, 19, 38, 45, 49, 51, 52, 53, 60, 62, 100, 103, 106], "to_output_scal": [8, 10, 11, 12, 13, 16, 17, 18, 19, 38, 45, 49, 51, 52, 53, 60, 62, 103], "approxim": [8, 16, 49, 60, 106], "gaussian": [8, 16, 49, 60], "error": [8, 16, 23, 24, 49, 54, 59, 60, 76, 99, 100, 102], "linear": [8, 11, 16, 49, 52, 60, 61, 76, 88, 89, 101, 103, 106], "phi": [8, 49], "cumul": [8, 49], "tanh": [8, 49, 76], "estim": [8, 9, 49], "sqrt": [8, 9, 10, 11, 15, 37, 49, 59, 64, 65, 76], "pi": [8, 49, 76], "044715": [8, 49], "algorithm": [8, 59, 64, 65], "name": [8, 10, 11, 12, 13, 16, 17, 18, 19, 21, 24, 27, 38, 45, 49, 51, 52, 53, 60, 62, 76, 100, 102], "In": [8, 10, 11, 12, 13, 16, 17, 18, 19, 23, 38, 45, 49, 51, 52, 53, 57, 59, 60, 62, 72, 76, 91, 94, 99, 106], "must": [8, 10, 11, 12, 13, 16, 17, 18, 19, 27, 36, 38, 45, 49, 51, 52, 53, 59, 60, 62, 76, 84, 85, 86, 99, 106], "one": [8, 10, 11, 12, 13, 16, 17, 18, 19, 27, 38, 45, 49, 51, 52, 53, 57, 59, 60, 62, 64, 65, 66, 76, 84, 99, 106], "gmean": [8, 10, 11, 12, 13, 16, 17, 18, 19, 38, 45, 49, 51, 52, 53, 60, 62, 103, 106], "hmean": [8, 10, 11, 12, 13, 16, 17, 18, 19, 38, 45, 49, 51, 52, 53, 60, 62, 103], "amean": [8, 10, 11, 12, 13, 16, 17, 18, 19, 38, 45, 49, 51, 52, 53, 60, 62, 103], "to_grad_input_scal": [8, 10, 11, 13, 16, 17, 38, 49, 51, 52, 60, 62, 103], "normalized_shap": [9, 15, 50, 58], "ep": [9, 15, 37, 50, 58, 64, 65], "1e": [9, 15, 50, 58, 64, 65, 66, 76, 106], "05": [9, 15, 50, 58, 76, 86, 106], "elementwise_affin": [9, 15], "bia": [9, 10, 11, 14, 50, 51, 52, 59, 73, 101, 106], "normal": [9, 15, 41, 50, 58, 76, 106], "mathrm": [9, 37, 64, 65], "var": [9, 76], "epsilon": [9, 15, 37, 64, 65], "gamma": [9, 15, 64, 65, 66], "beta": [9, 51, 52, 53, 59, 64, 65, 76, 103, 106], "deviat": [9, 76, 98, 99, 100, 101, 106], "calcul": [9, 39, 67, 68, 69, 81], "d": [9, 51, 52, 72, 76, 99, 101, 106], "affin": [9, 76], "via": [9, 76, 85, 86, 90, 91, 100, 106], "bias": [9, 91], "unbias": 9, "unlik": [9, 23, 24, 76, 102, 106], "entir": [9, 76, 106], "plane": 9, "statist": 9, "data": [9, 10, 11, 14, 21, 51, 52, 62, 73, 76, 83, 100], "both": [9, 39, 53, 59, 76, 81, 99, 101, 106], "mode": [9, 59, 76, 99], "_shape": 9, "ldot": [9, 64, 65, 66, 76], "integ": [9, 45, 76, 99], "singleton": [9, 76], "specif": [9, 59, 64, 65, 66, 76, 88, 89, 100], "denomin": [9, 15, 64, 65], "numer": [9, 15, 23, 24, 48, 64, 65, 82, 88, 89, 102, 106], "stabil": [9, 15, 64, 65], "boolean": [9, 15, 59, 76, 99], "addit": [9, 10, 11, 17, 45, 51, 52, 64, 65, 66, 76, 90, 106], "nlp": 9, "sentence_length": 9, "embed": [9, 18, 39, 81, 103], "layer_norm": [9, 103], "three": [9, 31, 33, 59], "spatial": 9, "shown": [9, 23, 106], "in_featur": [10, 11], "out_featur": [10, 11], "weight_mup_typ": [10, 11], "liter": [10, 11, 14, 73, 76], "incom": [10, 11, 51, 52], "tensorfloat32": [10, 11, 51, 52, 53], "certain": [10, 11, 50, 53, 58, 64, 65, 66, 86, 100], "rocm": [10, 11, 53], "float16": [10, 11, 53, 59, 64, 65, 66, 76], "precis": [10, 11, 53, 59, 103, 106], "_featur": [10, 11, 51, 52], "h_": [10, 11], "includ": [10, 11, 51, 52, 76, 104], "30": [10, 11, 76], "128": [10, 11, 59, 76], "print": [10, 11, 101, 106], "appropri": [11, 70, 76], "hidden_s": [12, 13, 18, 19, 101], "head": [12, 18, 19], "is_caus": [12, 19, 59], "dropout_p": [12, 18, 19, 59], "multi": [12, 19], "attent": [12, 18, 19, 21, 39, 59, 81, 106], "warn": [12, 18, 19, 24, 59, 102], "here": [12, 18, 19, 59, 76, 91, 93, 104, 106], "give": [12, 18, 19, 76, 91, 103, 106], "incorrect": [12, 18, 19, 76, 99], "hidden": [12, 13, 18, 19], "causal": [12, 19, 59], "mask": [12, 18, 19, 21, 59, 76], "post": [12, 18, 19, 64, 65, 66, 76, 105], "dropout": [12, 18, 19, 59, 103], "expansion_factor": 13, "swiglu": 13, "intermedi": [13, 64, 65, 66, 90, 100], "increas": [13, 59, 99], "rel": [13, 19, 39, 55, 57, 76, 81, 86], "mup_typ": [14, 70, 73], "mup_scaling_depth": [14, 70, 73], "\u03bcp": [14, 39, 71, 73, 74, 81, 105], "object": [14, 64, 65, 66, 72, 73, 74, 76, 83, 90, 99], "annot": [14, 22, 73, 101], "parameterdata": [14, 67, 68, 69, 70, 73, 77], "protocol": [14, 73, 74, 77], "assert": [14, 59, 73], "tupl": [15, 21, 27, 37, 42, 43, 51, 57, 58, 64, 65, 66, 76, 95, 99, 100, 101, 106], "rm": [15, 58, 103], "normalis": [15, 57], "trail": 15, "root": 15, "squar": [15, 54, 59, 64, 65, 76], "sigmoid": [16, 60, 61, 76], "known": [16, 60, 104], "swish": [16, 60], "sigma": [16, 60, 61, 76], "logist": [16, 60, 61], "gelu": [16, 60, 91, 103, 106], "wa": [16, 60, 76, 100], "coin": [16, 60], "reinforc": [16, 60], "gate": [16, 60, 61], "experi": [16, 60, 106], "later": [16, 60, 76], "so": [17, 59, 62, 64, 65, 66, 76, 84, 90, 91, 93, 99, 100, 106], "lie": [17, 62], "li": 17, "adjust": 17, "accordingli": 17, "defin": [17, 27, 59, 62, 63, 64, 65, 66, 75, 76, 91, 99, 106], "x_i": [17, 62], "sum_j": [17, 62], "x_j": [17, 62], "unspecifi": [17, 64, 65, 66, 76], "inf": [17, 59, 76], "along": [17, 21, 62, 64, 65, 66, 76, 106], "slice": [17, 62, 76, 86, 100], "vocab_s": 18, "residual_sc": 18, "callabl": [18, 38, 39, 56, 64, 65, 66, 70, 76, 81, 87, 91, 93, 94, 95, 100, 101, 106], "transformer_residual_scaling_rul": [18, 103], "local": [18, 101], "_tau": 18, "decod": 18, "current": [18, 24, 59, 64, 65, 66, 76, 84, 91, 93, 100, 102, 103, 104, 105, 106], "just": [18, 21, 64, 65, 66, 76, 99, 100, 106], "demonstr": [18, 103], "lack": [18, 72], "kei": [18, 59, 72, 76, 83, 90, 91, 103], "usag": [18, 34, 76], "infer": [18, 76], "token": [18, 21, 24, 102], "vocabulari": 18, "residu": [18, 19, 39, 55, 56, 57, 81, 91, 106], "scheme": [18, 39, 76, 81], "control": [18, 59, 63, 106], "trunk": 18, "core": [18, 103], "mhsa_tau": 19, "mlp_tau": 19, "prenorm": 19, "http": [19, 76, 103, 106], "arxiv": 19, "org": 19, "ab": [19, 76], "2002": 19, "04745": 19, "branch": [19, 55, 56, 57, 106], "skip": [19, 55, 56, 57, 64, 65, 66, 99, 106], "mlp": [19, 39, 81, 101, 103, 106], "tool": [20, 106], "analys": [20, 101, 106], "metric": [20, 22, 23, 90, 103], "within": [20, 76, 84, 93, 100, 106], "pretrainedtokenizerbas": [21, 24, 102], "batch_siz": [21, 24, 99, 102, 106], "seq_len": [21, 24, 102], "dataset_path": [21, 24, 102], "wikitext": [21, 24, 102], "dataset_nam": [21, 24, 102], "103": [21, 24, 102], "v1": [21, 24, 102], "shuffle_buffer_s": 21, "10000": 21, "seed": 21, "1472": 21, "dataset": [21, 24, 102], "shift": [21, 76], "length": [21, 24, 76, 102], "huggingfac": [21, 24, 102], "visualis": [21, 23, 90, 103], "random": [21, 59, 76, 99], "chunk": [21, 76], "determin": [21, 53, 106], "10_000": 21, "shuffl": 21, "input_idx": 21, "attn_mask": [21, 24, 59, 102], "g": [22, 23, 39, 61, 64, 65, 76, 81, 85, 86, 90, 99], "graph": [22, 23, 24, 64, 65, 76, 85, 86, 87, 90, 91, 93, 94, 95, 96, 99, 100, 102], "datafram": 22, "convert": [22, 42, 76, 96, 106], "fx": [22, 23, 84, 85, 86, 87, 90, 93, 94, 96, 100, 101, 106], "panda": 22, "indend": 22, "been": [22, 23, 27, 76, 85, 86, 91, 99, 106], "track_scal": [22, 23, 24, 85, 86, 102, 103], "possibli": [22, 23], "scales_graph": [22, 23, 24, 85, 86, 90, 102], "result": [22, 23, 55, 57, 76, 90, 100], "inform": [22, 59, 76, 83, 86, 90], "intern": [22, 88, 89, 90], "plot": [22, 24, 90, 102, 103], "pd": 22, "titl": 23, "mean_ab": [23, 83], "prune_same_scal": 23, "show_arrow": 23, "show_error_bar": 23, "show_zero_tensor": 23, "xmin": 23, "xmax": 23, "ax": [23, 24, 102], "matplotlib": [23, 24, 102], "intend": [23, 64, 65, 66, 86, 90, 98, 99], "inpt": [23, 85, 86, 90], "don": [23, 24, 64, 65, 66, 85, 86, 102, 106], "prune": [23, 24, 85, 86, 87, 102], "deem": [23, 24, 86, 102], "perspect": [23, 24, 102, 106], "faint": [23, 24, 102], "colour": [23, 24, 102], "horizont": [23, 24, 102], "line": [23, 24, 102, 106], "row": [23, 24, 48, 76, 102], "repres": [23, 24, 76, 83, 87, 90, 91, 93, 95, 98, 99, 100, 101, 102, 106], "bar": [23, 24, 102], "maximum": [23, 24, 41, 48, 76, 102], "minimum": [23, 24, 41, 76, 102], "seen": [23, 24, 76, 102, 106], "show": [23, 103, 106], "axi": [23, 76], "abs_mean": [23, 83], "std": [23, 76, 83], "abs_max": [23, 83], "abs_min": [23, 83], "numel": [23, 76, 83], "practic": [23, 76, 90, 94, 106], "reshap": [23, 76, 86], "clearer": 23, "arrow": 23, "denot": [23, 76, 106], "max": [23, 64, 65, 76, 106], "min": [23, 76, 106], "displai": 23, "plot_kwarg": [24, 102], "experiment": [24, 76, 88, 89, 91, 102], "conveni": [24, 93, 102], "combin": [24, 51, 52, 53, 55, 56, 76, 84, 102, 106], "example_batch": [24, 102, 103], "work": [24, 59, 76, 84, 92, 101, 102, 103, 104, 106], "wide": [24, 91, 102], "interfac": [24, 91, 93, 102], "futur": [24, 76, 84, 99, 102], "now": [24, 76, 90, 94, 99, 102, 106], "we": [24, 64, 65, 66, 76, 86, 89, 91, 93, 99, 100, 102, 103, 104, 106], "re": [24, 62, 76, 102, 103, 104, 106], "base": [24, 51, 52, 59, 66, 70, 75, 99, 102, 106], "templat": [24, 102], "tracked_model": [24, 102], "keyword": [24, 59, 76, 100, 102], "alias": 25, "arithmet": 26, "group": [26, 27, 28, 29, 63, 64, 65, 66, 70, 76], "constrain": [26, 28, 29, 91, 106], "constraint_nam": 27, "rais": [27, 59, 72, 76, 99], "valueerror": 27, "geometr": [28, 76, 106], "harmon": 29, "xavier": [29, 106], "glorot": [29, 106], "output_scal": [30, 31, 32, 33, 38, 106], "grad_input_scal": [30, 32, 38, 106], "select": [30, 31, 32, 33, 59, 76], "op": [30, 31, 32, 33, 64, 65, 66, 76, 84, 88, 89, 99, 100, 104, 106], "equal": [30, 31, 32, 33, 39, 48, 55, 56, 57, 76, 81, 106], "left_grad_scal": [31, 33], "right_grad_scal": [31, 33], "left": [31, 33, 53, 59, 76, 106], "right": [31, 33, 53], "grad": [32, 38, 51, 64, 65, 66, 76, 79, 80, 99, 106], "compon": 34, "advanc": 34, "librari": [34, 90, 91, 103, 104, 106], "alpha": [36, 45, 76], "lower": [36, 59, 64, 65, 66], "upper": [36, 59, 76], "interpol": [36, 76], "logarithm": 36, "space": 36, "constant": 36, "ratio": [36, 39, 55, 56, 57, 76, 81, 106], "limit": [36, 59, 90, 103], "keepdim": [37, 76], "wise": [38, 49, 54], "take": [38, 59, 76, 91, 106], "its": [38, 53, 64, 65, 76, 80, 83, 84, 95, 99, 103, 106], "kwarg": [38, 64, 65, 66, 74, 76, 95, 99, 100], "residual_mult": [39, 81], "residual_attn_ratio": [39, 81], "tau": [39, 55, 56, 57, 66, 81, 106], "rule": [39, 59, 63, 64, 65, 66, 76, 81], "stack": [39, 81, 106], "start": [39, 76, 81, 100, 106], "ensur": [39, 59, 76, 81, 99, 100, 106], "varianc": [39, 81], "attn": [39, 81], "hyperparamet": [39, 81, 106], "total": [39, 76, 81], "appendix": [39, 81], "ffn": [39, 81], "fn": [39, 56, 81, 94], "simul": [40, 76, 88, 89], "exponent_bit": [41, 42, 43], "mantissa_bit": [41, 42, 43], "round": [41, 76, 88, 89], "stochast": [41, 64, 88, 89], "srbit": 41, "represent": [41, 76, 88, 89], "properti": [41, 76], "bit": [41, 76], "max_absolute_valu": 41, "absolut": [41, 76], "min_absolute_norm": 41, "min_absolute_subnorm": 41, "subnorm": 41, "quantis": [41, 88, 89], "differenti": [41, 64, 65, 66, 76, 99], "quantise_bwd": 41, "quantise_fwd": 41, "fpformat": [42, 43, 88, 103], "_i": 45, "broadcast": [45, 53, 59, 76], "promot": 45, "complex": [45, 76, 100], "to_left_grad_scal": [45, 53, 103], "to_right_grad_scal": [45, 53, 103], "0202": 45, "0985": 45, "3506": 45, "6056": 45, "21": 45, "19": 45, "3944": 45, "b": [45, 51, 52, 66, 76, 99], "9732": 45, "3497": 45, "6245": 45, "4022": 45, "3743": 45, "7724": 45, "5811": 45, "8017": 45, "7695": 45, "3930": 45, "3672": 45, "1450": 45, "18": [45, 76], "6971": 45, "0736": 45, "17": 45, "0994": 45, "3216": 45, "7845": 45, "1610": 45, "1868": 45, "4090": 45, "8": [45, 59, 64, 65, 76, 106], "9902": 45, "3667": 45, "7": [45, 76], "3925": 45, "6147": 45, "crossentropyloss": [46, 103, 106], "predict": [46, 76], "section": [46, 76, 103, 106], "divid": [46, 76], "randint": [46, 76], "int64": [46, 76], "dictionaryand": 48, "analyt": 48, "respect": [48, 64, 65, 66, 76, 99], "column": [48, 76], "modifi": [48, 64, 65, 66, 76, 99], "under": 48, "v": [48, 64, 65, 66, 72, 76], "embedding_matrix": 48, "rand": [48, 59, 76], "8490": 48, "9625": 48, "6753": 48, "9666": 48, "7761": 48, "6108": 48, "6246": 48, "9751": 48, "3618": 48, "4161": 48, "2419": 48, "7383": 48, "0237": 48, "7794": 48, "0528": 48, "3385": 48, "8612": 48, "1867": 48, "zero_": [48, 76], "5609": 48, "5384": 48, "8720": 48, "6262": 48, "2438": 48, "7471": 48, "layernorm": [50, 103], "scale_pow": 51, "xa": [51, 52], "layout": [51, 52, 53, 76, 100], "autograd": [51, 52, 53, 64, 65, 66, 76, 99], "notic": [51, 52, 53], "miss": [51, 52, 53, 104], "pleas": [51, 52, 53, 59, 64, 65, 76, 99, 105, 106], "open": [51, 52, 53], "request": [51, 52, 53, 64, 65, 66, 104], "power": 51, "product": [53, 59, 76], "behavior": [53, 64, 65, 66, 76, 99], "prepend": [53, 64, 65, 66, 76], "purpos": [53, 76, 88, 89, 106], "remov": [53, 64, 65, 66, 72, 76, 86, 95, 106], "least": [53, 76], "thu": [53, 106], "j": [53, 76], "logic": 53, "valid": [53, 76, 91, 106], "even": [53, 76, 106], "though": [53, 57, 76, 84, 93, 104, 106], "particular": [53, 76, 91, 106], "mm": [53, 76], "measur": [54, 106], "mseloss": 54, "togeth": [55, 106], "conjunct": [55, 57, 90, 94, 106], "residual_split": [55, 56, 103, 106], "come": [55, 76, 84], "favor": [55, 56, 57], "maintain": 56, "residual_add": [56, 57, 103, 106], "split": [57, 76], "prior": [57, 59, 99], "necessari": [57, 76, 85, 99, 106], "delai": [57, 76, 106], "still": [57, 76, 84, 91, 99, 104], "benefici": 57, "behav": [57, 64, 65, 66, 76], "rmsnorm": [58, 103], "queri": 59, "whatev": [59, 76], "underli": [59, 76, 84], "avail": [59, 90, 106], "flash": 59, "greater": [59, 76], "identifi": [59, 76, 85, 91], "versu": 59, "effici": [59, 76, 99, 106], "def": [59, 75, 76, 91, 99, 101, 106], "scale_factor": 59, "math": [59, 101], "els": [59, 64, 65, 66, 72, 76], "attn_bia": 59, "temp_mask": 59, "tril": [59, 76], "diagon": [59, 76], "masked_fill_": [59, 76], "logical_not": [59, 76], "attn_weight": 59, "transpos": [59, 76], "subject": [59, 76], "alwai": [59, 76, 90, 99], "accord": [59, 76, 91], "To": [59, 76, 96, 100, 103, 106], "disabl": [59, 70], "sure": 59, "mymodel": 59, "__init__": [59, 101, 106], "super": [59, 101, 106], "There": [59, 76, 99, 106], "flashattent": 59, "faster": [59, 106], "parallel": 59, "partit": 59, "memori": [59, 64, 65, 66, 76, 99, 106], "match": [59, 64, 65, 66, 76], "formul": 59, "kernel": [59, 76, 106], "cuda": [59, 64, 65, 66, 76], "backend": [59, 84, 93, 94], "attempt": [59, 106], "most": [59, 76, 99, 104, 106], "fine": [59, 64, 65, 66, 76], "grain": 59, "context": [59, 64, 65, 66, 76, 99], "manag": [59, 76], "prefer": 59, "mechan": [59, 106], "sdpa_kernel": 59, "enable_flash_sdp": 59, "global": [59, 70, 84], "enable_mem_efficient_sdp": 59, "enable_math_sdp": 59, "fuse": [59, 64, 65, 66, 106], "event": [59, 76], "reason": [59, 90, 104], "why": [59, 106], "cannot": [59, 76], "due": [59, 64, 65, 66, 76], "natur": 59, "float64": [59, 64, 65, 66, 76], "numerical_accuraci": 59, "circumst": 59, "cudnn": 59, "nondeterminist": [59, 76], "undesir": 59, "try": [59, 64, 65, 66, 106], "potenti": [59, 76], "cost": [59, 76], "ev": 59, "part": 59, "score": 59, "triangular": 59, "form": [59, 106], "causalbia": 59, "thrown": [59, 76], "32": [59, 76], "sdp_kernel": 59, "enable_math": 59, "silu": [61, 103], "desir": [62, 76, 106], "cast": [62, 76], "overflow": [62, 106], "mup": [63, 64, 65, 66, 70], "adam": [63, 65, 68, 70, 103], "adamw": [63, 68, 103], "sgd": [63, 69, 76, 103], "box": [63, 100, 103, 106], "scaled_paramet": [63, 103], "finer": 63, "downstream": 63, "lr": [63, 64, 65, 66, 67, 68, 69, 70, 76], "param": [64, 65, 66, 67, 68, 69, 70, 76], "dict": [64, 65, 66, 70, 72, 76, 91, 95, 100], "001": [64, 65, 66], "weight_decai": [64, 65, 66, 70], "independent_weight_decai": [64, 65, 66, 70], "allow_non_unit_scaling_param": [64, 65, 66, 70], "110mm": [64, 65, 66], "4pt": [64, 65, 66], "textbf": [64, 65, 66], "beta_1": [64, 65], "beta_2": [64, 65], "theta_0": [64, 65, 66], "theta": [64, 65, 66], "hspace": [64, 65, 66], "13mm": [64, 65, 66], "lambda": [64, 65, 66, 76], "decai": [64, 65, 66, 70], "textit": [64, 65, 66], "amsgrad": [64, 65], "maxim": [64, 65, 66], "m_0": [64, 65], "leftarrow": [64, 65, 66], "moment": [64, 65], "v_0": [64, 65], "widehat": [64, 65], "ex": [64, 65, 66], "5mm": [64, 65, 66], "10mm": [64, 65, 66], "g_t": [64, 65, 66], "nabla_": [64, 65, 66], "f_t": [64, 65, 66], "theta_": [64, 65, 66], "neq": [64, 66], "m_t": [64, 65], "m_": [64, 65], "v_t": [64, 65], "v_": [64, 65], "2_t": [64, 65], "big": [64, 65], "theta_t": [64, 65, 66], "bf": [64, 65, 66], "further": [64, 65, 76, 106], "refer": [64, 65, 76, 103, 105, 106], "rate": [64, 65, 66, 70], "yet": [64, 65, 76, 91, 103, 106], "our": [64, 65, 91, 93, 99, 103, 104, 106], "captur": [64, 65, 94, 96], "coeffici": [64, 65], "999": [64, 65, 101, 106], "term": [64, 65, 76, 106], "l2": [64, 66], "penalti": [64, 66], "whether": [64, 65, 66, 76, 91, 99], "variant": [64, 65], "converg": [64, 65], "foreach": [64, 65, 66], "loop": [64, 65, 66], "sinc": [64, 65, 66, 76], "usual": [64, 65, 66, 76, 106], "significantli": [64, 65, 66, 106], "sizeof": [64, 65, 66], "peak": [64, 65, 66], "tensorlist": [64, 65, 66], "prohibit": [64, 65, 66], "fewer": [64, 65, 66], "through": [64, 65, 66, 76, 99, 100, 104, 106], "switch": [64, 65, 66], "flag": [64, 65, 66], "minim": [64, 65, 66], "safe": [64, 65, 76], "impair": [64, 65, 66], "ungraph": [64, 65], "leav": [64, 65, 66, 76, 106], "occur": [64, 65, 66, 76, 106], "step": [64, 65, 66, 70, 76, 106], "float32": [64, 65, 66, 76], "bfloat16": [64, 65, 66, 76], "add_param_group": [64, 65, 66], "param_group": [64, 65, 66, 70], "tune": [64, 65, 66, 106], "frozen": [64, 65, 66], "made": [64, 65, 66, 99], "trainabl": [64, 65, 66], "progress": [64, 65, 66, 76], "load_state_dict": [64, 65, 66, 76], "state_dict": [64, 65, 66], "load": [64, 65, 66, 76], "state": [64, 65, 66, 76], "register_load_state_dict_post_hook": [64, 65, 66], "hook": [64, 65, 66, 76, 99], "removablehandl": [64, 65, 66], "signatur": [64, 65, 66, 75, 76, 99], "fire": [64, 65, 66], "alreadi": [64, 65, 66, 76], "handl": [64, 65, 66, 76, 99, 100], "util": [64, 65, 66, 76, 103, 106], "removeablehandl": [64, 65, 66], "register_load_state_dict_pre_hook": [64, 65, 66], "shallow": [64, 65, 66, 72], "copi": [64, 65, 66, 72, 76, 91], "new": [64, 65, 66, 72, 76, 84, 88, 89, 90, 93, 94, 95, 103, 104, 106], "register_state_dict_post_hook": [64, 65, 66], "register_state_dict_pre_hook": [64, 65, 66], "register_step_post_hook": [64, 65, 66], "register_step_pre_hook": [64, 65, 66], "new_arg": [64, 65, 66], "new_kwarg": [64, 65, 66], "hold": [64, 65, 66, 76], "Its": [64, 65, 66], "content": [64, 65, 66, 99], "characterist": [64, 65, 66], "itself": [64, 65, 66, 76], "NOT": [64, 65, 66], "map": [64, 65, 66, 76, 100], "metadata": [64, 65, 66, 74], "associ": [64, 65, 66, 90], "zip": [64, 65, 66], "actual": [64, 65, 66, 76], "without": [64, 65, 66, 76, 84, 101, 104, 106], "verif": [64, 65, 66], "might": [64, 65, 66, 76, 106], "someth": [64, 65, 66, 106], "momentum_buff": [64, 65, 66], "01": [64, 65, 66, 76, 106], "closur": [64, 65, 66], "reevalu": [64, 65, 66], "zero_grad": [64, 65, 66], "set_to_non": [64, 65, 66], "reset": [64, 65, 66], "footprint": [64, 65, 66], "modestli": [64, 65, 66], "howev": [64, 65, 66, 76, 91, 93, 106], "tri": [64, 65, 66, 76], "access": [64, 65, 66, 76, 90, 99], "attribut": [64, 65, 66, 71, 75, 76, 99, 100], "guarante": [64, 65, 66, 76, 100, 104], "did": [64, 65, 66], "receiv": [64, 65, 66, 106], "altogeth": [64, 65, 66], "decoupl": 65, "mu": [66, 76], "momentum": 66, "dampen": 66, "nesterov": 66, "15mm": 66, "_t": 66, "g_": 66, "formula": [66, 99], "deep": [66, 106], "__": 66, "loss_fn": 66, "lr_scale_func": 70, "adam_lr_scale_func": 70, "paramst": 70, "tag": [70, 74], "lr_scale_func_sgd": [70, 103], "overridden": [70, 99], "fail": [70, 76, 106], "rememb": 72, "clear": [72, 100], "od": 72, "fromkei": 72, "move_to_end": 72, "move": [72, 76, 84, 93, 105], "keyerror": 72, "pop": 72, "found": [72, 103, 106], "popitem": 72, "pair": [72, 76, 98], "lifo": 72, "fifo": 72, "setdefault": 72, "present": [72, 76, 95, 103, 106], "extra": [74, 106], "implicitli": 74, "proto": 75, "meth": 75, "Such": 75, "primarili": 75, "static": [75, 99], "checker": 75, "recogn": 75, "structur": [75, 99, 100], "subtyp": 75, "duck": 75, "func": [75, 99], "pep": 75, "544": 75, "decor": [75, 99], "runtime_check": 75, "act": 75, "simpl": [75, 76], "mind": 75, "runtim": 75, "presenc": 75, "genproto": 75, "conjug": 76, "conj": 76, "matric": 76, "real": 76, "mh": 76, "revers": 76, "permut": 76, "throw": 76, "releas": [76, 84, 103, 106], "mt": 76, "arang": 76, "ndim": 76, "abs_": 76, "alia": 76, "absolute_": 76, "aco": 76, "acos_": 76, "acosh": 76, "acosh_": 76, "add_": 76, "addbmm": 76, "batch1": 76, "batch2": 76, "addbmm_": 76, "addcdiv": 76, "tensor1": 76, "tensor2": 76, "addcdiv_": 76, "addcmul": 76, "addcmul_": 76, "addmm": 76, "mat1": 76, "mat2": 76, "addmm_": 76, "addmv": 76, "mat": 76, "vec": 76, "addmv_": 76, "addr": 76, "vec1": 76, "vec2": 76, "addr_": 76, "adjoint": 76, "align_a": 76, "explicit": 76, "align_to": 76, "127": 76, "refine_nam": 76, "img": 76, "scale_channel": 76, "num_channel": 76, "more_img": 76, "video": [76, 103], "agnost": 76, "api": [76, 100, 103, 106], "ellipsi": 76, "expand": [76, 99], "mention": 76, "appear": 76, "string": [76, 101], "unment": 76, "named_tensor": 76, "front": 76, "keep": [76, 106], "rest": 76, "allclos": 76, "rtol": [76, 86], "atol": 76, "08": 76, "equal_nan": 76, "amax": 76, "amin": 76, "aminmax": 76, "angl": 76, "apply_": 76, "cpu": 76, "arcco": 76, "arccos_": 76, "arccosh": 76, "arccosh_": 76, "arcsin": 76, "arcsin_": 76, "arcsinh": 76, "arcsinh_": 76, "arctan": 76, "arctan2": 76, "arctan2_": 76, "atan2_": 76, "arctan_": 76, "arctanh": 76, "arctanh_": 76, "argmax": 76, "argmin": 76, "argsort": 76, "descend": [76, 100], "argwher": 76, "as_strid": 76, "stride": 76, "storage_offset": 76, "as_strided_": 76, "as_strided_scatt": 76, "src": 76, "as_subclass": 76, "cl": 76, "pointer": 76, "stai": [76, 106], "attach": 76, "subclass": [76, 99], "asin": 76, "asin_": 76, "asinh": 76, "asinh_": 76, "atan": 76, "atan2": 76, "atan_": 76, "atanh": 76, "atanh_": 76, "retain_graph": 76, "create_graph": 76, "wrt": 76, "addition": 76, "accumul": 76, "stream": 76, "semant": [76, 100], "leaf": 76, "grad_fn": 76, "strictli": 76, "reli": [76, 91], "github": [76, 103, 106], "com": [76, 103, 106], "pull": 76, "60521": 76, "issuecom": 76, "867061780": 76, "omit": 76, "freed": 76, "nearli": 76, "much": [76, 91, 106], "deriv": [76, 106], "were": [76, 99], "baddbmm": 76, "baddbmm_": 76, "texttt": 76, "bernoulli_": 76, "fill": 76, "locat": 76, "integr": 76, "draw": 76, "binari": 76, "th": 76, "_tensor": 76, "memory_format": [76, 100], "preserve_format": 76, "bincount": 76, "minlength": 76, "bitwise_and": 76, "bitwise_and_": 76, "bitwise_left_shift": 76, "bitwise_left_shift_": 76, "bitwise_not": 76, "bitwise_not_": 76, "bitwise_or": 76, "bitwise_or_": 76, "bitwise_right_shift": 76, "bitwise_right_shift_": 76, "bitwise_xor": 76, "bitwise_xor_": 76, "bmm": 76, "broadcast_to": 76, "byte": 76, "uint8": 76, "cauchy_": 76, "median": 76, "drawn": 76, "cauchi": 76, "dfrac": 76, "cdoubl": 76, "complex128": 76, "ceil": 76, "ceil_": 76, "cfloat": 76, "complex64": 76, "chalf": 76, "complex32": 76, "char": 76, "int8": 76, "choleski": 76, "cholesky_invers": 76, "cholesky_solv": 76, "input2": 76, "clamp": 76, "clamp_": 76, "clip": [76, 106], "clip_": 76, "clone": [76, 99, 103, 106], "coalesc": 76, "uncoalesc": 76, "coo": 76, "col_indic": 76, "csr": 76, "sparse_csr": 76, "nnz": 76, "int32": 76, "mkl": 76, "routin": 76, "avoid": 76, "downcast": 76, "lose": 76, "ey": 76, "to_sparse_csr": 76, "conj_phys": 76, "conj_physical_": 76, "contigu": 76, "contiguous_format": 76, "copy_": 76, "non_block": 76, "resid": 76, "gpu": 76, "asynchron": 76, "host": 76, "copysign": 76, "copysign_": 76, "corrcoef": 76, "cos_": 76, "cosh": 76, "cosh_": 76, "count_nonzero": 76, "cov": 76, "correct": [76, 88, 89, 99, 106], "fweight": 76, "aweight": 76, "crow_indic": 76, "compress": 76, "destin": 76, "pin": 76, "cummax": 76, "cummin": 76, "cumprod": 76, "cumprod_": 76, "cumsum": 76, "cumsum_": 76, "data_ptr": 76, "address": [76, 84, 106], "deg2rad": 76, "deg2rad_": 76, "dense_dim": 76, "dens": 76, "len": 76, "sparse_dim": 76, "hybrid": 76, "dequant": 76, "quantiz": 76, "det": 76, "detach": 76, "never": [76, 86], "affect": 76, "share": [76, 99, 106], "storag": [76, 99], "trigger": 76, "detach_": 76, "diag": 76, "diag_emb": 76, "offset": 76, "dim1": 76, "dim2": 76, "diagflat": 76, "diagonal_scatt": 76, "diff": 76, "digamma": 76, "digamma_": 76, "dim_ord": 76, "physic": 76, "how": [76, 99, 103], "laid": 76, "outermost": 76, "innermost": 76, "channels_last": 76, "dist": 76, "div": 76, "rounding_mod": 76, "div_": 76, "divide_": 76, "doubl": [76, 99], "dsplit": 76, "split_size_or_sect": 76, "element_s": 76, "individu": 76, "eq": 76, "eq_": 76, "erf": 76, "erf_": 76, "erfc": 76, "erfc_": 76, "erfinv": 76, "erfinv_": 76, "exp2": 76, "exp2_": 76, "exp_": 76, "alloc": 76, "As": [76, 89, 106], "especi": 76, "write": 76, "expand_a": 76, "about": [76, 83], "expm1": 76, "expm1_": 76, "exponential_": 76, "lambd": 76, "pdf": 76, "densiti": 76, "theori": [76, 106], "exponenti": 76, "interv": 76, "impli": 76, "fill_": 76, "fill_diagonal_": 76, "fill_valu": 76, "wrap": [76, 94, 100, 101, 106], "main": 76, "tall": 76, "fix_": 76, "flatten": 76, "start_dim": 76, "end_dim": 76, "flip": 76, "fliplr": 76, "flipud": 76, "float_pow": 76, "expon": 76, "float_power_": 76, "floor": 76, "floor_": 76, "floor_divid": 76, "floor_divide_": 76, "fmax": 76, "fmin": 76, "fmod": 76, "divisor": 76, "fmod_": 76, "frac_": 76, "frexp": 76, "mantissa": 76, "gather": 76, "gcd": 76, "gcd_": 76, "ge": 76, "ge_": 76, "geometric_": 76, "trial": 76, "success": 76, "henc": [76, 91], "wherea": 76, "geqrf": 76, "ger": 76, "get_devic": 76, "ordin": 76, "greater_": 76, "greater_equ": 76, "greater_equal_": 76, "gt": 76, "gt_": 76, "half": 76, "hardshrink": 76, "has_nam": 76, "heavisid": 76, "heaviside_": 76, "histc": 76, "histogram": 76, "hsplit": 76, "hypot": 76, "hypot_": 76, "i0": 76, "i0_": 76, "igamma": 76, "igamma_": 76, "igammac": 76, "igammac_": 76, "imaginari": 76, "3100": 76, "3553j": 76, "5445": 76, "7896j": 76, "6492": 76, "0633j": 76, "0638": 76, "8119j": 76, "3553": 76, "7896": 76, "0633": 76, "8119": 76, "index_add": 76, "index_add_": [76, 99], "subtract": 76, "index_copi": 76, "index_copy_": 76, "duplic": 76, "index_fil": 76, "index_fill_": 76, "index_put": 76, "index_put_": 76, "put": [76, 106], "express": [76, 91, 95], "undefin": [76, 99], "index_reduce_": 76, "include_self": 76, "prod": 76, "identit": 76, "11": 76, "12": 76, "44": 76, "72": 76, "14": 76, "22": 76, "36": 76, "index_select": 76, "inner": [76, 91], "int_repr": 76, "uint8_t": 76, "is_coalesc": 76, "is_complex": 76, "is_conj": 76, "is_contigu": 76, "is_cpu": 76, "is_cuda": 76, "is_floating_point": 76, "is_infer": 76, "is_ipu": 76, "is_leaf": 76, "convent": [76, 100], "popul": [76, 100], "retain_grad": 76, "engin": [76, 99], "requires_grad_": [76, 90, 101, 106], "is_meta": 76, "meta": [76, 90], "carri": 76, "is_mp": 76, "mp": 76, "is_neg": 76, "neg": 76, "is_pin": 76, "is_quant": 76, "is_set_to": 76, "exact": [76, 106], "is_shar": 76, "is_sign": 76, "sign": [76, 106], "is_spars": 76, "is_sparse_csr": 76, "is_xla": 76, "xla": 76, "is_xpu": 76, "xpu": 76, "isclos": 76, "isfinit": 76, "isinf": 76, "isnan": 76, "isneginf": 76, "isposinf": 76, "isreal": 76, "istft": 76, "n_fft": 76, "hop_length": 76, "win_length": 76, "window": 76, "center": 76, "onesid": 76, "return_complex": 76, "tolist": 76, "items": 76, "kron": 76, "kthvalu": 76, "lcm": 76, "lcm_": 76, "ldexp": 76, "ldexp_": 76, "le": 76, "le_": 76, "lerp": 76, "lerp_": 76, "less": 76, "lt": 76, "less_": 76, "less_equ": 76, "less_equal_": 76, "lgamma": 76, "lgamma_": 76, "log10": 76, "log10_": 76, "log1p": 76, "log1p_": 76, "log2": 76, "log2_": 76, "log_": 76, "log_normal_": 76, "parameter": 76, "ln": 76, "logaddexp": 76, "logaddexp2": 76, "logcumsumexp": 76, "logdet": 76, "logical_and": 76, "logical_and_": 76, "logical_not_": 76, "logical_or": 76, "logical_or_": 76, "logical_xor": 76, "logical_xor_": 76, "logit_": 76, "logsumexp": 76, "lt_": 76, "lu": 76, "pivot": 76, "get_info": 76, "lu_solv": 76, "lu_data": 76, "lu_pivot": 76, "map_": 76, "masked_fil": 76, "booltensor": 76, "masked_scatt": 76, "masked_scatter_": 76, "continu": 76, "occurr": 76, "mani": [76, 91, 99, 106], "masked_select": 76, "matmul": [76, 88, 89, 103], "matrix_exp": 76, "matrix_pow": 76, "linalg": 76, "module_load": 76, "get_swap_module_params_on_convers": 76, "buffer": 76, "remap": 76, "swap_tensor": 76, "moveaxi": 76, "movedim": 76, "msort": 76, "mul": 76, "mul_": 76, "multinomi": 76, "num_sampl": 76, "multiply_": 76, "mv": 76, "mvlgamma": 76, "mvlgamma_": 76, "idx": [76, 99], "unnam": 76, "charact": 76, "underscor": 76, "variabl": [76, 99], "nan_to_num": 76, "nan": 76, "posinf": 76, "neginf": 76, "nan_to_num_": 76, "nanmean": 76, "nanmedian": 76, "nanquantil": 76, "q": 76, "nansum": 76, "narrow": 76, "narrow_copi": 76, "nbyte": 76, "consum": 76, "ndimens": 76, "ne": 76, "ne_": 76, "neg_": 76, "negative_": 76, "nelement": 76, "new_empti": 76, "pin_memori": 76, "uniniti": 76, "record": [76, 90, 99, 100], "would": [76, 99], "8182e": 76, "5765e": 76, "41": 76, "0545e": 76, "0949e": 76, "4842e": 76, "0000e": 76, "00": 76, "new_empty_strid": 76, "new_ful": 76, "141592": 76, "1416": 76, "new_on": 76, "new_tensor": 76, "want": [76, 104], "numpi": [76, 99], "arrai": 76, "from_numpi": 76, "read": [76, 106], "array_lik": 76, "new_zero": 76, "nextaft": 76, "nextafter_": 76, "nonzero": 76, "nonzero_stat": 76, "count": 76, "truncat": 76, "smaller": [76, 106], "invalid": 76, "input_tensor": 76, "static_s": 76, "rank": 76, "fro": 76, "normal_": 76, "not_equ": 76, "not_equal_": 76, "forc": 76, "ndarrai": 76, "convers": [76, 106], "reflect": [76, 101, 105, 106], "vice": 76, "versa": 76, "resolve_conj": 76, "resolve_neg": 76, "isn": 76, "won": 76, "shorthand": 76, "orgqr": 76, "ormqr": 76, "input3": 76, "outer": 76, "pinvers": 76, "polygamma": 76, "polygamma_": 76, "pow": 76, "pow_": 76, "put_": 76, "q_per_channel_axi": 76, "q_per_channel_scal": 76, "q_per_channel_zero_point": 76, "zero_point": 76, "q_scale": 76, "q_zero_point": 76, "qr": 76, "qscheme": 76, "qtensor": 76, "quantil": 76, "rad2deg": 76, "rad2deg_": 76, "discret": 76, "bound": 76, "53": 76, "ravel": 76, "reciproc": 76, "reciprocal_": 76, "record_stream": 76, "mark": [76, 99], "dealloc": [76, 100], "reus": 76, "until": [76, 106], "queu": 76, "complet": [76, 87, 104], "cach": [76, 84, 93], "awar": 76, "correctli": 76, "life": 76, "cycl": 76, "But": 76, "unexpectedli": 76, "let": 76, "know": [76, 99], "suitabl": 76, "side": 76, "abl": [76, 91, 106], "think": 76, "carefulli": 76, "safeti": 76, "These": [76, 90, 106], "analog": 76, "tradeoff": 76, "gc": 76, "situat": 76, "lifetim": 76, "poll": 76, "race": 76, "creation": 76, "sync": 76, "back": 76, "suffici": [76, 91, 106], "realloc": 76, "done": [76, 91], "counterintuit": 76, "old": [76, 106], "becaus": [76, 106], "wait": 76, "concret": [76, 100], "s0": 76, "s1": 76, "wait_stream": 76, "some_comm_op": 76, "synchron": 76, "del": 76, "decid": 76, "immedi": 76, "wouldn": 76, "finish": 76, "profil": 76, "chrome": 76, "trace": [76, 91], "produc": [76, 106], "export_chrome_trac": 76, "earli": 76, "block": [76, 106], "overlap": 76, "commun": 76, "late": 76, "live": 76, "guidanc": 76, "fsdp": 76, "cudacachingalloc": 76, "refin": 76, "special": [76, 91, 104], "renam": 76, "lift": 76, "coexist": 76, "nice": 76, "greedili": 76, "named_img": 76, "register_hook": 76, "execut": [76, 84, 93, 100], "register_post_accumulate_grad_hook": 76, "unless": [76, 99], "enable_grad": 76, "0100": 76, "0200": 76, "0300": 76, "remaind": 76, "remainder_": 76, "rename_map": 76, "position": 76, "drop": [76, 106], "One": 76, "renamed_img": 76, "height": 76, "width": 76, "rename_": 76, "maxnorm": 76, "renorm_": 76, "repeat": [76, 106], "similar": [76, 99, 106], "tile": 76, "repeat_interleav": 76, "output_s": 76, "fact": [76, 106], "tell": 76, "obtain": 76, "dataload": 76, "preprocess": 76, "sai": 76, "saved_weight": 76, "25": 76, "loaded_weight": 76, "5503": 76, "4926": 76, "1158": 76, "8303": 76, "1007": 76, "9853": 76, "2316": 76, "6606": 76, "compat": [76, 100], "reshape_a": 76, "resize_": 76, "resiz": 76, "fit": 76, "preserv": [76, 106], "level": [76, 106], "reinterpret": 76, "unchang": [76, 79], "custom": [76, 91, 99], "set_": 76, "use_deterministic_algorithm": 76, "fill_uninitialized_memori": 76, "go": [76, 99, 106], "unaffect": 76, "resize_as_": 76, "retains_grad": 76, "roll": 76, "rot90": 76, "decim": 76, "round_": 76, "rsqrt": 76, "rsqrt_": 76, "scatter": 76, "scatter_": 76, "manner": 76, "moreov": 76, "inclus": 76, "uniqu": 76, "pick": 76, "arbitrarili": 76, "propag": 76, "scatter_add_": 76, "scatter_reduce_": 76, "23": 76, "4600": 76, "2300": 76, "previou": [76, 86, 91], "scatter_add": 76, "fashion": 76, "scatter_reduc": 76, "select_scatt": 76, "sgn": 76, "sgn_": 76, "share_memory_": 76, "untypedstorag": 76, "short": 76, "int16": 76, "sigmoid_": 76, "sign_": 76, "signbit": 76, "sin": 76, "sin_": 76, "sinc_": 76, "sinh": 76, "sinh_": 76, "slice_scatt": 76, "slogdet": 76, "smm": 76, "sort": [76, 99], "sparse_mask": 76, "filter": 76, "advis": 76, "whose": [76, 101], "nse": 76, "cat": 76, "sparse_coo_tensor": 76, "6550": 76, "2397": 76, "1611": 76, "0779": 76, "2326": 76, "0558": 76, "4711": 76, "9678": 76, "5138": 76, "0411": 76, "9417": 76, "5158": 76, "0793": 76, "0036": 76, "2569": 76, "1055": 76, "sparse_coo": 76, "sparse_resize_": 76, "sparse_resize_and_clear_": 76, "split_siz": 76, "sqrt_": 76, "square_": 76, "squeez": 76, "squeeze_": 76, "sspaddmm": 76, "stft": 76, "pad_mod": 76, "typedstorag": 76, "directli": [76, 99, 104, 106], "untyped_storag": 76, "storage_typ": 76, "jump": 76, "next": [76, 106], "sub": 76, "sub_": 76, "subtract_": 76, "sum_to_s": 76, "svd": 76, "compute_uv": 76, "swapax": 76, "axis0": 76, "axis1": 76, "swapaxes_": 76, "swapdim": 76, "dim0": 76, "swapdims_": 76, "t_": 76, "take_along_dim": 76, "tan": 76, "tan_": 76, "tanh_": 76, "tensor_split": 76, "indices_or_sect": 76, "5044": 76, "0005": 76, "3310": 76, "0584": 76, "cuda0": 76, "to_dens": 76, "masked_grad": 76, "to_mkldnn": 76, "mkldnn": 76, "to_padded_tensor": 76, "to_spars": 76, "sparsedim": 76, "coordin": 76, "blocksiz": 76, "could": [76, 106], "sparse_csc": 76, "sparse_bsr": 76, "sparse_bsc": 76, "bsr": 76, "bsc": 76, "runtimeerror": [76, 99], "except": 76, "evenli": 76, "csc": 76, "minu": 76, "divis": [76, 106], "sparsecsr": 76, "to_sparse_bsc": 76, "row_indic": 76, "ccol_indic": 76, "to_sparse_bsr": 76, "to_sparse_coo": 76, "_nnz": 76, "to_sparse_csc": 76, "nest": [76, 84, 91, 93], "012766935862600803": 76, "5415473580360413": 76, "08909505605697632": 76, "7729271650314331": 76, "topk": 76, "largest": 76, "transpose_": 76, "triangular_solv": 76, "unitriangular": 76, "tril_": 76, "triu": 76, "triu_": 76, "true_divid": 76, "true_divide_": 76, "trunc": 76, "trunc_": 76, "async": 76, "type_a": 76, "unbind": 76, "seq": 76, "unflatten": 76, "unfold": 76, "sizedim": 76, "happen": [76, 99], "uniform_": 76, "return_invers": 76, "return_count": 76, "unique_consecut": 76, "elimin": [76, 106], "consecut": 76, "unsafe_chunk": 76, "unsafe_split": 76, "unsqueez": 76, "unsqueeze_": 76, "vdot": 76, "subspac": 76, "across": 76, "satisfi": 76, "condit": 76, "foral": 76, "unclear": 76, "z": [76, 99], "2nd": 76, "3rd": 76, "proportion": 76, "twice": 76, "met": 76, "overload": 76, "torchscript": [76, 106], "program": [76, 106], "9482": 76, "0310": 76, "4999": 76, "5316": 76, "1520": 76, "7472": 76, "5617": 76, "8649": 76, "4724": 76, "0334": 76, "2976": 76, "8499": 76, "2109": 76, "9913": 76, "9607": 76, "6123": 76, "1064483442": 76, "1124191867": 76, "1069546515": 76, "1089989247": 76, "1105482831": 76, "1061112040": 76, "1057999968": 76, "1084397505": 76, "1071760287": 76, "1123489973": 76, "1097310419": 76, "1084649136": 76, "1101533110": 76, "1073668768": 76, "1082790149": 76, "1088634448": 76, "1000000000": 76, "0047": 76, "0310j": 76, "5316j": 76, "7472j": 76, "8649j": 76, "0334j": 76, "8499j": 76, "9913j": 76, "6123j": 76, "202": 76, "154": 76, "59": 76, "182": 76, "243": 76, "253": 76, "188": 76, "185": 76, "252": 76, "191": 76, "63": 76, "240": 76, "227": 76, "165": 76, "27": 76, "190": 76, "146": 76, "203": 76, "15": 76, "106": 76, "93": 76, "205": 76, "192": 76, "112": 76, "206": 76, "189": 76, "95": 76, "152": 76, "147": 76, "89": 76, "43": 76, "246": 76, "87": 76, "235": [76, 101], "226": 76, "254": 76, "111": 76, "117": 76, "177": [76, 106], "28": 76, "view_a": 76, "vsplit": 76, "xlogi": 76, "xlogy_": 76, "typeguard": 77, "dynamo": 82, "fwd_tensor": 83, "fwd": [83, 106], "bwd": [83, 101, 106], "slightli": [84, 86, 106], "doesn": [84, 91, 93, 94, 96, 99], "unit_scal": [84, 90, 103, 104], "introduc": [84, 106], "compos": 84, "_dynamo": [84, 93, 94], "optimis": [84, 93, 94, 103], "thereaft": [84, 93], "written": 84, "successfulli": 84, "rather": 84, "graphmodul": [84, 93, 100], "simulate_fp8": [84, 90, 91, 103, 104], "node": [85, 86, 87, 90, 95, 100], "suppli": [85, 86, 88, 91, 93, 99, 106], "pruned_graph": [85, 86], "52587890625e": 86, "negligibli": 86, "toler": 86, "signific": [86, 106], "onc": [87, 99], "fwd_format": 88, "bwd_format": 88, "torchdynamo": [88, 89, 91, 93, 94, 96], "scaled_dot_product_attent": [88, 89, 103], "inspect": [88, 89], "fp32": [88, 89, 106], "speedup": [88, 89, 106], "variou": [88, 90], "fp8": [89, 103, 106], "literatur": 89, "noun": 89, "et": 89, "al": 89, "2022": 89, "micikeviciu": 89, "e4": [89, 106], "e5": [89, 106], "analysi": [90, 91, 101, 102, 103, 106], "prune_non_float_tensor": [90, 103], "prune_same_scale_tensor": [90, 103], "tend": [90, 106], "procedur": 91, "recurs": [91, 93, 94, 96, 100, 101], "build": [91, 106], "fundament": 91, "proce": 91, "five": 91, "stage": 91, "identif": 91, "compar": 91, "guid": [91, 103], "unconstrain": 91, "proof": 91, "initialis": [91, 106], "approach": [91, 93, 105, 106], "compil": [91, 93, 94, 103, 104, 106], "own": [91, 93], "system": [91, 93], "easi": [91, 93], "interoper": [91, 93], "definit": [91, 105], "basic": [91, 106], "told": 91, "explicitli": 91, "substitut": 91, "new_gelu": 91, "test": [91, 104, 106], "said": 91, "anticip": 91, "ultim": 91, "alon": 91, "prioriti": 91, "non_recurse_funct": 93, "graph_modul": 93, "backend_1": 93, "backend_2": 93, "_modul": 93, "torch_nn_modules_to_user_modul": [94, 103], "patch": 94, "target_fn": 95, "keep_type_expr": 95, "accompani": 95, "retain": 95, "mod": 96, "trivial_subclass": 96, "develop": [97, 106], "dataclass": 98, "scalepair": [99, 103], "ctx": 99, "functionctx": 99, "vjp": 99, "needs_input_grad": 99, "jvp": 99, "grad_input": 99, "got": 99, "mark_dirti": 99, "setup_context": 99, "matter": 99, "torch_doctest_autograd": 99, "staticmethod": 99, "x_npy": 99, "once_differenti": 99, "grad_output": 99, "lead": [99, 106], "wrong": 99, "mark_non_differenti": 99, "save_for_backward": 99, "g1": 99, "g2": 99, "saved_tensor": 99, "zeros_lik": 99, "oppos": 99, "leak": 99, "saved_tensors_hook": 99, "intermediari": 99, "neither": 99, "nor": 99, "recomput": 99, "tutori": [99, 106], "weren": 99, "grad_out": 99, "gx": 99, "gy": 99, "gz": 99, "save_for_forward": 99, "x_t": 99, "y_t": 99, "fwad": 99, "dual_level": 99, "a_dual": 99, "make_du": 99, "set_materialize_grad": 99, "materi": 99, "simplefunc": 99, "No": 99, "induc": 99, "insid": 99, "vmap": 99, "info": 99, "in_dim": 99, "underneath": 99, "generate_vmap_rul": 99, "choos": 99, "out_dim": 99, "instrument": 100, "boxed_run": 100, "args_list": 100, "interpret": 100, "promptli": 100, "call_funct": 100, "invoc": 100, "call_method": 100, "opoverload": 100, "call_modul": 100, "fetch_args_kwargs_from_env": 100, "fetch": 100, "environ": 100, "fetch_attr": 100, "hierarchi": 100, "fulli": 100, "qualifi": 100, "get_attr": 100, "Will": 100, "map_nodes_to_valu": 100, "belong": 100, "report": 100, "realli": 100, "referenc": 100, "placehold": 100, "tracer": 100, "target_to_funct": 100, "initial_env": 100, "enable_io_process": 100, "partial": 100, "process_input": 100, "process_output": 100, "run_nod": 100, "recurse_modul": 101, "syntax_highlight": 101, "autowrap_modul": 101, "einop": 101, "home": 101, "runner": 101, "lib": 101, "site": 101, "packag": 101, "py": 101, "autowrap_funct": 101, "dummi": 101, "union": 101, "fed": [101, 106], "plain": 101, "toggl": 101, "behavour": 101, "moduletyp": 101, "fc1": 101, "fc2": 101, "236": 101, "fc1_weight": 101, "018": [101, 106], "54": 101, "fc1_bia": 101, "0182": 101, "51": 101, "_c": [101, 106], "_nn": [101, 106], "578": [101, 106], "204": [101, 106], "337": 101, "288": 101, "fc2_weight": 101, "00902": [101, 106], "13": 101, "fc2_bia": 101, "00904": 101, "31": 101, "linear_1": [101, 106], "welcom": 103, "design": [103, 106], "facilit": 103, "outlin": [103, 106], "icml": [103, 106], "2023": [103, 106], "notebook": [103, 106], "nanogpt": 103, "git": [103, 106], "graphcor": [103, 106], "research": [103, 106], "broad": 103, "overview": [103, 106], "occasion": [103, 106], "bug": [103, 104, 106], "keen": [103, 104, 106], "encount": [103, 106], "fork": [103, 106], "repo": [103, 106], "instruct": [103, 106], "consider": 103, "depthmodulelist": 103, "depthsequenti": 103, "linearreadout": 103, "mhsa": 103, "transformerdecod": 103, "transformerlay": 103, "graph_to_datafram": 103, "apply_constraint": 103, "format_to_tupl": 103, "tuple_to_format": 103, "cross_entropi": [103, 106], "linear_readout": 103, "mse_loss": 103, "residual_appli": 103, "rms_norm": 103, "silu_glu": 103, "lr_scale_for_depth": 103, "lr_scale_func_adam": 103, "scale_bwd": 103, "scale_fwd": 103, "prune_selected_nod": 103, "simulate_format": 103, "apply_transform": 103, "patch_to_expand_modul": 103, "replace_node_with_funct": 103, "analyse_modul": [103, 106], "scaletrack": 103, "scaletrackinginterpret": 103, "logarithmic_interpol": 103, "scale_elementwis": 103, "despit": 104, "best": [104, 106], "effort": 104, "free": 104, "assist": 104, "anyon": 104, "issu": [104, 106], "coverag": 104, "ve": 104, "focuss": 104, "difficulti": 104, "although": [104, 106], "suspect": 104, "haven": 104, "exhaust": 104, "encourag": 104, "touch": 104, "equat": 105, "legaci": 105, "cover": 106, "brief": 106, "discuss": 106, "paradigm": 106, "aim": 106, "involv": 106, "scratch": 106, "assumpt": 106, "advantag": 106, "great": 106, "roughli": 106, "headroom": 106, "grow": 106, "shrink": 106, "underflow": 106, "drift": 106, "far": 106, "fp16": 106, "behaviour": 106, "dynam": 106, "decreas": 106, "treatment": 106, "motiv": 106, "sens": 106, "understand": 106, "bf16": 106, "veri": 106, "larg": 106, "3e": 106, "38": 106, "45": 106, "60": 106, "000": 106, "6e": 106, "speed": 106, "scope": 106, "introduct": 106, "tricki": 106, "easier": 106, "breakdown": 106, "alongsid": 106, "unscaledmlp": 106, "linear_2": 106, "annotated_cod": 106, "linear_1_weight": 106, "83": 106, "linear_1_bia": 106, "84": 106, "322": 106, "289": 106, "linear_2_weight": 106, "48": 106, "linear_2_bia": 106, "00894": 106, "198": 106, "firstli": 106, "decompos": 106, "secondli": 106, "fwd_scale": 106, "bwd_scale": 106, "enough": 106, "unscal": 106, "scaledmlp": 106, "716": 106, "729": 106, "707": 106, "706": 106, "693": 106, "03": 106, "979": 106, "good": 106, "art": 106, "aris": 106, "clearli": 106, "explod": 106, "degrad": 106, "steadili": 106, "meet": 106, "concern": 106, "merit": 106, "investig": 106, "attain": 106, "substanti": 106, "push": 106, "themselv": 106, "solv": 106, "outsid": 106, "separ": 106, "care": 106, "residuallay": 106, "contrast": 106, "50": 106, "find": 106, "down": 106, "emploi": 106, "trick": 106, "comprehens": 106, "scenario": 106, "arriv": 106, "fan_in": 106, "fan_out": 106, "grad_weight_scal": 106, "grad_bias_scal": 106, "ideal": 106, "compromis": 106, "eager": 106, "trip": 106, "fortun": 106, "hi": 106, "overhead": 106, "fusion": 106, "answer": 106, "jit": 106, "script": 106, "rectifi": 106, "flexibl": 106, "unit_scaled_funct": 106, "unitscaledmodul": 106, "incur": 106, "naiv": 106, "benchmark": 106, "thorough": 106, "strongli": 106, "latest": 106, "recent": 106, "upgrad": 106, "preview": 106, "nightli": 106}, "objects": {"": [[2, 0, 0, "-", "unit_scaling"]], "unit_scaling": [[3, 1, 1, "", "CrossEntropyLoss"], [4, 1, 1, "", "DepthModuleList"], [5, 1, 1, "", "DepthSequential"], [6, 1, 1, "", "Dropout"], [7, 1, 1, "", "Embedding"], [8, 1, 1, "", "GELU"], [9, 1, 1, "", "LayerNorm"], [10, 1, 1, "", "Linear"], [11, 1, 1, "", "LinearReadout"], [12, 1, 1, "", "MHSA"], [13, 1, 1, "", "MLP"], [14, 4, 1, "", "Parameter"], [15, 1, 1, "", "RMSNorm"], [16, 1, 1, "", "SiLU"], [17, 1, 1, "", "Softmax"], [18, 1, 1, "", "TransformerDecoder"], [19, 1, 1, "", "TransformerLayer"], [20, 0, 0, "-", "analysis"], [25, 0, 0, "-", "constraints"], [34, 0, 0, "-", "core"], [40, 0, 0, "-", "formats"], [44, 0, 0, "-", "functional"], [63, 0, 0, "-", "optim"], [71, 0, 0, "-", "parameter"], [78, 0, 0, "-", "scale"], [81, 4, 1, "", "transformer_residual_scaling_rule"], [82, 0, 0, "-", "transforms"], [97, 0, 0, "-", "utils"], [102, 4, 1, "", "visualiser"]], "unit_scaling.DepthModuleList": [[4, 2, 1, "", "append"], [4, 2, 1, "", "extend"], [4, 2, 1, "", "insert"]], "unit_scaling.DepthSequential": [[5, 2, 1, "", "append"]], "unit_scaling.Embedding": [[7, 2, 1, "", "from_pretrained"], [7, 3, 1, "", "weight"]], "unit_scaling.LayerNorm": [[9, 3, 1, "", "bias"], [9, 3, 1, "", "weight"]], "unit_scaling.Linear": [[10, 3, 1, "", "bias"], [10, 3, 1, "", "weight"]], "unit_scaling.LinearReadout": [[11, 3, 1, "", "bias"], [11, 3, 1, "", "weight"]], "unit_scaling.RMSNorm": [[15, 3, 1, "", "weight"]], "unit_scaling.TransformerDecoder": [[18, 2, 1, "", "append"]], "unit_scaling.analysis": [[21, 4, 1, "", "example_batch"], [22, 4, 1, "", "graph_to_dataframe"], [23, 4, 1, "", "plot"], [24, 4, 1, "", "visualiser"]], "unit_scaling.constraints": [[26, 4, 1, "", "amean"], [27, 4, 1, "", "apply_constraint"], [28, 4, 1, "", "gmean"], [29, 4, 1, "", "hmean"], [30, 4, 1, "", "to_grad_input_scale"], [31, 4, 1, "", "to_left_grad_scale"], [32, 4, 1, "", "to_output_scale"], [33, 4, 1, "", "to_right_grad_scale"]], "unit_scaling.core": [[35, 0, 0, "-", "functional"]], "unit_scaling.core.functional": [[36, 4, 1, "", "logarithmic_interpolation"], [37, 4, 1, "", "rms"], [38, 4, 1, "", "scale_elementwise"], [39, 4, 1, "", "transformer_residual_scaling_rule"]], "unit_scaling.formats": [[41, 1, 1, "", "FPFormat"], [42, 4, 1, "", "format_to_tuple"], [43, 4, 1, "", "tuple_to_format"]], "unit_scaling.formats.FPFormat": [[41, 5, 1, "", "bits"], [41, 5, 1, "", "max_absolute_value"], [41, 5, 1, "", "min_absolute_normal"], [41, 5, 1, "", "min_absolute_subnormal"], [41, 2, 1, "", "quantise"], [41, 2, 1, "", "quantise_bwd"], [41, 2, 1, "", "quantise_fwd"]], "unit_scaling.functional": [[45, 4, 1, "", "add"], [46, 4, 1, "", "cross_entropy"], [47, 4, 1, "", "dropout"], [48, 4, 1, "", "embedding"], [49, 4, 1, "", "gelu"], [50, 4, 1, "", "layer_norm"], [51, 4, 1, "", "linear"], [52, 4, 1, "", "linear_readout"], [53, 4, 1, "", "matmul"], [54, 4, 1, "", "mse_loss"], [55, 4, 1, "", "residual_add"], [56, 4, 1, "", "residual_apply"], [57, 4, 1, "", "residual_split"], [58, 4, 1, "", "rms_norm"], [59, 4, 1, "", "scaled_dot_product_attention"], [60, 4, 1, "", "silu"], [61, 4, 1, "", "silu_glu"], [62, 4, 1, "", "softmax"]], "unit_scaling.optim": [[64, 1, 1, "", "Adam"], [65, 1, 1, "", "AdamW"], [66, 1, 1, "", "SGD"], [67, 4, 1, "", "lr_scale_for_depth"], [68, 4, 1, "", "lr_scale_func_adam"], [69, 4, 1, "", "lr_scale_func_sgd"], [70, 4, 1, "", "scaled_parameters"]], "unit_scaling.optim.Adam": [[64, 2, 1, "", "add_param_group"], [64, 2, 1, "", "load_state_dict"], [64, 2, 1, "", "register_load_state_dict_post_hook"], [64, 2, 1, "", "register_load_state_dict_pre_hook"], [64, 2, 1, "", "register_state_dict_post_hook"], [64, 2, 1, "", "register_state_dict_pre_hook"], [64, 2, 1, "", "register_step_post_hook"], [64, 2, 1, "", "register_step_pre_hook"], [64, 2, 1, "", "state_dict"], [64, 2, 1, "", "step"], [64, 2, 1, "", "zero_grad"]], "unit_scaling.optim.AdamW": [[65, 2, 1, "", "add_param_group"], [65, 2, 1, "", "load_state_dict"], [65, 2, 1, "", "register_load_state_dict_post_hook"], [65, 2, 1, "", "register_load_state_dict_pre_hook"], [65, 2, 1, "", "register_state_dict_post_hook"], [65, 2, 1, "", "register_state_dict_pre_hook"], [65, 2, 1, "", "register_step_post_hook"], [65, 2, 1, "", "register_step_pre_hook"], [65, 2, 1, "", "state_dict"], [65, 2, 1, "", "step"], [65, 2, 1, "", "zero_grad"]], "unit_scaling.optim.SGD": [[66, 2, 1, "", "add_param_group"], [66, 2, 1, "", "load_state_dict"], [66, 2, 1, "", "register_load_state_dict_post_hook"], [66, 2, 1, "", "register_load_state_dict_pre_hook"], [66, 2, 1, "", "register_state_dict_post_hook"], [66, 2, 1, "", "register_state_dict_pre_hook"], [66, 2, 1, "", "register_step_post_hook"], [66, 2, 1, "", "register_step_pre_hook"], [66, 2, 1, "", "state_dict"], [66, 2, 1, "", "step"], [66, 2, 1, "", "zero_grad"]], "unit_scaling.parameter": [[72, 1, 1, "", "OrderedDict"], [73, 4, 1, "", "Parameter"], [74, 1, 1, "", "ParameterData"], [75, 1, 1, "", "Protocol"], [76, 1, 1, "", "Tensor"], [77, 4, 1, "", "has_parameter_data"]], "unit_scaling.parameter.OrderedDict": [[72, 2, 1, "", "clear"], [72, 2, 1, "", "copy"], [72, 2, 1, "", "fromkeys"], [72, 2, 1, "", "get"], [72, 2, 1, "", "items"], [72, 2, 1, "", "keys"], [72, 2, 1, "", "move_to_end"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "popitem"], [72, 2, 1, "", "setdefault"], [72, 2, 1, "", "update"], [72, 2, 1, "", "values"]], "unit_scaling.parameter.Tensor": [[76, 3, 1, "", "H"], [76, 3, 1, "", "T"], [76, 2, 1, "", "abs"], [76, 2, 1, "", "abs_"], [76, 2, 1, "", "absolute"], [76, 2, 1, "", "absolute_"], [76, 2, 1, "", "acos"], [76, 2, 1, "", "acos_"], [76, 2, 1, "", "acosh"], [76, 2, 1, "", "acosh_"], [76, 2, 1, "", "add"], [76, 2, 1, "", "add_"], [76, 2, 1, "", "addbmm"], [76, 2, 1, "", "addbmm_"], [76, 2, 1, "", "addcdiv"], [76, 2, 1, "", "addcdiv_"], [76, 2, 1, "", "addcmul"], [76, 2, 1, "", "addcmul_"], [76, 2, 1, "", "addmm"], [76, 2, 1, "", "addmm_"], [76, 2, 1, "", "addmv"], [76, 2, 1, "", "addmv_"], [76, 2, 1, "", "addr"], [76, 2, 1, "", "addr_"], [76, 2, 1, "", "adjoint"], [76, 2, 1, "", "align_as"], [76, 2, 1, "", "align_to"], [76, 2, 1, "", "all"], [76, 2, 1, "", "allclose"], [76, 2, 1, "", "amax"], [76, 2, 1, "", "amin"], [76, 2, 1, "", "aminmax"], [76, 2, 1, "", "angle"], [76, 2, 1, "", "any"], [76, 2, 1, "", "apply_"], [76, 2, 1, "", "arccos"], [76, 2, 1, "", "arccos_"], [76, 2, 1, "", "arccosh"], [76, 2, 1, "", "arccosh_"], [76, 2, 1, "", "arcsin"], [76, 2, 1, "", "arcsin_"], [76, 2, 1, "", "arcsinh"], [76, 2, 1, "", "arcsinh_"], [76, 2, 1, "", "arctan"], [76, 2, 1, "", "arctan2"], [76, 2, 1, "", "arctan2_"], [76, 2, 1, "", "arctan_"], [76, 2, 1, "", "arctanh"], [76, 2, 1, "", "arctanh_"], [76, 2, 1, "", "argmax"], [76, 2, 1, "", "argmin"], [76, 2, 1, "", "argsort"], [76, 2, 1, "", "argwhere"], [76, 2, 1, "", "as_strided"], [76, 2, 1, "", "as_strided_"], [76, 2, 1, "", "as_strided_scatter"], [76, 2, 1, "", "as_subclass"], [76, 2, 1, "", "asin"], [76, 2, 1, "", "asin_"], [76, 2, 1, "", "asinh"], [76, 2, 1, "", "asinh_"], [76, 2, 1, "", "atan"], [76, 2, 1, "", "atan2"], [76, 2, 1, "", "atan2_"], [76, 2, 1, "", "atan_"], [76, 2, 1, "", "atanh"], [76, 2, 1, "", "atanh_"], [76, 2, 1, "", "backward"], [76, 2, 1, "", "baddbmm"], [76, 2, 1, "", "baddbmm_"], [76, 2, 1, "", "bernoulli"], [76, 2, 1, "", "bernoulli_"], [76, 2, 1, "", "bfloat16"], [76, 2, 1, "", "bincount"], [76, 2, 1, "", "bitwise_and"], [76, 2, 1, "", "bitwise_and_"], [76, 2, 1, "", "bitwise_left_shift"], [76, 2, 1, "", "bitwise_left_shift_"], [76, 2, 1, "", "bitwise_not"], [76, 2, 1, "", "bitwise_not_"], [76, 2, 1, "", "bitwise_or"], [76, 2, 1, "", "bitwise_or_"], [76, 2, 1, "", "bitwise_right_shift"], [76, 2, 1, "", "bitwise_right_shift_"], [76, 2, 1, "", "bitwise_xor"], [76, 2, 1, "", "bitwise_xor_"], [76, 2, 1, "", "bmm"], [76, 2, 1, "", "bool"], [76, 2, 1, "", "broadcast_to"], [76, 2, 1, "", "byte"], [76, 2, 1, "", "cauchy_"], [76, 2, 1, "", "cdouble"], [76, 2, 1, "", "ceil"], [76, 2, 1, "", "ceil_"], [76, 2, 1, "", "cfloat"], [76, 2, 1, "", "chalf"], [76, 2, 1, "", "char"], [76, 2, 1, "", "cholesky"], [76, 2, 1, "", "cholesky_inverse"], [76, 2, 1, "", "cholesky_solve"], [76, 2, 1, "", "chunk"], [76, 2, 1, "", "clamp"], [76, 2, 1, "", "clamp_"], [76, 2, 1, "", "clip"], [76, 2, 1, "", "clip_"], [76, 2, 1, "", "clone"], [76, 2, 1, "", "coalesce"], [76, 2, 1, "", "col_indices"], [76, 2, 1, "", "conj"], [76, 2, 1, "", "conj_physical"], [76, 2, 1, "", "conj_physical_"], [76, 2, 1, "", "contiguous"], [76, 2, 1, "", "copy_"], [76, 2, 1, "", "copysign"], [76, 2, 1, "", "copysign_"], [76, 2, 1, "", "corrcoef"], [76, 2, 1, "", "cos"], [76, 2, 1, "", "cos_"], [76, 2, 1, "", "cosh"], [76, 2, 1, "", "cosh_"], [76, 2, 1, "", "count_nonzero"], [76, 2, 1, "", "cov"], [76, 2, 1, "", "cpu"], [76, 2, 1, "", "cross"], [76, 2, 1, "", "crow_indices"], [76, 2, 1, "", "cuda"], [76, 2, 1, "", "cummax"], [76, 2, 1, "", "cummin"], [76, 2, 1, "", "cumprod"], [76, 2, 1, "", "cumprod_"], [76, 2, 1, "", "cumsum"], [76, 2, 1, "", "cumsum_"], [76, 2, 1, "", "data_ptr"], [76, 2, 1, "", "deg2rad"], [76, 2, 1, "", "deg2rad_"], [76, 2, 1, "", "dense_dim"], [76, 2, 1, "", "dequantize"], [76, 2, 1, "", "det"], [76, 2, 1, "", "detach"], [76, 2, 1, "", "detach_"], [76, 3, 1, "", "device"], [76, 2, 1, "", "diag"], [76, 2, 1, "", "diag_embed"], [76, 2, 1, "", "diagflat"], [76, 2, 1, "", "diagonal"], [76, 2, 1, "", "diagonal_scatter"], [76, 2, 1, "", "diff"], [76, 2, 1, "", "digamma"], [76, 2, 1, "", "digamma_"], [76, 2, 1, "", "dim"], [76, 2, 1, "", "dim_order"], [76, 2, 1, "", "dist"], [76, 2, 1, "", "div"], [76, 2, 1, "", "div_"], [76, 2, 1, "", "divide"], [76, 2, 1, "", "divide_"], [76, 2, 1, "", "dot"], [76, 2, 1, "", "double"], [76, 2, 1, "", "dsplit"], [76, 2, 1, "", "element_size"], [76, 2, 1, "", "eq"], [76, 2, 1, "", "eq_"], [76, 2, 1, "", "equal"], [76, 2, 1, "", "erf"], [76, 2, 1, "", "erf_"], [76, 2, 1, "", "erfc"], [76, 2, 1, "", "erfc_"], [76, 2, 1, "", "erfinv"], [76, 2, 1, "", "erfinv_"], [76, 2, 1, "", "exp"], [76, 2, 1, "", "exp2"], [76, 2, 1, "", "exp2_"], [76, 2, 1, "", "exp_"], [76, 2, 1, "", "expand"], [76, 2, 1, "", "expand_as"], [76, 2, 1, "", "expm1"], [76, 2, 1, "", "expm1_"], [76, 2, 1, "", "exponential_"], [76, 2, 1, "", "fill_"], [76, 2, 1, "", "fill_diagonal_"], [76, 2, 1, "", "fix"], [76, 2, 1, "", "fix_"], [76, 2, 1, "", "flatten"], [76, 2, 1, "", "flip"], [76, 2, 1, "", "fliplr"], [76, 2, 1, "", "flipud"], [76, 2, 1, "", "float"], [76, 2, 1, "", "float_power"], [76, 2, 1, "", "float_power_"], [76, 2, 1, "", "floor"], [76, 2, 1, "", "floor_"], [76, 2, 1, "", "floor_divide"], [76, 2, 1, "", "floor_divide_"], [76, 2, 1, "", "fmax"], [76, 2, 1, "", "fmin"], [76, 2, 1, "", "fmod"], [76, 2, 1, "", "fmod_"], [76, 2, 1, "", "frac"], [76, 2, 1, "", "frac_"], [76, 2, 1, "", "frexp"], [76, 2, 1, "", "gather"], [76, 2, 1, "", "gcd"], [76, 2, 1, "", "gcd_"], [76, 2, 1, "", "ge"], [76, 2, 1, "", "ge_"], [76, 2, 1, "", "geometric_"], [76, 2, 1, "", "geqrf"], [76, 2, 1, "", "ger"], [76, 2, 1, "", "get_device"], [76, 3, 1, "", "grad"], [76, 2, 1, "", "greater"], [76, 2, 1, "", "greater_"], [76, 2, 1, "", "greater_equal"], [76, 2, 1, "", "greater_equal_"], [76, 2, 1, "", "gt"], [76, 2, 1, "", "gt_"], [76, 2, 1, "", "half"], [76, 2, 1, "", "hardshrink"], [76, 2, 1, "", "has_names"], [76, 2, 1, "", "heaviside"], [76, 2, 1, "", "heaviside_"], [76, 2, 1, "", "histc"], [76, 2, 1, "", "histogram"], [76, 2, 1, "", "hsplit"], [76, 2, 1, "", "hypot"], [76, 2, 1, "", "hypot_"], [76, 2, 1, "", "i0"], [76, 2, 1, "", "i0_"], [76, 2, 1, "", "igamma"], [76, 2, 1, "", "igamma_"], [76, 2, 1, "", "igammac"], [76, 2, 1, "", "igammac_"], [76, 3, 1, "", "imag"], [76, 2, 1, "", "index_add"], [76, 2, 1, "", "index_add_"], [76, 2, 1, "", "index_copy"], [76, 2, 1, "", "index_copy_"], [76, 2, 1, "", "index_fill"], [76, 2, 1, "", "index_fill_"], [76, 2, 1, "", "index_put"], [76, 2, 1, "", "index_put_"], [76, 2, 1, "", "index_reduce_"], [76, 2, 1, "", "index_select"], [76, 2, 1, "", "indices"], [76, 2, 1, "", "inner"], [76, 2, 1, "", "int"], [76, 2, 1, "", "int_repr"], [76, 2, 1, "", "inverse"], [76, 2, 1, "", "ipu"], [76, 2, 1, "", "is_coalesced"], [76, 2, 1, "", "is_complex"], [76, 2, 1, "", "is_conj"], [76, 2, 1, "", "is_contiguous"], [76, 3, 1, "", "is_cpu"], [76, 3, 1, "", "is_cuda"], [76, 2, 1, "", "is_floating_point"], [76, 2, 1, "", "is_inference"], [76, 3, 1, "", "is_ipu"], [76, 3, 1, "", "is_leaf"], [76, 3, 1, "", "is_meta"], [76, 3, 1, "", "is_mps"], [76, 2, 1, "", "is_neg"], [76, 2, 1, "", "is_pinned"], [76, 3, 1, "", "is_quantized"], [76, 2, 1, "", "is_set_to"], [76, 2, 1, "", "is_shared"], [76, 2, 1, "", "is_signed"], [76, 3, 1, "", "is_sparse"], [76, 3, 1, "", "is_sparse_csr"], [76, 3, 1, "", "is_xla"], [76, 3, 1, "", "is_xpu"], [76, 2, 1, "", "isclose"], [76, 2, 1, "", "isfinite"], [76, 2, 1, "", "isinf"], [76, 2, 1, "", "isnan"], [76, 2, 1, "", "isneginf"], [76, 2, 1, "", "isposinf"], [76, 2, 1, "", "isreal"], [76, 2, 1, "", "istft"], [76, 2, 1, "", "item"], [76, 3, 1, "", "itemsize"], [76, 2, 1, "", "kron"], [76, 2, 1, "", "kthvalue"], [76, 2, 1, "", "lcm"], [76, 2, 1, "", "lcm_"], [76, 2, 1, "", "ldexp"], [76, 2, 1, "", "ldexp_"], [76, 2, 1, "", "le"], [76, 2, 1, "", "le_"], [76, 2, 1, "", "lerp"], [76, 2, 1, "", "lerp_"], [76, 2, 1, "", "less"], [76, 2, 1, "", "less_"], [76, 2, 1, "", "less_equal"], [76, 2, 1, "", "less_equal_"], [76, 2, 1, "", "lgamma"], [76, 2, 1, "", "lgamma_"], [76, 2, 1, "", "log"], [76, 2, 1, "", "log10"], [76, 2, 1, "", "log10_"], [76, 2, 1, "", "log1p"], [76, 2, 1, "", "log1p_"], [76, 2, 1, "", "log2"], [76, 2, 1, "", "log2_"], [76, 2, 1, "", "log_"], [76, 2, 1, "", "log_normal_"], [76, 2, 1, "", "logaddexp"], [76, 2, 1, "", "logaddexp2"], [76, 2, 1, "", "logcumsumexp"], [76, 2, 1, "", "logdet"], [76, 2, 1, "", "logical_and"], [76, 2, 1, "", "logical_and_"], [76, 2, 1, "", "logical_not"], [76, 2, 1, "", "logical_not_"], [76, 2, 1, "", "logical_or"], [76, 2, 1, "", "logical_or_"], [76, 2, 1, "", "logical_xor"], [76, 2, 1, "", "logical_xor_"], [76, 2, 1, "", "logit"], [76, 2, 1, "", "logit_"], [76, 2, 1, "", "logsumexp"], [76, 2, 1, "", "long"], [76, 2, 1, "", "lt"], [76, 2, 1, "", "lt_"], [76, 2, 1, "", "lu"], [76, 2, 1, "", "lu_solve"], [76, 3, 1, "", "mH"], [76, 3, 1, "", "mT"], [76, 2, 1, "", "map_"], [76, 2, 1, "", "masked_fill"], [76, 2, 1, "", "masked_fill_"], [76, 2, 1, "", "masked_scatter"], [76, 2, 1, "", "masked_scatter_"], [76, 2, 1, "", "masked_select"], [76, 2, 1, "", "matmul"], [76, 2, 1, "", "matrix_exp"], [76, 2, 1, "", "matrix_power"], [76, 2, 1, "", "max"], [76, 2, 1, "", "maximum"], [76, 2, 1, "", "mean"], [76, 2, 1, "", "median"], [76, 2, 1, "", "min"], [76, 2, 1, "", "minimum"], [76, 2, 1, "", "mm"], [76, 2, 1, "", "mode"], [76, 2, 1, "", "module_load"], [76, 2, 1, "", "moveaxis"], [76, 2, 1, "", "movedim"], [76, 2, 1, "", "msort"], [76, 2, 1, "", "mul"], [76, 2, 1, "", "mul_"], [76, 2, 1, "", "multinomial"], [76, 2, 1, "", "multiply"], [76, 2, 1, "", "multiply_"], [76, 2, 1, "", "mv"], [76, 2, 1, "", "mvlgamma"], [76, 2, 1, "", "mvlgamma_"], [76, 3, 1, "", "names"], [76, 2, 1, "", "nan_to_num"], [76, 2, 1, "", "nan_to_num_"], [76, 2, 1, "", "nanmean"], [76, 2, 1, "", "nanmedian"], [76, 2, 1, "", "nanquantile"], [76, 2, 1, "", "nansum"], [76, 2, 1, "", "narrow"], [76, 2, 1, "", "narrow_copy"], [76, 3, 1, "", "nbytes"], [76, 3, 1, "", "ndim"], [76, 2, 1, "", "ndimension"], [76, 2, 1, "", "ne"], [76, 2, 1, "", "ne_"], [76, 2, 1, "", "neg"], [76, 2, 1, "", "neg_"], [76, 2, 1, "", "negative"], [76, 2, 1, "", "negative_"], [76, 2, 1, "", "nelement"], [76, 2, 1, "", "new_empty"], [76, 2, 1, "", "new_empty_strided"], [76, 2, 1, "", "new_full"], [76, 2, 1, "", "new_ones"], [76, 2, 1, "", "new_tensor"], [76, 2, 1, "", "new_zeros"], [76, 2, 1, "", "nextafter"], [76, 2, 1, "", "nextafter_"], [76, 2, 1, "", "nonzero"], [76, 2, 1, "", "nonzero_static"], [76, 2, 1, "", "norm"], [76, 2, 1, "", "normal_"], [76, 2, 1, "", "not_equal"], [76, 2, 1, "", "not_equal_"], [76, 2, 1, "", "numel"], [76, 2, 1, "", "numpy"], [76, 2, 1, "", "orgqr"], [76, 2, 1, "", "ormqr"], [76, 2, 1, "", "outer"], [76, 2, 1, "", "permute"], [76, 2, 1, "", "pin_memory"], [76, 2, 1, "", "pinverse"], [76, 2, 1, "", "polygamma"], [76, 2, 1, "", "polygamma_"], [76, 2, 1, "", "positive"], [76, 2, 1, "", "pow"], [76, 2, 1, "", "pow_"], [76, 2, 1, "", "prod"], [76, 2, 1, "", "put"], [76, 2, 1, "", "put_"], [76, 2, 1, "", "q_per_channel_axis"], [76, 2, 1, "", "q_per_channel_scales"], [76, 2, 1, "", "q_per_channel_zero_points"], [76, 2, 1, "", "q_scale"], [76, 2, 1, "", "q_zero_point"], [76, 2, 1, "", "qr"], [76, 2, 1, "", "qscheme"], [76, 2, 1, "", "quantile"], [76, 2, 1, "", "rad2deg"], [76, 2, 1, "", "rad2deg_"], [76, 2, 1, "", "random_"], [76, 2, 1, "", "ravel"], [76, 3, 1, "", "real"], [76, 2, 1, "", "reciprocal"], [76, 2, 1, "", "reciprocal_"], [76, 2, 1, "", "record_stream"], [76, 2, 1, "", "refine_names"], [76, 2, 1, "", "register_hook"], [76, 2, 1, "", "register_post_accumulate_grad_hook"], [76, 2, 1, "", "remainder"], [76, 2, 1, "", "remainder_"], [76, 2, 1, "", "rename"], [76, 2, 1, "", "rename_"], [76, 2, 1, "", "renorm"], [76, 2, 1, "", "renorm_"], [76, 2, 1, "", "repeat"], [76, 2, 1, "", "repeat_interleave"], [76, 3, 1, "", "requires_grad"], [76, 2, 1, "", "requires_grad_"], [76, 2, 1, "", "reshape"], [76, 2, 1, "", "reshape_as"], [76, 2, 1, "", "resize_"], [76, 2, 1, "", "resize_as_"], [76, 2, 1, "", "resolve_conj"], [76, 2, 1, "", "resolve_neg"], [76, 2, 1, "", "retain_grad"], [76, 3, 1, "", "retains_grad"], [76, 2, 1, "", "roll"], [76, 2, 1, "", "rot90"], [76, 2, 1, "", "round"], [76, 2, 1, "", "round_"], [76, 2, 1, "", "rsqrt"], [76, 2, 1, "", "rsqrt_"], [76, 2, 1, "", "scatter"], [76, 2, 1, "", "scatter_"], [76, 2, 1, "", "scatter_add"], [76, 2, 1, "", "scatter_add_"], [76, 2, 1, "", "scatter_reduce"], [76, 2, 1, "", "scatter_reduce_"], [76, 2, 1, "", "select"], [76, 2, 1, "", "select_scatter"], [76, 2, 1, "", "set_"], [76, 2, 1, "", "sgn"], [76, 2, 1, "", "sgn_"], [76, 3, 1, "", "shape"], [76, 2, 1, "", "share_memory_"], [76, 2, 1, "", "short"], [76, 2, 1, "", "sigmoid"], [76, 2, 1, "", "sigmoid_"], [76, 2, 1, "", "sign"], [76, 2, 1, "", "sign_"], [76, 2, 1, "", "signbit"], [76, 2, 1, "", "sin"], [76, 2, 1, "", "sin_"], [76, 2, 1, "", "sinc"], [76, 2, 1, "", "sinc_"], [76, 2, 1, "", "sinh"], [76, 2, 1, "", "sinh_"], [76, 2, 1, "", "size"], [76, 2, 1, "", "slice_scatter"], [76, 2, 1, "", "slogdet"], [76, 2, 1, "", "smm"], [76, 2, 1, "", "softmax"], [76, 2, 1, "", "sort"], [76, 2, 1, "", "sparse_dim"], [76, 2, 1, "", "sparse_mask"], [76, 2, 1, "", "sparse_resize_"], [76, 2, 1, "", "sparse_resize_and_clear_"], [76, 2, 1, "", "split"], [76, 2, 1, "", "sqrt"], [76, 2, 1, "", "sqrt_"], [76, 2, 1, "", "square"], [76, 2, 1, "", "square_"], [76, 2, 1, "", "squeeze"], [76, 2, 1, "", "squeeze_"], [76, 2, 1, "", "sspaddmm"], [76, 2, 1, "", "std"], [76, 2, 1, "", "stft"], [76, 2, 1, "", "storage"], [76, 2, 1, "", "storage_offset"], [76, 2, 1, "", "storage_type"], [76, 2, 1, "", "stride"], [76, 2, 1, "", "sub"], [76, 2, 1, "", "sub_"], [76, 2, 1, "", "subtract"], [76, 2, 1, "", "subtract_"], [76, 2, 1, "", "sum"], [76, 2, 1, "", "sum_to_size"], [76, 2, 1, "", "svd"], [76, 2, 1, "", "swapaxes"], [76, 2, 1, "", "swapaxes_"], [76, 2, 1, "", "swapdims"], [76, 2, 1, "", "swapdims_"], [76, 2, 1, "", "t"], [76, 2, 1, "", "t_"], [76, 2, 1, "", "take"], [76, 2, 1, "", "take_along_dim"], [76, 2, 1, "", "tan"], [76, 2, 1, "", "tan_"], [76, 2, 1, "", "tanh"], [76, 2, 1, "", "tanh_"], [76, 2, 1, "", "tensor_split"], [76, 2, 1, "", "tile"], [76, 2, 1, "", "to"], [76, 2, 1, "", "to_dense"], [76, 2, 1, "", "to_mkldnn"], [76, 2, 1, "", "to_padded_tensor"], [76, 2, 1, "", "to_sparse"], [76, 2, 1, "", "to_sparse_bsc"], [76, 2, 1, "", "to_sparse_bsr"], [76, 2, 1, "", "to_sparse_coo"], [76, 2, 1, "", "to_sparse_csc"], [76, 2, 1, "", "to_sparse_csr"], [76, 2, 1, "", "tolist"], [76, 2, 1, "", "topk"], [76, 2, 1, "", "trace"], [76, 2, 1, "", "transpose"], [76, 2, 1, "", "transpose_"], [76, 2, 1, "", "triangular_solve"], [76, 2, 1, "", "tril"], [76, 2, 1, "", "tril_"], [76, 2, 1, "", "triu"], [76, 2, 1, "", "triu_"], [76, 2, 1, "", "true_divide"], [76, 2, 1, "", "true_divide_"], [76, 2, 1, "", "trunc"], [76, 2, 1, "", "trunc_"], [76, 2, 1, "", "type"], [76, 2, 1, "", "type_as"], [76, 2, 1, "", "unbind"], [76, 2, 1, "", "unflatten"], [76, 2, 1, "", "unfold"], [76, 2, 1, "", "uniform_"], [76, 2, 1, "", "unique"], [76, 2, 1, "", "unique_consecutive"], [76, 2, 1, "", "unsafe_chunk"], [76, 2, 1, "", "unsafe_split"], [76, 2, 1, "", "unsqueeze"], [76, 2, 1, "", "unsqueeze_"], [76, 2, 1, "", "untyped_storage"], [76, 2, 1, "", "values"], [76, 2, 1, "", "var"], [76, 2, 1, "", "vdot"], [76, 2, 1, "", "view"], [76, 2, 1, "", "view_as"], [76, 2, 1, "", "vsplit"], [76, 2, 1, "", "where"], [76, 2, 1, "", "xlogy"], [76, 2, 1, "", "xlogy_"], [76, 2, 1, "", "xpu"], [76, 2, 1, "", "zero_"]], "unit_scaling.scale": [[79, 4, 1, "", "scale_bwd"], [80, 4, 1, "", "scale_fwd"]], "unit_scaling.transforms": [[83, 1, 1, "", "Metrics"], [84, 4, 1, "", "compile"], [85, 4, 1, "", "prune_non_float_tensors"], [86, 4, 1, "", "prune_same_scale_tensors"], [87, 4, 1, "", "prune_selected_nodes"], [88, 4, 1, "", "simulate_format"], [89, 4, 1, "", "simulate_fp8"], [90, 4, 1, "", "track_scales"], [91, 4, 1, "", "unit_scale"], [92, 0, 0, "-", "utils"]], "unit_scaling.transforms.Metrics": [[83, 1, 1, "", "Data"]], "unit_scaling.transforms.utils": [[93, 4, 1, "", "apply_transform"], [94, 4, 1, "", "patch_to_expand_modules"], [95, 4, 1, "", "replace_node_with_function"], [96, 4, 1, "", "torch_nn_modules_to_user_modules"]], "unit_scaling.utils": [[98, 1, 1, "", "ScalePair"], [99, 1, 1, "", "ScaleTracker"], [100, 1, 1, "", "ScaleTrackingInterpreter"], [101, 4, 1, "", "analyse_module"]], "unit_scaling.utils.ScaleTracker": [[99, 2, 1, "", "backward"], [99, 2, 1, "", "jvp"], [99, 2, 1, "", "mark_dirty"], [99, 2, 1, "", "mark_non_differentiable"], [99, 2, 1, "", "save_for_backward"], [99, 2, 1, "", "save_for_forward"], [99, 2, 1, "", "set_materialize_grads"], [99, 2, 1, "", "setup_context"], [99, 2, 1, "", "vjp"], [99, 2, 1, "", "vmap"]], "unit_scaling.utils.ScaleTrackingInterpreter": [[100, 2, 1, "", "boxed_run"], [100, 2, 1, "", "call_function"], [100, 2, 1, "", "call_method"], [100, 2, 1, "", "call_module"], [100, 2, 1, "", "fetch_args_kwargs_from_env"], [100, 2, 1, "", "fetch_attr"], [100, 2, 1, "", "get_attr"], [100, 2, 1, "", "map_nodes_to_values"], [100, 2, 1, "", "output"], [100, 2, 1, "", "placeholder"], [100, 2, 1, "", "run"], [100, 2, 1, "", "run_node"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": 0, "develop": [1, 103], "unit_sc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "crossentropyloss": 3, "depthmodulelist": 4, "depthsequenti": 5, "dropout": [6, 47], "embed": [7, 48], "gelu": [8, 49], "layernorm": 9, "linear": [10, 51], "linearreadout": 11, "mhsa": 12, "mlp": 13, "paramet": [14, 71, 72, 73, 74, 75, 76, 77], "rmsnorm": 15, "silu": [16, 60], "softmax": [17, 62], "transformerdecod": 18, "transformerlay": 19, "analysi": [20, 21, 22, 23, 24], "example_batch": 21, "graph_to_datafram": 22, "plot": 23, "visualis": [24, 102], "constraint": [25, 26, 27, 28, 29, 30, 31, 32, 33], "amean": 26, "apply_constraint": 27, "gmean": 28, "hmean": 29, "to_grad_input_scal": 30, "to_left_grad_scal": 31, "to_output_scal": 32, "to_right_grad_scal": 33, "core": [34, 35, 36, 37, 38, 39], "function": [35, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "logarithmic_interpol": 36, "rm": 37, "scale_elementwis": 38, "transformer_residual_scaling_rul": [39, 81], "format": [40, 41, 42, 43], "fpformat": 41, "format_to_tupl": 42, "tuple_to_format": 43, "add": 45, "cross_entropi": 46, "layer_norm": 50, "linear_readout": 52, "matmul": 53, "mse_loss": 54, "residual_add": 55, "residual_appli": 56, "residual_split": 57, "rms_norm": 58, "scaled_dot_product_attent": 59, "silu_glu": 61, "optim": [63, 64, 65, 66, 67, 68, 69, 70], "adam": 64, "adamw": 65, "sgd": 66, "lr_scale_for_depth": 67, "lr_scale_func_adam": 68, "lr_scale_func_sgd": 69, "scaled_paramet": 70, "ordereddict": 72, "parameterdata": 74, "protocol": 75, "tensor": 76, "has_parameter_data": 77, "scale": [78, 79, 80, 103, 105, 106], "scale_bwd": 79, "scale_fwd": 80, "transform": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "metric": 83, "compil": 84, "prune_non_float_tensor": 85, "prune_same_scale_tensor": 86, "prune_selected_nod": 87, "simulate_format": 88, "simulate_fp8": 89, "track_scal": 90, "unit_scal": 91, "util": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "apply_transform": 93, "patch_to_expand_modul": 94, "replace_node_with_funct": 95, "torch_nn_modules_to_user_modul": 96, "scalepair": 98, "scaletrack": 99, "scaletrackinginterpret": 100, "analyse_modul": 101, "unit": [103, 106], "instal": [103, 106], "get": 103, "start": 103, "content": 103, "limit": 104, "almost": 105, "dot": 105, "product": 105, "attent": 105, "user": 106, "guid": 106, "what": 106, "i": 106, "how": 106, "model": 106, "kei": 106, "consider": 106, "optimis": 106}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API reference": [[0, "api-reference"]], "Development": [[1, "development"], [103, "development"]], "unit_scaling": [[2, "module-unit_scaling"]], "unit_scaling.CrossEntropyLoss": [[3, "unit-scaling-crossentropyloss"]], "unit_scaling.DepthModuleList": [[4, "unit-scaling-depthmodulelist"]], "unit_scaling.DepthSequential": [[5, "unit-scaling-depthsequential"]], "unit_scaling.Dropout": [[6, "unit-scaling-dropout"]], "unit_scaling.Embedding": [[7, "unit-scaling-embedding"]], "unit_scaling.GELU": [[8, "unit-scaling-gelu"]], "unit_scaling.LayerNorm": [[9, "unit-scaling-layernorm"]], "unit_scaling.Linear": [[10, "unit-scaling-linear"]], "unit_scaling.LinearReadout": [[11, "unit-scaling-linearreadout"]], "unit_scaling.MHSA": [[12, "unit-scaling-mhsa"]], "unit_scaling.MLP": [[13, "unit-scaling-mlp"]], "unit_scaling.Parameter": [[14, "unit-scaling-parameter"]], "unit_scaling.RMSNorm": [[15, "unit-scaling-rmsnorm"]], "unit_scaling.SiLU": [[16, "unit-scaling-silu"]], "unit_scaling.Softmax": [[17, "unit-scaling-softmax"]], "unit_scaling.TransformerDecoder": [[18, "unit-scaling-transformerdecoder"]], "unit_scaling.TransformerLayer": [[19, "unit-scaling-transformerlayer"]], "unit_scaling.analysis": [[20, "module-unit_scaling.analysis"]], "unit_scaling.analysis.example_batch": [[21, "unit-scaling-analysis-example-batch"]], "unit_scaling.analysis.graph_to_dataframe": [[22, "unit-scaling-analysis-graph-to-dataframe"]], "unit_scaling.analysis.plot": [[23, "unit-scaling-analysis-plot"]], "unit_scaling.analysis.visualiser": [[24, "unit-scaling-analysis-visualiser"]], "unit_scaling.constraints": [[25, "module-unit_scaling.constraints"]], "unit_scaling.constraints.amean": [[26, "unit-scaling-constraints-amean"]], "unit_scaling.constraints.apply_constraint": [[27, "unit-scaling-constraints-apply-constraint"]], "unit_scaling.constraints.gmean": [[28, "unit-scaling-constraints-gmean"]], "unit_scaling.constraints.hmean": [[29, "unit-scaling-constraints-hmean"]], "unit_scaling.constraints.to_grad_input_scale": [[30, "unit-scaling-constraints-to-grad-input-scale"]], "unit_scaling.constraints.to_left_grad_scale": [[31, "unit-scaling-constraints-to-left-grad-scale"]], "unit_scaling.constraints.to_output_scale": [[32, "unit-scaling-constraints-to-output-scale"]], "unit_scaling.constraints.to_right_grad_scale": [[33, "unit-scaling-constraints-to-right-grad-scale"]], "unit_scaling.core": [[34, "module-unit_scaling.core"]], "unit_scaling.core.functional": [[35, "module-unit_scaling.core.functional"]], "unit_scaling.core.functional.logarithmic_interpolation": [[36, "unit-scaling-core-functional-logarithmic-interpolation"]], "unit_scaling.core.functional.rms": [[37, "unit-scaling-core-functional-rms"]], "unit_scaling.core.functional.scale_elementwise": [[38, "unit-scaling-core-functional-scale-elementwise"]], "unit_scaling.core.functional.transformer_residual_scaling_rule": [[39, "unit-scaling-core-functional-transformer-residual-scaling-rule"]], "unit_scaling.formats": [[40, "module-unit_scaling.formats"]], "unit_scaling.formats.FPFormat": [[41, "unit-scaling-formats-fpformat"]], "unit_scaling.formats.format_to_tuple": [[42, "unit-scaling-formats-format-to-tuple"]], "unit_scaling.formats.tuple_to_format": [[43, "unit-scaling-formats-tuple-to-format"]], "unit_scaling.functional": [[44, "module-unit_scaling.functional"]], "unit_scaling.functional.add": [[45, "unit-scaling-functional-add"]], "unit_scaling.functional.cross_entropy": [[46, "unit-scaling-functional-cross-entropy"]], "unit_scaling.functional.dropout": [[47, "unit-scaling-functional-dropout"]], "unit_scaling.functional.embedding": [[48, "unit-scaling-functional-embedding"]], "unit_scaling.functional.gelu": [[49, "unit-scaling-functional-gelu"]], "unit_scaling.functional.layer_norm": [[50, "unit-scaling-functional-layer-norm"]], "unit_scaling.functional.linear": [[51, "unit-scaling-functional-linear"]], "unit_scaling.functional.linear_readout": [[52, "unit-scaling-functional-linear-readout"]], "unit_scaling.functional.matmul": [[53, "unit-scaling-functional-matmul"]], "unit_scaling.functional.mse_loss": [[54, "unit-scaling-functional-mse-loss"]], "unit_scaling.functional.residual_add": [[55, "unit-scaling-functional-residual-add"]], "unit_scaling.functional.residual_apply": [[56, "unit-scaling-functional-residual-apply"]], "unit_scaling.functional.residual_split": [[57, "unit-scaling-functional-residual-split"]], "unit_scaling.functional.rms_norm": [[58, "unit-scaling-functional-rms-norm"]], "unit_scaling.functional.scaled_dot_product_attention": [[59, "unit-scaling-functional-scaled-dot-product-attention"]], "unit_scaling.functional.silu": [[60, "unit-scaling-functional-silu"]], "unit_scaling.functional.silu_glu": [[61, "unit-scaling-functional-silu-glu"]], "unit_scaling.functional.softmax": [[62, "unit-scaling-functional-softmax"]], "unit_scaling.optim": [[63, "module-unit_scaling.optim"]], "unit_scaling.optim.Adam": [[64, "unit-scaling-optim-adam"]], "unit_scaling.optim.AdamW": [[65, "unit-scaling-optim-adamw"]], "unit_scaling.optim.SGD": [[66, "unit-scaling-optim-sgd"]], "unit_scaling.optim.lr_scale_for_depth": [[67, "unit-scaling-optim-lr-scale-for-depth"]], "unit_scaling.optim.lr_scale_func_adam": [[68, "unit-scaling-optim-lr-scale-func-adam"]], "unit_scaling.optim.lr_scale_func_sgd": [[69, "unit-scaling-optim-lr-scale-func-sgd"]], "unit_scaling.optim.scaled_parameters": [[70, "unit-scaling-optim-scaled-parameters"]], "unit_scaling.parameter": [[71, "module-unit_scaling.parameter"]], "unit_scaling.parameter.OrderedDict": [[72, "unit-scaling-parameter-ordereddict"]], "unit_scaling.parameter.Parameter": [[73, "unit-scaling-parameter-parameter"]], "unit_scaling.parameter.ParameterData": [[74, "unit-scaling-parameter-parameterdata"]], "unit_scaling.parameter.Protocol": [[75, "unit-scaling-parameter-protocol"]], "unit_scaling.parameter.Tensor": [[76, "unit-scaling-parameter-tensor"]], "unit_scaling.parameter.has_parameter_data": [[77, "unit-scaling-parameter-has-parameter-data"]], "unit_scaling.scale": [[78, "module-unit_scaling.scale"]], "unit_scaling.scale.scale_bwd": [[79, "unit-scaling-scale-scale-bwd"]], "unit_scaling.scale.scale_fwd": [[80, "unit-scaling-scale-scale-fwd"]], "unit_scaling.transformer_residual_scaling_rule": [[81, "unit-scaling-transformer-residual-scaling-rule"]], "unit_scaling.transforms": [[82, "module-unit_scaling.transforms"]], "unit_scaling.transforms.Metrics": [[83, "unit-scaling-transforms-metrics"]], "unit_scaling.transforms.compile": [[84, "unit-scaling-transforms-compile"]], "unit_scaling.transforms.prune_non_float_tensors": [[85, "unit-scaling-transforms-prune-non-float-tensors"]], "unit_scaling.transforms.prune_same_scale_tensors": [[86, "unit-scaling-transforms-prune-same-scale-tensors"]], "unit_scaling.transforms.prune_selected_nodes": [[87, "unit-scaling-transforms-prune-selected-nodes"]], "unit_scaling.transforms.simulate_format": [[88, "unit-scaling-transforms-simulate-format"]], "unit_scaling.transforms.simulate_fp8": [[89, "unit-scaling-transforms-simulate-fp8"]], "unit_scaling.transforms.track_scales": [[90, "unit-scaling-transforms-track-scales"]], "unit_scaling.transforms.unit_scale": [[91, "unit-scaling-transforms-unit-scale"]], "unit_scaling.transforms.utils": [[92, "module-unit_scaling.transforms.utils"]], "unit_scaling.transforms.utils.apply_transform": [[93, "unit-scaling-transforms-utils-apply-transform"]], "unit_scaling.transforms.utils.patch_to_expand_modules": [[94, "unit-scaling-transforms-utils-patch-to-expand-modules"]], "unit_scaling.transforms.utils.replace_node_with_function": [[95, "unit-scaling-transforms-utils-replace-node-with-function"]], "unit_scaling.transforms.utils.torch_nn_modules_to_user_modules": [[96, "unit-scaling-transforms-utils-torch-nn-modules-to-user-modules"]], "unit_scaling.utils": [[97, "module-unit_scaling.utils"]], "unit_scaling.utils.ScalePair": [[98, "unit-scaling-utils-scalepair"]], "unit_scaling.utils.ScaleTracker": [[99, "unit-scaling-utils-scaletracker"]], "unit_scaling.utils.ScaleTrackingInterpreter": [[100, "unit-scaling-utils-scaletrackinginterpreter"]], "unit_scaling.utils.analyse_module": [[101, "unit-scaling-utils-analyse-module"]], "unit_scaling.visualiser": [[102, "unit-scaling-visualiser"]], "Unit Scaling": [[103, "unit-scaling"]], "Installation": [[103, "installation"], [106, "installation"]], "Getting Started": [[103, "getting-started"]], "Contents": [[103, null]], "Limitations": [[104, "limitations"]], "Almost-scaled dot-product attention": [[105, "almost-scaled-dot-product-attention"]], "User guide": [[106, "user-guide"]], "What is unit scaling?": [[106, "what-is-unit-scaling"]], "How to unit-scale a model": [[106, "how-to-unit-scale-a-model"]], "Key considerations for unit scaling": [[106, "key-considerations-for-unit-scaling"]], "Optimising unit-scaled models": [[106, "optimising-unit-scaled-models"]]}, "indexentries": {"module": [[2, "module-unit_scaling"], [20, "module-unit_scaling.analysis"], [25, "module-unit_scaling.constraints"], [34, "module-unit_scaling.core"], [35, "module-unit_scaling.core.functional"], [40, "module-unit_scaling.formats"], [44, "module-unit_scaling.functional"], [63, "module-unit_scaling.optim"], [71, "module-unit_scaling.parameter"], [78, "module-unit_scaling.scale"], [82, "module-unit_scaling.transforms"], [92, "module-unit_scaling.transforms.utils"], [97, "module-unit_scaling.utils"]], "unit_scaling": [[2, "module-unit_scaling"]], "crossentropyloss (class in unit_scaling)": [[3, "unit_scaling.CrossEntropyLoss"]], "depthmodulelist (class in unit_scaling)": [[4, "unit_scaling.DepthModuleList"]], "append() (unit_scaling.depthmodulelist method)": [[4, "unit_scaling.DepthModuleList.append"]], "extend() (unit_scaling.depthmodulelist method)": [[4, "unit_scaling.DepthModuleList.extend"]], "insert() (unit_scaling.depthmodulelist method)": [[4, "unit_scaling.DepthModuleList.insert"]], "depthsequential (class in unit_scaling)": [[5, "unit_scaling.DepthSequential"]], "append() (unit_scaling.depthsequential method)": [[5, "unit_scaling.DepthSequential.append"]], "dropout (class in unit_scaling)": [[6, "unit_scaling.Dropout"]], "embedding (class in unit_scaling)": [[7, "unit_scaling.Embedding"]], "from_pretrained() (unit_scaling.embedding class method)": [[7, "unit_scaling.Embedding.from_pretrained"]], "weight (unit_scaling.embedding attribute)": [[7, "unit_scaling.Embedding.weight"]], "gelu (class in unit_scaling)": [[8, "unit_scaling.GELU"]], "layernorm (class in unit_scaling)": [[9, "unit_scaling.LayerNorm"]], "bias (unit_scaling.layernorm attribute)": [[9, "unit_scaling.LayerNorm.bias"]], "weight (unit_scaling.layernorm attribute)": [[9, "unit_scaling.LayerNorm.weight"]], "linear (class in unit_scaling)": [[10, "unit_scaling.Linear"]], "bias (unit_scaling.linear attribute)": [[10, "unit_scaling.Linear.bias"]], "weight (unit_scaling.linear attribute)": [[10, "unit_scaling.Linear.weight"]], "linearreadout (class in unit_scaling)": [[11, "unit_scaling.LinearReadout"]], "bias (unit_scaling.linearreadout attribute)": [[11, "unit_scaling.LinearReadout.bias"]], "weight (unit_scaling.linearreadout attribute)": [[11, "unit_scaling.LinearReadout.weight"]], "mhsa (class in unit_scaling)": [[12, "unit_scaling.MHSA"]], "mlp (class in unit_scaling)": [[13, "unit_scaling.MLP"]], "parameter() (in module unit_scaling)": [[14, "unit_scaling.Parameter"]], "rmsnorm (class in unit_scaling)": [[15, "unit_scaling.RMSNorm"]], "weight (unit_scaling.rmsnorm attribute)": [[15, "unit_scaling.RMSNorm.weight"]], "silu (class in unit_scaling)": [[16, "unit_scaling.SiLU"]], "softmax (class in unit_scaling)": [[17, "unit_scaling.Softmax"]], "transformerdecoder (class in unit_scaling)": [[18, "unit_scaling.TransformerDecoder"]], "append() (unit_scaling.transformerdecoder method)": [[18, "unit_scaling.TransformerDecoder.append"]], "transformerlayer (class in unit_scaling)": [[19, "unit_scaling.TransformerLayer"]], "unit_scaling.analysis": [[20, "module-unit_scaling.analysis"]], "example_batch() (in module unit_scaling.analysis)": [[21, "unit_scaling.analysis.example_batch"]], "graph_to_dataframe() (in module unit_scaling.analysis)": [[22, "unit_scaling.analysis.graph_to_dataframe"]], "plot() (in module unit_scaling.analysis)": [[23, "unit_scaling.analysis.plot"]], "visualiser() (in module unit_scaling.analysis)": [[24, "unit_scaling.analysis.visualiser"]], "unit_scaling.constraints": [[25, "module-unit_scaling.constraints"]], "amean() (in module unit_scaling.constraints)": [[26, "unit_scaling.constraints.amean"]], "apply_constraint() (in module unit_scaling.constraints)": [[27, "unit_scaling.constraints.apply_constraint"]], "gmean() (in module unit_scaling.constraints)": [[28, "unit_scaling.constraints.gmean"]], "hmean() (in module unit_scaling.constraints)": [[29, "unit_scaling.constraints.hmean"]], "to_grad_input_scale() (in module unit_scaling.constraints)": [[30, "unit_scaling.constraints.to_grad_input_scale"]], "to_left_grad_scale() (in module unit_scaling.constraints)": [[31, "unit_scaling.constraints.to_left_grad_scale"]], "to_output_scale() (in module unit_scaling.constraints)": [[32, "unit_scaling.constraints.to_output_scale"]], "to_right_grad_scale() (in module unit_scaling.constraints)": [[33, "unit_scaling.constraints.to_right_grad_scale"]], "unit_scaling.core": [[34, "module-unit_scaling.core"]], "unit_scaling.core.functional": [[35, "module-unit_scaling.core.functional"]], "logarithmic_interpolation() (in module unit_scaling.core.functional)": [[36, "unit_scaling.core.functional.logarithmic_interpolation"]], "rms() (in module unit_scaling.core.functional)": [[37, "unit_scaling.core.functional.rms"]], "scale_elementwise() (in module unit_scaling.core.functional)": [[38, "unit_scaling.core.functional.scale_elementwise"]], "transformer_residual_scaling_rule() (in module unit_scaling.core.functional)": [[39, "unit_scaling.core.functional.transformer_residual_scaling_rule"]], "unit_scaling.formats": [[40, "module-unit_scaling.formats"]], "fpformat (class in unit_scaling.formats)": [[41, "unit_scaling.formats.FPFormat"]], "bits (unit_scaling.formats.fpformat property)": [[41, "unit_scaling.formats.FPFormat.bits"]], "max_absolute_value (unit_scaling.formats.fpformat property)": [[41, "unit_scaling.formats.FPFormat.max_absolute_value"]], "min_absolute_normal (unit_scaling.formats.fpformat property)": [[41, "unit_scaling.formats.FPFormat.min_absolute_normal"]], "min_absolute_subnormal (unit_scaling.formats.fpformat property)": [[41, "unit_scaling.formats.FPFormat.min_absolute_subnormal"]], "quantise() (unit_scaling.formats.fpformat method)": [[41, "unit_scaling.formats.FPFormat.quantise"]], "quantise_bwd() (unit_scaling.formats.fpformat method)": [[41, "unit_scaling.formats.FPFormat.quantise_bwd"]], "quantise_fwd() (unit_scaling.formats.fpformat method)": [[41, "unit_scaling.formats.FPFormat.quantise_fwd"]], "format_to_tuple() (in module unit_scaling.formats)": [[42, "unit_scaling.formats.format_to_tuple"]], "tuple_to_format() (in module unit_scaling.formats)": [[43, "unit_scaling.formats.tuple_to_format"]], "unit_scaling.functional": [[44, "module-unit_scaling.functional"]], "add() (in module unit_scaling.functional)": [[45, "unit_scaling.functional.add"]], "cross_entropy() (in module unit_scaling.functional)": [[46, "unit_scaling.functional.cross_entropy"]], "dropout() (in module unit_scaling.functional)": [[47, "unit_scaling.functional.dropout"]], "embedding() (in module unit_scaling.functional)": [[48, "unit_scaling.functional.embedding"]], "gelu() (in module unit_scaling.functional)": [[49, "unit_scaling.functional.gelu"]], "layer_norm() (in module unit_scaling.functional)": [[50, "unit_scaling.functional.layer_norm"]], "linear() (in module unit_scaling.functional)": [[51, "unit_scaling.functional.linear"]], "linear_readout() (in module unit_scaling.functional)": [[52, "unit_scaling.functional.linear_readout"]], "matmul() (in module unit_scaling.functional)": [[53, "unit_scaling.functional.matmul"]], "mse_loss() (in module unit_scaling.functional)": [[54, "unit_scaling.functional.mse_loss"]], "residual_add() (in module unit_scaling.functional)": [[55, "unit_scaling.functional.residual_add"]], "residual_apply() (in module unit_scaling.functional)": [[56, "unit_scaling.functional.residual_apply"]], "residual_split() (in module unit_scaling.functional)": [[57, "unit_scaling.functional.residual_split"]], "rms_norm() (in module unit_scaling.functional)": [[58, "unit_scaling.functional.rms_norm"]], "scaled_dot_product_attention() (in module unit_scaling.functional)": [[59, "unit_scaling.functional.scaled_dot_product_attention"]], "silu() (in module unit_scaling.functional)": [[60, "unit_scaling.functional.silu"]], "silu_glu() (in module unit_scaling.functional)": [[61, "unit_scaling.functional.silu_glu"]], "softmax() (in module unit_scaling.functional)": [[62, "unit_scaling.functional.softmax"]], "unit_scaling.optim": [[63, "module-unit_scaling.optim"]], "adam (class in unit_scaling.optim)": [[64, "unit_scaling.optim.Adam"]], "add_param_group() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.add_param_group"]], "load_state_dict() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.register_step_pre_hook"]], "state_dict() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.state_dict"]], "step() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.step"]], "zero_grad() (unit_scaling.optim.adam method)": [[64, "unit_scaling.optim.Adam.zero_grad"]], "adamw (class in unit_scaling.optim)": [[65, "unit_scaling.optim.AdamW"]], "add_param_group() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.add_param_group"]], "load_state_dict() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.register_step_pre_hook"]], "state_dict() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.state_dict"]], "step() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.step"]], "zero_grad() (unit_scaling.optim.adamw method)": [[65, "unit_scaling.optim.AdamW.zero_grad"]], "sgd (class in unit_scaling.optim)": [[66, "unit_scaling.optim.SGD"]], "add_param_group() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.add_param_group"]], "load_state_dict() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.register_step_pre_hook"]], "state_dict() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.state_dict"]], "step() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.step"]], "zero_grad() (unit_scaling.optim.sgd method)": [[66, "unit_scaling.optim.SGD.zero_grad"]], "lr_scale_for_depth() (in module unit_scaling.optim)": [[67, "unit_scaling.optim.lr_scale_for_depth"]], "lr_scale_func_adam() (in module unit_scaling.optim)": [[68, "unit_scaling.optim.lr_scale_func_adam"]], "lr_scale_func_sgd() (in module unit_scaling.optim)": [[69, "unit_scaling.optim.lr_scale_func_sgd"]], "scaled_parameters() (in module unit_scaling.optim)": [[70, "unit_scaling.optim.scaled_parameters"]], "unit_scaling.parameter": [[71, "module-unit_scaling.parameter"]], "ordereddict (class in unit_scaling.parameter)": [[72, "unit_scaling.parameter.OrderedDict"]], "clear() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.clear"]], "copy() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.copy"]], "fromkeys() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.fromkeys"]], "get() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.get"]], "items() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.items"]], "keys() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.keys"]], "move_to_end() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.move_to_end"]], "pop() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.pop"]], "popitem() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.popitem"]], "setdefault() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.setdefault"]], "update() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.update"]], "values() (unit_scaling.parameter.ordereddict method)": [[72, "unit_scaling.parameter.OrderedDict.values"]], "parameter() (in module unit_scaling.parameter)": [[73, "unit_scaling.parameter.Parameter"]], "parameterdata (class in unit_scaling.parameter)": [[74, "unit_scaling.parameter.ParameterData"]], "protocol (class in unit_scaling.parameter)": [[75, "unit_scaling.parameter.Protocol"]], "h (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.H"]], "t (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.T"]], "tensor (class in unit_scaling.parameter)": [[76, "unit_scaling.parameter.Tensor"]], "abs() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.abs"]], "abs_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.abs_"]], "absolute() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.absolute"]], "absolute_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.absolute_"]], "acos() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.acos"]], "acos_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.acos_"]], "acosh() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.acosh"]], "acosh_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.acosh_"]], "add() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.add"]], "add_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.add_"]], "addbmm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addbmm"]], "addbmm_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addbmm_"]], "addcdiv() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addcdiv"]], "addcdiv_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addcdiv_"]], "addcmul() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addcmul"]], "addcmul_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addcmul_"]], "addmm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addmm"]], "addmm_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addmm_"]], "addmv() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addmv"]], "addmv_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addmv_"]], "addr() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addr"]], "addr_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.addr_"]], "adjoint() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.adjoint"]], "align_as() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.align_as"]], "align_to() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.align_to"]], "all() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.all"]], "allclose() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.allclose"]], "amax() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.amax"]], "amin() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.amin"]], "aminmax() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.aminmax"]], "angle() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.angle"]], "any() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.any"]], "apply_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.apply_"]], "arccos() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arccos"]], "arccos_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arccos_"]], "arccosh() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arccosh"]], "arccosh_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arccosh_"]], "arcsin() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arcsin"]], "arcsin_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arcsin_"]], "arcsinh() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arcsinh"]], "arcsinh_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arcsinh_"]], "arctan() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arctan"]], "arctan2() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arctan2"]], "arctan2_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arctan2_"]], "arctan_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arctan_"]], "arctanh() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arctanh"]], "arctanh_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.arctanh_"]], "argmax() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.argmax"]], "argmin() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.argmin"]], "argsort() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.argsort"]], "argwhere() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.argwhere"]], "as_strided() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.as_strided"]], "as_strided_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.as_strided_"]], "as_strided_scatter() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.as_strided_scatter"]], "as_subclass() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.as_subclass"]], "asin() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.asin"]], "asin_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.asin_"]], "asinh() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.asinh"]], "asinh_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.asinh_"]], "atan() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.atan"]], "atan2() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.atan2"]], "atan2_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.atan2_"]], "atan_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.atan_"]], "atanh() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.atanh"]], "atanh_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.atanh_"]], "backward() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.backward"]], "baddbmm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.baddbmm"]], "baddbmm_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.baddbmm_"]], "bernoulli() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bernoulli"]], "bernoulli_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bernoulli_"]], "bfloat16() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bfloat16"]], "bincount() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bincount"]], "bitwise_and() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_and"]], "bitwise_and_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_and_"]], "bitwise_left_shift() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_left_shift_"]], "bitwise_not() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_not"]], "bitwise_not_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_not_"]], "bitwise_or() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_or"]], "bitwise_or_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_or_"]], "bitwise_right_shift() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_right_shift_"]], "bitwise_xor() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_xor"]], "bitwise_xor_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bitwise_xor_"]], "bmm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bmm"]], "bool() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.bool"]], "broadcast_to() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.broadcast_to"]], "byte() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.byte"]], "cauchy_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cauchy_"]], "cdouble() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cdouble"]], "ceil() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ceil"]], "ceil_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ceil_"]], "cfloat() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cfloat"]], "chalf() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.chalf"]], "char() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.char"]], "cholesky() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cholesky"]], "cholesky_inverse() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cholesky_inverse"]], "cholesky_solve() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cholesky_solve"]], "chunk() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.chunk"]], "clamp() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.clamp"]], "clamp_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.clamp_"]], "clip() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.clip"]], "clip_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.clip_"]], "clone() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.clone"]], "coalesce() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.coalesce"]], "col_indices() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.col_indices"]], "conj() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.conj"]], "conj_physical() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.conj_physical"]], "conj_physical_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.conj_physical_"]], "contiguous() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.contiguous"]], "copy_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.copy_"]], "copysign() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.copysign"]], "copysign_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.copysign_"]], "corrcoef() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.corrcoef"]], "cos() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cos"]], "cos_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cos_"]], "cosh() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cosh"]], "cosh_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cosh_"]], "count_nonzero() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.count_nonzero"]], "cov() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cov"]], "cpu() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cpu"]], "cross() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cross"]], "crow_indices() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.crow_indices"]], "cuda() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cuda"]], "cummax() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cummax"]], "cummin() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cummin"]], "cumprod() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cumprod"]], "cumprod_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cumprod_"]], "cumsum() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cumsum"]], "cumsum_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.cumsum_"]], "data_ptr() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.data_ptr"]], "deg2rad() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.deg2rad"]], "deg2rad_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.deg2rad_"]], "dense_dim() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.dense_dim"]], "dequantize() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.dequantize"]], "det() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.det"]], "detach() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.detach"]], "detach_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.detach_"]], "device (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.device"]], "diag() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.diag"]], "diag_embed() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.diag_embed"]], "diagflat() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.diagflat"]], "diagonal() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.diagonal"]], "diagonal_scatter() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.diagonal_scatter"]], "diff() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.diff"]], "digamma() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.digamma"]], "digamma_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.digamma_"]], "dim() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.dim"]], "dim_order() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.dim_order"]], "dist() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.dist"]], "div() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.div"]], "div_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.div_"]], "divide() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.divide"]], "divide_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.divide_"]], "dot() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.dot"]], "double() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.double"]], "dsplit() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.dsplit"]], "element_size() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.element_size"]], "eq() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.eq"]], "eq_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.eq_"]], "equal() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.equal"]], "erf() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.erf"]], "erf_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.erf_"]], "erfc() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.erfc"]], "erfc_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.erfc_"]], "erfinv() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.erfinv"]], "erfinv_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.erfinv_"]], "exp() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.exp"]], "exp2() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.exp2"]], "exp2_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.exp2_"]], "exp_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.exp_"]], "expand() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.expand"]], "expand_as() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.expand_as"]], "expm1() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.expm1"]], "expm1_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.expm1_"]], "exponential_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.exponential_"]], "fill_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.fill_"]], "fill_diagonal_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.fill_diagonal_"]], "fix() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.fix"]], "fix_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.fix_"]], "flatten() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.flatten"]], "flip() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.flip"]], "fliplr() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.fliplr"]], "flipud() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.flipud"]], "float() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.float"]], "float_power() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.float_power"]], "float_power_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.float_power_"]], "floor() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.floor"]], "floor_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.floor_"]], "floor_divide() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.floor_divide"]], "floor_divide_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.floor_divide_"]], "fmax() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.fmax"]], "fmin() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.fmin"]], "fmod() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.fmod"]], "fmod_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.fmod_"]], "frac() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.frac"]], "frac_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.frac_"]], "frexp() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.frexp"]], "gather() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.gather"]], "gcd() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.gcd"]], "gcd_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.gcd_"]], "ge() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ge"]], "ge_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ge_"]], "geometric_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.geometric_"]], "geqrf() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.geqrf"]], "ger() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ger"]], "get_device() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.get_device"]], "grad (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.grad"]], "greater() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.greater"]], "greater_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.greater_"]], "greater_equal() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.greater_equal"]], "greater_equal_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.greater_equal_"]], "gt() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.gt"]], "gt_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.gt_"]], "half() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.half"]], "hardshrink() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.hardshrink"]], "has_names() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.has_names"]], "heaviside() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.heaviside"]], "heaviside_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.heaviside_"]], "histc() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.histc"]], "histogram() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.histogram"]], "hsplit() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.hsplit"]], "hypot() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.hypot"]], "hypot_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.hypot_"]], "i0() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.i0"]], "i0_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.i0_"]], "igamma() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.igamma"]], "igamma_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.igamma_"]], "igammac() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.igammac"]], "igammac_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.igammac_"]], "imag (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.imag"]], "index_add() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_add"]], "index_add_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_add_"]], "index_copy() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_copy"]], "index_copy_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_copy_"]], "index_fill() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_fill"]], "index_fill_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_fill_"]], "index_put() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_put"]], "index_put_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_put_"]], "index_reduce_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_reduce_"]], "index_select() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.index_select"]], "indices() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.indices"]], "inner() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.inner"]], "int() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.int"]], "int_repr() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.int_repr"]], "inverse() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.inverse"]], "ipu() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ipu"]], "is_coalesced() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_coalesced"]], "is_complex() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_complex"]], "is_conj() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_conj"]], "is_contiguous() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_contiguous"]], "is_cpu (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_cpu"]], "is_cuda (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_cuda"]], "is_floating_point() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_floating_point"]], "is_inference() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_inference"]], "is_ipu (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_ipu"]], "is_leaf (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_leaf"]], "is_meta (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_meta"]], "is_mps (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_mps"]], "is_neg() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_neg"]], "is_pinned() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_pinned"]], "is_quantized (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_quantized"]], "is_set_to() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_set_to"]], "is_shared() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_shared"]], "is_signed() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.is_signed"]], "is_sparse (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_sparse"]], "is_sparse_csr (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_sparse_csr"]], "is_xla (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_xla"]], "is_xpu (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.is_xpu"]], "isclose() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.isclose"]], "isfinite() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.isfinite"]], "isinf() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.isinf"]], "isnan() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.isnan"]], "isneginf() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.isneginf"]], "isposinf() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.isposinf"]], "isreal() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.isreal"]], "istft() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.istft"]], "item() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.item"]], "itemsize (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.itemsize"]], "kron() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.kron"]], "kthvalue() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.kthvalue"]], "lcm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lcm"]], "lcm_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lcm_"]], "ldexp() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ldexp"]], "ldexp_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ldexp_"]], "le() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.le"]], "le_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.le_"]], "lerp() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lerp"]], "lerp_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lerp_"]], "less() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.less"]], "less_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.less_"]], "less_equal() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.less_equal"]], "less_equal_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.less_equal_"]], "lgamma() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lgamma"]], "lgamma_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lgamma_"]], "log() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.log"]], "log10() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.log10"]], "log10_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.log10_"]], "log1p() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.log1p"]], "log1p_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.log1p_"]], "log2() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.log2"]], "log2_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.log2_"]], "log_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.log_"]], "log_normal_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.log_normal_"]], "logaddexp() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logaddexp"]], "logaddexp2() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logaddexp2"]], "logcumsumexp() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logcumsumexp"]], "logdet() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logdet"]], "logical_and() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logical_and"]], "logical_and_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logical_and_"]], "logical_not() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logical_not"]], "logical_not_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logical_not_"]], "logical_or() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logical_or"]], "logical_or_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logical_or_"]], "logical_xor() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logical_xor"]], "logical_xor_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logical_xor_"]], "logit() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logit"]], "logit_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logit_"]], "logsumexp() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.logsumexp"]], "long() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.long"]], "lt() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lt"]], "lt_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lt_"]], "lu() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lu"]], "lu_solve() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.lu_solve"]], "mh (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.mH"]], "mt (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.mT"]], "map_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.map_"]], "masked_fill() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.masked_fill"]], "masked_fill_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.masked_fill_"]], "masked_scatter() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.masked_scatter"]], "masked_scatter_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.masked_scatter_"]], "masked_select() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.masked_select"]], "matmul() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.matmul"]], "matrix_exp() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.matrix_exp"]], "matrix_power() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.matrix_power"]], "max() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.max"]], "maximum() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.maximum"]], "mean() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.mean"]], "median() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.median"]], "min() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.min"]], "minimum() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.minimum"]], "mm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.mm"]], "mode() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.mode"]], "module_load() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.module_load"]], "moveaxis() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.moveaxis"]], "movedim() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.movedim"]], "msort() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.msort"]], "mul() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.mul"]], "mul_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.mul_"]], "multinomial() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.multinomial"]], "multiply() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.multiply"]], "multiply_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.multiply_"]], "mv() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.mv"]], "mvlgamma() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.mvlgamma"]], "mvlgamma_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.mvlgamma_"]], "names (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.names"]], "nan_to_num() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nan_to_num"]], "nan_to_num_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nan_to_num_"]], "nanmean() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nanmean"]], "nanmedian() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nanmedian"]], "nanquantile() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nanquantile"]], "nansum() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nansum"]], "narrow() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.narrow"]], "narrow_copy() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.narrow_copy"]], "nbytes (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.nbytes"]], "ndim (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.ndim"]], "ndimension() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ndimension"]], "ne() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ne"]], "ne_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ne_"]], "neg() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.neg"]], "neg_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.neg_"]], "negative() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.negative"]], "negative_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.negative_"]], "nelement() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nelement"]], "new_empty() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.new_empty"]], "new_empty_strided() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.new_empty_strided"]], "new_full() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.new_full"]], "new_ones() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.new_ones"]], "new_tensor() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.new_tensor"]], "new_zeros() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.new_zeros"]], "nextafter() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nextafter"]], "nextafter_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nextafter_"]], "nonzero() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nonzero"]], "nonzero_static() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.nonzero_static"]], "norm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.norm"]], "normal_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.normal_"]], "not_equal() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.not_equal"]], "not_equal_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.not_equal_"]], "numel() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.numel"]], "numpy() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.numpy"]], "orgqr() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.orgqr"]], "ormqr() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ormqr"]], "outer() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.outer"]], "permute() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.permute"]], "pin_memory() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.pin_memory"]], "pinverse() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.pinverse"]], "polygamma() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.polygamma"]], "polygamma_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.polygamma_"]], "positive() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.positive"]], "pow() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.pow"]], "pow_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.pow_"]], "prod() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.prod"]], "put() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.put"]], "put_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.put_"]], "q_per_channel_axis() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.q_per_channel_zero_points"]], "q_scale() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.q_scale"]], "q_zero_point() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.q_zero_point"]], "qr() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.qr"]], "qscheme() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.qscheme"]], "quantile() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.quantile"]], "rad2deg() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.rad2deg"]], "rad2deg_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.rad2deg_"]], "random_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.random_"]], "ravel() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.ravel"]], "real (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.real"]], "reciprocal() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.reciprocal"]], "reciprocal_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.reciprocal_"]], "record_stream() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.record_stream"]], "refine_names() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.refine_names"]], "register_hook() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.register_post_accumulate_grad_hook"]], "remainder() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.remainder"]], "remainder_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.remainder_"]], "rename() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.rename"]], "rename_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.rename_"]], "renorm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.renorm"]], "renorm_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.renorm_"]], "repeat() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.repeat"]], "repeat_interleave() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.repeat_interleave"]], "requires_grad (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.requires_grad"]], "requires_grad_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.requires_grad_"]], "reshape() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.reshape"]], "reshape_as() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.reshape_as"]], "resize_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.resize_"]], "resize_as_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.resize_as_"]], "resolve_conj() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.resolve_conj"]], "resolve_neg() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.resolve_neg"]], "retain_grad() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.retain_grad"]], "retains_grad (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.retains_grad"]], "roll() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.roll"]], "rot90() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.rot90"]], "round() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.round"]], "round_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.round_"]], "rsqrt() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.rsqrt"]], "rsqrt_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.rsqrt_"]], "scatter() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.scatter"]], "scatter_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.scatter_"]], "scatter_add() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.scatter_add"]], "scatter_add_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.scatter_add_"]], "scatter_reduce() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.scatter_reduce"]], "scatter_reduce_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.scatter_reduce_"]], "select() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.select"]], "select_scatter() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.select_scatter"]], "set_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.set_"]], "sgn() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sgn"]], "sgn_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sgn_"]], "shape (unit_scaling.parameter.tensor attribute)": [[76, "unit_scaling.parameter.Tensor.shape"]], "share_memory_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.share_memory_"]], "short() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.short"]], "sigmoid() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sigmoid"]], "sigmoid_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sigmoid_"]], "sign() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sign"]], "sign_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sign_"]], "signbit() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.signbit"]], "sin() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sin"]], "sin_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sin_"]], "sinc() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sinc"]], "sinc_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sinc_"]], "sinh() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sinh"]], "sinh_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sinh_"]], "size() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.size"]], "slice_scatter() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.slice_scatter"]], "slogdet() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.slogdet"]], "smm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.smm"]], "softmax() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.softmax"]], "sort() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sort"]], "sparse_dim() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sparse_dim"]], "sparse_mask() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sparse_mask"]], "sparse_resize_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sparse_resize_and_clear_"]], "split() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.split"]], "sqrt() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sqrt"]], "sqrt_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sqrt_"]], "square() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.square"]], "square_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.square_"]], "squeeze() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.squeeze"]], "squeeze_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.squeeze_"]], "sspaddmm() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sspaddmm"]], "std() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.std"]], "stft() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.stft"]], "storage() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.storage"]], "storage_offset() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.storage_offset"]], "storage_type() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.storage_type"]], "stride() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.stride"]], "sub() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sub"]], "sub_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sub_"]], "subtract() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.subtract"]], "subtract_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.subtract_"]], "sum() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sum"]], "sum_to_size() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.sum_to_size"]], "svd() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.svd"]], "swapaxes() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.swapaxes"]], "swapaxes_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.swapaxes_"]], "swapdims() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.swapdims"]], "swapdims_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.swapdims_"]], "t() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.t"]], "t_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.t_"]], "take() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.take"]], "take_along_dim() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.take_along_dim"]], "tan() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.tan"]], "tan_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.tan_"]], "tanh() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.tanh"]], "tanh_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.tanh_"]], "tensor_split() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.tensor_split"]], "tile() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.tile"]], "to() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to"]], "to_dense() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to_dense"]], "to_mkldnn() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to_mkldnn"]], "to_padded_tensor() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to_padded_tensor"]], "to_sparse() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to_sparse"]], "to_sparse_bsc() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to_sparse_bsr"]], "to_sparse_coo() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to_sparse_coo"]], "to_sparse_csc() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to_sparse_csc"]], "to_sparse_csr() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.to_sparse_csr"]], "tolist() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.tolist"]], "topk() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.topk"]], "trace() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.trace"]], "transpose() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.transpose"]], "transpose_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.transpose_"]], "triangular_solve() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.triangular_solve"]], "tril() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.tril"]], "tril_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.tril_"]], "triu() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.triu"]], "triu_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.triu_"]], "true_divide() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.true_divide"]], "true_divide_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.true_divide_"]], "trunc() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.trunc"]], "trunc_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.trunc_"]], "type() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.type"]], "type_as() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.type_as"]], "unbind() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.unbind"]], "unflatten() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.unflatten"]], "unfold() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.unfold"]], "uniform_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.uniform_"]], "unique() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.unique"]], "unique_consecutive() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.unique_consecutive"]], "unsafe_chunk() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.unsafe_chunk"]], "unsafe_split() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.unsafe_split"]], "unsqueeze() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.unsqueeze"]], "unsqueeze_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.unsqueeze_"]], "untyped_storage() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.untyped_storage"]], "values() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.values"]], "var() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.var"]], "vdot() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.vdot"]], "view() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.view"]], "view_as() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.view_as"]], "vsplit() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.vsplit"]], "where() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.where"]], "xlogy() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.xlogy"]], "xlogy_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.xlogy_"]], "xpu() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.xpu"]], "zero_() (unit_scaling.parameter.tensor method)": [[76, "unit_scaling.parameter.Tensor.zero_"]], "has_parameter_data() (in module unit_scaling.parameter)": [[77, "unit_scaling.parameter.has_parameter_data"]], "unit_scaling.scale": [[78, "module-unit_scaling.scale"]], "scale_bwd() (in module unit_scaling.scale)": [[79, "unit_scaling.scale.scale_bwd"]], "scale_fwd() (in module unit_scaling.scale)": [[80, "unit_scaling.scale.scale_fwd"]], "transformer_residual_scaling_rule() (in module unit_scaling)": [[81, "unit_scaling.transformer_residual_scaling_rule"]], "unit_scaling.transforms": [[82, "module-unit_scaling.transforms"]], "metrics (class in unit_scaling.transforms)": [[83, "unit_scaling.transforms.Metrics"]], "metrics.data (class in unit_scaling.transforms)": [[83, "unit_scaling.transforms.Metrics.Data"]], "compile() (in module unit_scaling.transforms)": [[84, "unit_scaling.transforms.compile"]], "prune_non_float_tensors() (in module unit_scaling.transforms)": [[85, "unit_scaling.transforms.prune_non_float_tensors"]], "prune_same_scale_tensors() (in module unit_scaling.transforms)": [[86, "unit_scaling.transforms.prune_same_scale_tensors"]], "prune_selected_nodes() (in module unit_scaling.transforms)": [[87, "unit_scaling.transforms.prune_selected_nodes"]], "simulate_format() (in module unit_scaling.transforms)": [[88, "unit_scaling.transforms.simulate_format"]], "simulate_fp8() (in module unit_scaling.transforms)": [[89, "unit_scaling.transforms.simulate_fp8"]], "track_scales() (in module unit_scaling.transforms)": [[90, "unit_scaling.transforms.track_scales"]], "unit_scale() (in module unit_scaling.transforms)": [[91, "unit_scaling.transforms.unit_scale"]], "unit_scaling.transforms.utils": [[92, "module-unit_scaling.transforms.utils"]], "apply_transform() (in module unit_scaling.transforms.utils)": [[93, "unit_scaling.transforms.utils.apply_transform"]], "patch_to_expand_modules() (in module unit_scaling.transforms.utils)": [[94, "unit_scaling.transforms.utils.patch_to_expand_modules"]], "replace_node_with_function() (in module unit_scaling.transforms.utils)": [[95, "unit_scaling.transforms.utils.replace_node_with_function"]], "torch_nn_modules_to_user_modules() (in module unit_scaling.transforms.utils)": [[96, "unit_scaling.transforms.utils.torch_nn_modules_to_user_modules"]], "unit_scaling.utils": [[97, "module-unit_scaling.utils"]], "scalepair (class in unit_scaling.utils)": [[98, "unit_scaling.utils.ScalePair"]], "scaletracker (class in unit_scaling.utils)": [[99, "unit_scaling.utils.ScaleTracker"]], "backward() (unit_scaling.utils.scaletracker static method)": [[99, "unit_scaling.utils.ScaleTracker.backward"]], "jvp() (unit_scaling.utils.scaletracker static method)": [[99, "unit_scaling.utils.ScaleTracker.jvp"]], "mark_dirty() (unit_scaling.utils.scaletracker method)": [[99, "unit_scaling.utils.ScaleTracker.mark_dirty"]], "mark_non_differentiable() (unit_scaling.utils.scaletracker method)": [[99, "unit_scaling.utils.ScaleTracker.mark_non_differentiable"]], "save_for_backward() (unit_scaling.utils.scaletracker method)": [[99, "unit_scaling.utils.ScaleTracker.save_for_backward"]], "save_for_forward() (unit_scaling.utils.scaletracker method)": [[99, "unit_scaling.utils.ScaleTracker.save_for_forward"]], "set_materialize_grads() (unit_scaling.utils.scaletracker method)": [[99, "unit_scaling.utils.ScaleTracker.set_materialize_grads"]], "setup_context() (unit_scaling.utils.scaletracker static method)": [[99, "unit_scaling.utils.ScaleTracker.setup_context"]], "vjp() (unit_scaling.utils.scaletracker static method)": [[99, "unit_scaling.utils.ScaleTracker.vjp"]], "vmap() (unit_scaling.utils.scaletracker static method)": [[99, "unit_scaling.utils.ScaleTracker.vmap"]], "scaletrackinginterpreter (class in unit_scaling.utils)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter"]], "boxed_run() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.boxed_run"]], "call_function() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.call_function"]], "call_method() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.call_method"]], "call_module() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.call_module"]], "fetch_args_kwargs_from_env() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.fetch_attr"]], "get_attr() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.get_attr"]], "map_nodes_to_values() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.map_nodes_to_values"]], "output() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.output"]], "placeholder() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.placeholder"]], "run() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.run"]], "run_node() (unit_scaling.utils.scaletrackinginterpreter method)": [[100, "unit_scaling.utils.ScaleTrackingInterpreter.run_node"]], "analyse_module() (in module unit_scaling.utils)": [[101, "unit_scaling.utils.analyse_module"]], "visualiser() (in module unit_scaling)": [[102, "unit_scaling.visualiser"]]}})