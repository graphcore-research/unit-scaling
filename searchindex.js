Search.setIndex({"docnames": ["api_reference", "development", "generated/unit_scaling", "generated/unit_scaling.Conv1d", "generated/unit_scaling.CrossEntropyLoss", "generated/unit_scaling.DepthModuleList", "generated/unit_scaling.DepthSequential", "generated/unit_scaling.Dropout", "generated/unit_scaling.Embedding", "generated/unit_scaling.GELU", "generated/unit_scaling.LayerNorm", "generated/unit_scaling.Linear", "generated/unit_scaling.LinearReadout", "generated/unit_scaling.MHSA", "generated/unit_scaling.MLP", "generated/unit_scaling.Parameter", "generated/unit_scaling.RMSNorm", "generated/unit_scaling.SiLU", "generated/unit_scaling.Softmax", "generated/unit_scaling.TransformerDecoder", "generated/unit_scaling.TransformerLayer", "generated/unit_scaling.analysis", "generated/unit_scaling.analysis.example_batch", "generated/unit_scaling.analysis.graph_to_dataframe", "generated/unit_scaling.analysis.plot", "generated/unit_scaling.analysis.visualiser", "generated/unit_scaling.constraints", "generated/unit_scaling.constraints.amean", "generated/unit_scaling.constraints.apply_constraint", "generated/unit_scaling.constraints.gmean", "generated/unit_scaling.constraints.hmean", "generated/unit_scaling.constraints.to_grad_input_scale", "generated/unit_scaling.constraints.to_left_grad_scale", "generated/unit_scaling.constraints.to_output_scale", "generated/unit_scaling.constraints.to_right_grad_scale", "generated/unit_scaling.core", "generated/unit_scaling.core.functional", "generated/unit_scaling.core.functional.logarithmic_interpolation", "generated/unit_scaling.core.functional.rms", "generated/unit_scaling.core.functional.scale_elementwise", "generated/unit_scaling.core.functional.transformer_residual_scaling_rule", "generated/unit_scaling.formats", "generated/unit_scaling.formats.FPFormat", "generated/unit_scaling.formats.format_to_tuple", "generated/unit_scaling.formats.tuple_to_format", "generated/unit_scaling.functional", "generated/unit_scaling.functional.add", "generated/unit_scaling.functional.conv1d", "generated/unit_scaling.functional.cross_entropy", "generated/unit_scaling.functional.dropout", "generated/unit_scaling.functional.embedding", "generated/unit_scaling.functional.gelu", "generated/unit_scaling.functional.layer_norm", "generated/unit_scaling.functional.linear", "generated/unit_scaling.functional.linear_readout", "generated/unit_scaling.functional.matmul", "generated/unit_scaling.functional.mse_loss", "generated/unit_scaling.functional.residual_add", "generated/unit_scaling.functional.residual_apply", "generated/unit_scaling.functional.residual_split", "generated/unit_scaling.functional.rms_norm", "generated/unit_scaling.functional.scaled_dot_product_attention", "generated/unit_scaling.functional.silu", "generated/unit_scaling.functional.silu_glu", "generated/unit_scaling.functional.softmax", "generated/unit_scaling.optim", "generated/unit_scaling.optim.Adam", "generated/unit_scaling.optim.AdamW", "generated/unit_scaling.optim.SGD", "generated/unit_scaling.optim.lr_scale_for_depth", "generated/unit_scaling.optim.lr_scale_func_adam", "generated/unit_scaling.optim.lr_scale_func_sgd", "generated/unit_scaling.optim.scaled_parameters", "generated/unit_scaling.parameter", "generated/unit_scaling.parameter.OrderedDict", "generated/unit_scaling.parameter.Parameter", "generated/unit_scaling.parameter.ParameterData", "generated/unit_scaling.parameter.Protocol", "generated/unit_scaling.parameter.Tensor", "generated/unit_scaling.parameter.has_parameter_data", "generated/unit_scaling.scale", "generated/unit_scaling.scale.scale_bwd", "generated/unit_scaling.scale.scale_fwd", "generated/unit_scaling.transformer_residual_scaling_rule", "generated/unit_scaling.transforms", "generated/unit_scaling.transforms.Metrics", "generated/unit_scaling.transforms.compile", "generated/unit_scaling.transforms.prune_non_float_tensors", "generated/unit_scaling.transforms.prune_same_scale_tensors", "generated/unit_scaling.transforms.prune_selected_nodes", "generated/unit_scaling.transforms.simulate_format", "generated/unit_scaling.transforms.simulate_fp8", "generated/unit_scaling.transforms.track_scales", "generated/unit_scaling.transforms.unit_scale", "generated/unit_scaling.transforms.utils", "generated/unit_scaling.transforms.utils.apply_transform", "generated/unit_scaling.transforms.utils.patch_to_expand_modules", "generated/unit_scaling.transforms.utils.replace_node_with_function", "generated/unit_scaling.transforms.utils.torch_nn_modules_to_user_modules", "generated/unit_scaling.utils", "generated/unit_scaling.utils.ScalePair", "generated/unit_scaling.utils.ScaleTracker", "generated/unit_scaling.utils.ScaleTrackingInterpreter", "generated/unit_scaling.utils.analyse_module", "generated/unit_scaling.visualiser", "index", "limitations", "posts/almost_scaled_dot_product_attention", "user_guide"], "filenames": ["api_reference.rst", "development.md", "generated/unit_scaling.rst", "generated/unit_scaling.Conv1d.rst", "generated/unit_scaling.CrossEntropyLoss.rst", "generated/unit_scaling.DepthModuleList.rst", "generated/unit_scaling.DepthSequential.rst", "generated/unit_scaling.Dropout.rst", "generated/unit_scaling.Embedding.rst", "generated/unit_scaling.GELU.rst", "generated/unit_scaling.LayerNorm.rst", "generated/unit_scaling.Linear.rst", "generated/unit_scaling.LinearReadout.rst", "generated/unit_scaling.MHSA.rst", "generated/unit_scaling.MLP.rst", "generated/unit_scaling.Parameter.rst", "generated/unit_scaling.RMSNorm.rst", "generated/unit_scaling.SiLU.rst", "generated/unit_scaling.Softmax.rst", "generated/unit_scaling.TransformerDecoder.rst", "generated/unit_scaling.TransformerLayer.rst", "generated/unit_scaling.analysis.rst", "generated/unit_scaling.analysis.example_batch.rst", "generated/unit_scaling.analysis.graph_to_dataframe.rst", "generated/unit_scaling.analysis.plot.rst", "generated/unit_scaling.analysis.visualiser.rst", "generated/unit_scaling.constraints.rst", "generated/unit_scaling.constraints.amean.rst", "generated/unit_scaling.constraints.apply_constraint.rst", "generated/unit_scaling.constraints.gmean.rst", "generated/unit_scaling.constraints.hmean.rst", "generated/unit_scaling.constraints.to_grad_input_scale.rst", "generated/unit_scaling.constraints.to_left_grad_scale.rst", "generated/unit_scaling.constraints.to_output_scale.rst", "generated/unit_scaling.constraints.to_right_grad_scale.rst", "generated/unit_scaling.core.rst", "generated/unit_scaling.core.functional.rst", "generated/unit_scaling.core.functional.logarithmic_interpolation.rst", "generated/unit_scaling.core.functional.rms.rst", "generated/unit_scaling.core.functional.scale_elementwise.rst", "generated/unit_scaling.core.functional.transformer_residual_scaling_rule.rst", "generated/unit_scaling.formats.rst", "generated/unit_scaling.formats.FPFormat.rst", "generated/unit_scaling.formats.format_to_tuple.rst", "generated/unit_scaling.formats.tuple_to_format.rst", "generated/unit_scaling.functional.rst", "generated/unit_scaling.functional.add.rst", "generated/unit_scaling.functional.conv1d.rst", "generated/unit_scaling.functional.cross_entropy.rst", "generated/unit_scaling.functional.dropout.rst", "generated/unit_scaling.functional.embedding.rst", "generated/unit_scaling.functional.gelu.rst", "generated/unit_scaling.functional.layer_norm.rst", "generated/unit_scaling.functional.linear.rst", "generated/unit_scaling.functional.linear_readout.rst", "generated/unit_scaling.functional.matmul.rst", "generated/unit_scaling.functional.mse_loss.rst", "generated/unit_scaling.functional.residual_add.rst", "generated/unit_scaling.functional.residual_apply.rst", "generated/unit_scaling.functional.residual_split.rst", "generated/unit_scaling.functional.rms_norm.rst", "generated/unit_scaling.functional.scaled_dot_product_attention.rst", "generated/unit_scaling.functional.silu.rst", "generated/unit_scaling.functional.silu_glu.rst", "generated/unit_scaling.functional.softmax.rst", "generated/unit_scaling.optim.rst", "generated/unit_scaling.optim.Adam.rst", "generated/unit_scaling.optim.AdamW.rst", "generated/unit_scaling.optim.SGD.rst", "generated/unit_scaling.optim.lr_scale_for_depth.rst", "generated/unit_scaling.optim.lr_scale_func_adam.rst", "generated/unit_scaling.optim.lr_scale_func_sgd.rst", "generated/unit_scaling.optim.scaled_parameters.rst", "generated/unit_scaling.parameter.rst", "generated/unit_scaling.parameter.OrderedDict.rst", "generated/unit_scaling.parameter.Parameter.rst", "generated/unit_scaling.parameter.ParameterData.rst", "generated/unit_scaling.parameter.Protocol.rst", "generated/unit_scaling.parameter.Tensor.rst", "generated/unit_scaling.parameter.has_parameter_data.rst", "generated/unit_scaling.scale.rst", "generated/unit_scaling.scale.scale_bwd.rst", "generated/unit_scaling.scale.scale_fwd.rst", "generated/unit_scaling.transformer_residual_scaling_rule.rst", "generated/unit_scaling.transforms.rst", "generated/unit_scaling.transforms.Metrics.rst", "generated/unit_scaling.transforms.compile.rst", "generated/unit_scaling.transforms.prune_non_float_tensors.rst", "generated/unit_scaling.transforms.prune_same_scale_tensors.rst", "generated/unit_scaling.transforms.prune_selected_nodes.rst", "generated/unit_scaling.transforms.simulate_format.rst", "generated/unit_scaling.transforms.simulate_fp8.rst", "generated/unit_scaling.transforms.track_scales.rst", "generated/unit_scaling.transforms.unit_scale.rst", "generated/unit_scaling.transforms.utils.rst", "generated/unit_scaling.transforms.utils.apply_transform.rst", "generated/unit_scaling.transforms.utils.patch_to_expand_modules.rst", "generated/unit_scaling.transforms.utils.replace_node_with_function.rst", "generated/unit_scaling.transforms.utils.torch_nn_modules_to_user_modules.rst", "generated/unit_scaling.utils.rst", "generated/unit_scaling.utils.ScalePair.rst", "generated/unit_scaling.utils.ScaleTracker.rst", "generated/unit_scaling.utils.ScaleTrackingInterpreter.rst", "generated/unit_scaling.utils.analyse_module.rst", "generated/unit_scaling.visualiser.rst", "index.rst", "limitations.rst", "posts/almost_scaled_dot_product_attention.md", "user_guide.rst"], "titles": ["<span class=\"section-number\">4. </span>API reference", "<span class=\"section-number\">2. </span>Development", "<span class=\"section-number\">4.1. </span>unit_scaling", "<span class=\"section-number\">4.1.4. </span>unit_scaling.Conv1d", "<span class=\"section-number\">4.1.5. </span>unit_scaling.CrossEntropyLoss", "<span class=\"section-number\">4.1.6. </span>unit_scaling.DepthModuleList", "<span class=\"section-number\">4.1.7. </span>unit_scaling.DepthSequential", "<span class=\"section-number\">4.1.8. </span>unit_scaling.Dropout", "<span class=\"section-number\">4.1.9. </span>unit_scaling.Embedding", "<span class=\"section-number\">4.1.10. </span>unit_scaling.GELU", "<span class=\"section-number\">4.1.11. </span>unit_scaling.LayerNorm", "<span class=\"section-number\">4.1.12. </span>unit_scaling.Linear", "<span class=\"section-number\">4.1.13. </span>unit_scaling.LinearReadout", "<span class=\"section-number\">4.1.14. </span>unit_scaling.MHSA", "<span class=\"section-number\">4.1.15. </span>unit_scaling.MLP", "<span class=\"section-number\">4.1.1. </span>unit_scaling.Parameter", "<span class=\"section-number\">4.1.16. </span>unit_scaling.RMSNorm", "<span class=\"section-number\">4.1.17. </span>unit_scaling.SiLU", "<span class=\"section-number\">4.1.18. </span>unit_scaling.Softmax", "<span class=\"section-number\">4.1.19. </span>unit_scaling.TransformerDecoder", "<span class=\"section-number\">4.1.20. </span>unit_scaling.TransformerLayer", "<span class=\"section-number\">4.2. </span>unit_scaling.analysis", "<span class=\"section-number\">4.2.1. </span>unit_scaling.analysis.example_batch", "<span class=\"section-number\">4.2.2. </span>unit_scaling.analysis.graph_to_dataframe", "<span class=\"section-number\">4.2.3. </span>unit_scaling.analysis.plot", "<span class=\"section-number\">4.2.4. </span>unit_scaling.analysis.visualiser", "<span class=\"section-number\">4.3. </span>unit_scaling.constraints", "<span class=\"section-number\">4.3.1. </span>unit_scaling.constraints.amean", "<span class=\"section-number\">4.3.2. </span>unit_scaling.constraints.apply_constraint", "<span class=\"section-number\">4.3.3. </span>unit_scaling.constraints.gmean", "<span class=\"section-number\">4.3.4. </span>unit_scaling.constraints.hmean", "<span class=\"section-number\">4.3.5. </span>unit_scaling.constraints.to_grad_input_scale", "<span class=\"section-number\">4.3.6. </span>unit_scaling.constraints.to_left_grad_scale", "<span class=\"section-number\">4.3.7. </span>unit_scaling.constraints.to_output_scale", "<span class=\"section-number\">4.3.8. </span>unit_scaling.constraints.to_right_grad_scale", "<span class=\"section-number\">4.1.21. </span>unit_scaling.core", "<span class=\"section-number\">4.1.21.1. </span>unit_scaling.core.functional", "<span class=\"section-number\">4.1.21.1.1. </span>unit_scaling.core.functional.logarithmic_interpolation", "<span class=\"section-number\">4.1.21.1.2. </span>unit_scaling.core.functional.rms", "<span class=\"section-number\">4.1.21.1.3. </span>unit_scaling.core.functional.scale_elementwise", "<span class=\"section-number\">4.1.21.1.4. </span>unit_scaling.core.functional.transformer_residual_scaling_rule", "<span class=\"section-number\">4.4. </span>unit_scaling.formats", "<span class=\"section-number\">4.4.3. </span>unit_scaling.formats.FPFormat", "<span class=\"section-number\">4.4.1. </span>unit_scaling.formats.format_to_tuple", "<span class=\"section-number\">4.4.2. </span>unit_scaling.formats.tuple_to_format", "<span class=\"section-number\">4.1.22. </span>unit_scaling.functional", "<span class=\"section-number\">4.1.22.1. </span>unit_scaling.functional.add", "<span class=\"section-number\">4.1.22.2. </span>unit_scaling.functional.conv1d", "<span class=\"section-number\">4.1.22.3. </span>unit_scaling.functional.cross_entropy", "<span class=\"section-number\">4.1.22.4. </span>unit_scaling.functional.dropout", "<span class=\"section-number\">4.1.22.5. </span>unit_scaling.functional.embedding", "<span class=\"section-number\">4.1.22.6. </span>unit_scaling.functional.gelu", "<span class=\"section-number\">4.1.22.7. </span>unit_scaling.functional.layer_norm", "<span class=\"section-number\">4.1.22.8. </span>unit_scaling.functional.linear", "<span class=\"section-number\">4.1.22.9. </span>unit_scaling.functional.linear_readout", "<span class=\"section-number\">4.1.22.10. </span>unit_scaling.functional.matmul", "<span class=\"section-number\">4.1.22.11. </span>unit_scaling.functional.mse_loss", "<span class=\"section-number\">4.1.22.12. </span>unit_scaling.functional.residual_add", "<span class=\"section-number\">4.1.22.13. </span>unit_scaling.functional.residual_apply", "<span class=\"section-number\">4.1.22.14. </span>unit_scaling.functional.residual_split", "<span class=\"section-number\">4.1.22.15. </span>unit_scaling.functional.rms_norm", "<span class=\"section-number\">4.1.22.16. </span>unit_scaling.functional.scaled_dot_product_attention", "<span class=\"section-number\">4.1.22.17. </span>unit_scaling.functional.silu", "<span class=\"section-number\">4.1.22.18. </span>unit_scaling.functional.silu_glu", "<span class=\"section-number\">4.1.22.19. </span>unit_scaling.functional.softmax", "<span class=\"section-number\">4.1.23. </span>unit_scaling.optim", "<span class=\"section-number\">4.1.23.5. </span>unit_scaling.optim.Adam", "<span class=\"section-number\">4.1.23.6. </span>unit_scaling.optim.AdamW", "<span class=\"section-number\">4.1.23.7. </span>unit_scaling.optim.SGD", "<span class=\"section-number\">4.1.23.1. </span>unit_scaling.optim.lr_scale_for_depth", "<span class=\"section-number\">4.1.23.2. </span>unit_scaling.optim.lr_scale_func_adam", "<span class=\"section-number\">4.1.23.3. </span>unit_scaling.optim.lr_scale_func_sgd", "<span class=\"section-number\">4.1.23.4. </span>unit_scaling.optim.scaled_parameters", "<span class=\"section-number\">4.1.24. </span>unit_scaling.parameter", "<span class=\"section-number\">4.1.24.3. </span>unit_scaling.parameter.OrderedDict", "<span class=\"section-number\">4.1.24.1. </span>unit_scaling.parameter.Parameter", "<span class=\"section-number\">4.1.24.4. </span>unit_scaling.parameter.ParameterData", "<span class=\"section-number\">4.1.24.5. </span>unit_scaling.parameter.Protocol", "<span class=\"section-number\">4.1.24.6. </span>unit_scaling.parameter.Tensor", "<span class=\"section-number\">4.1.24.2. </span>unit_scaling.parameter.has_parameter_data", "<span class=\"section-number\">4.5. </span>unit_scaling.scale", "<span class=\"section-number\">4.5.1. </span>unit_scaling.scale.scale_bwd", "<span class=\"section-number\">4.5.2. </span>unit_scaling.scale.scale_fwd", "<span class=\"section-number\">4.1.2. </span>unit_scaling.transformer_residual_scaling_rule", "<span class=\"section-number\">4.6. </span>unit_scaling.transforms", "<span class=\"section-number\">4.6.9. </span>unit_scaling.transforms.Metrics", "<span class=\"section-number\">4.6.1. </span>unit_scaling.transforms.compile", "<span class=\"section-number\">4.6.2. </span>unit_scaling.transforms.prune_non_float_tensors", "<span class=\"section-number\">4.6.3. </span>unit_scaling.transforms.prune_same_scale_tensors", "<span class=\"section-number\">4.6.4. </span>unit_scaling.transforms.prune_selected_nodes", "<span class=\"section-number\">4.6.5. </span>unit_scaling.transforms.simulate_format", "<span class=\"section-number\">4.6.6. </span>unit_scaling.transforms.simulate_fp8", "<span class=\"section-number\">4.6.7. </span>unit_scaling.transforms.track_scales", "<span class=\"section-number\">4.6.8. </span>unit_scaling.transforms.unit_scale", "<span class=\"section-number\">4.7. </span>unit_scaling.transforms.utils", "<span class=\"section-number\">4.7.1. </span>unit_scaling.transforms.utils.apply_transform", "<span class=\"section-number\">4.7.2. </span>unit_scaling.transforms.utils.patch_to_expand_modules", "<span class=\"section-number\">4.7.3. </span>unit_scaling.transforms.utils.replace_node_with_function", "<span class=\"section-number\">4.7.4. </span>unit_scaling.transforms.utils.torch_nn_modules_to_user_modules", "<span class=\"section-number\">4.8. </span>unit_scaling.utils", "<span class=\"section-number\">4.8.2. </span>unit_scaling.utils.ScalePair", "<span class=\"section-number\">4.8.3. </span>unit_scaling.utils.ScaleTracker", "<span class=\"section-number\">4.8.4. </span>unit_scaling.utils.ScaleTrackingInterpreter", "<span class=\"section-number\">4.8.1. </span>unit_scaling.utils.analyse_module", "<span class=\"section-number\">4.1.3. </span>unit_scaling.visualiser", "Unit Scaling", "<span class=\"section-number\">3. </span>Limitations", "Almost-scaled dot-product attention", "<span class=\"section-number\">1. </span>User guide"], "terms": {"unit": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 26, 29, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 72, 84, 86, 90, 91, 92, 93, 99, 103, 106], "scale": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 83, 84, 86, 87, 88, 90, 91, 92, 93, 99, 103, 104, 106], "i": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 22, 23, 24, 25, 28, 33, 40, 47, 48, 49, 50, 51, 53, 54, 55, 59, 61, 62, 63, 64, 66, 67, 68, 74, 75, 78, 83, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 104, 105, 106], "implement": [0, 7, 10, 13, 14, 16, 18, 19, 20, 25, 36, 61, 66, 67, 68, 78, 86, 93, 95, 103, 104, 105, 107, 108], "us": [0, 1, 3, 4, 6, 8, 9, 10, 11, 12, 14, 20, 22, 23, 25, 26, 28, 30, 42, 47, 49, 50, 55, 57, 58, 59, 61, 64, 66, 67, 68, 77, 78, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 104, 105, 106, 108], "thin": 0, "wrapper": [0, 65, 93, 95], "around": [0, 78, 93, 95, 106], "exist": [0, 74, 78, 93, 108], "torch": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 23, 24, 25, 45, 46, 47, 48, 50, 55, 61, 64, 66, 67, 68, 70, 71, 72, 73, 75, 76, 78, 84, 86, 90, 91, 92, 93, 95, 96, 98, 101, 103, 104, 106, 108], "nn": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 19, 23, 24, 25, 45, 50, 61, 66, 67, 68, 73, 75, 76, 78, 86, 90, 91, 93, 95, 96, 98, 101, 102, 103, 104, 108], "class": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 41, 42, 48, 50, 61, 64, 65, 66, 67, 68, 73, 74, 76, 77, 78, 84, 85, 93, 98, 99, 100, 101, 102, 103, 108], "function": [0, 2, 3, 4, 6, 7, 9, 11, 12, 13, 17, 18, 19, 21, 23, 24, 26, 28, 35, 41, 65, 66, 67, 68, 73, 78, 80, 83, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 108], "document": [0, 8, 18, 108], "also": [0, 3, 4, 15, 17, 58, 62, 66, 67, 75, 76, 78, 92, 93, 101, 105, 108], "inherit": 0, "from": [0, 3, 5, 7, 8, 10, 11, 12, 18, 22, 24, 25, 49, 50, 66, 67, 68, 74, 78, 86, 87, 88, 90, 91, 92, 93, 95, 101, 102, 103, 104, 108], "standard": [0, 10, 18, 25, 41, 78, 86, 91, 93, 95, 100, 101, 102, 103, 104, 105, 108], "pytorch": [0, 21, 61, 78, 86, 93, 108], "doc": [0, 1, 106], "modif": [0, 5, 6, 78, 101], "note": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 16, 19, 47, 48, 50, 55, 61, 66, 67, 68, 78, 86, 92, 93, 95, 101, 107, 108], "some": [0, 3, 4, 47, 48, 53, 54, 55, 61, 66, 67, 68, 78, 93, 105, 108], "mai": [0, 3, 4, 25, 47, 53, 54, 55, 59, 61, 66, 67, 68, 78, 86, 88, 92, 93, 101, 104, 105, 106, 108], "longer": [0, 78], "relev": [0, 10, 24, 25, 72, 104], "ar": [0, 3, 4, 5, 6, 7, 10, 11, 12, 16, 18, 24, 25, 40, 48, 50, 55, 59, 61, 66, 67, 68, 74, 77, 78, 83, 85, 88, 90, 91, 92, 93, 95, 101, 102, 104, 107, 108], "nevertheless": 0, "The": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 23, 24, 28, 39, 40, 42, 46, 47, 48, 50, 51, 53, 54, 55, 59, 61, 62, 64, 66, 67, 68, 75, 78, 83, 86, 87, 88, 90, 91, 92, 93, 95, 101, 102, 105, 108], "built": [0, 103], "mirror": [0, 78], "close": 0, "possibl": [0, 50, 78, 108], "can": [0, 3, 4, 5, 6, 7, 8, 24, 47, 59, 61, 66, 67, 68, 77, 78, 86, 88, 92, 93, 101, 102, 105, 106, 108], "easili": 0, "swap": [0, 78, 108], "out": [0, 3, 7, 11, 12, 46, 47, 53, 54, 55, 57, 65, 78, 101, 105, 108], "equival": [0, 3, 4, 8, 10, 61, 78, 90, 91, 93, 101, 103, 108], "For": [0, 1, 3, 8, 10, 25, 37, 40, 47, 55, 61, 66, 67, 68, 72, 78, 83, 92, 101, 104, 105, 108], "code": [0, 6, 25, 78, 103, 104, 107, 108], "which": [0, 4, 6, 10, 14, 18, 25, 59, 61, 64, 66, 67, 68, 72, 78, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 101, 102, 104, 108], "follow": [0, 1, 4, 25, 39, 55, 61, 66, 67, 68, 74, 78, 86, 92, 96, 101, 104, 105, 108], "import": [0, 24, 68, 86, 87, 88, 92, 93, 108], "f": [0, 39, 47, 48, 50, 61, 66, 67, 68, 74, 78, 108], "appli": [0, 3, 4, 6, 9, 10, 11, 12, 13, 16, 17, 18, 22, 23, 24, 28, 39, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 78, 81, 82, 86, 87, 88, 93, 95, 96, 101, 108], "first": [0, 1, 6, 8, 39, 55, 66, 67, 78, 86, 95, 101, 102, 108], "ad": [0, 3, 6, 10, 16, 61, 66, 67, 68, 78, 92, 106, 108], "unit_sc": [0, 105, 106, 108], "uu": [0, 15, 72, 75, 108], "u": [0, 3, 11, 12, 15, 40, 65, 66, 67, 68, 72, 73, 75, 76, 83, 93, 103, 105, 107, 108], "replac": [0, 78, 93, 97, 108], "letter": 0, "those": [0, 4, 48, 78, 90, 91, 105, 108], "assum": [0, 31, 32, 33, 34, 108], "thei": [0, 6, 24, 25, 66, 67, 68, 77, 78, 93, 101, 104, 105, 108], "support": [0, 1, 3, 4, 7, 8, 11, 12, 15, 25, 46, 47, 48, 49, 50, 53, 54, 55, 61, 66, 67, 68, 75, 76, 78, 79, 86, 93, 95, 101, 104], "click": 0, "below": [0, 10, 18, 48, 108], "full": [0, 22, 47, 66, 67, 68, 78, 92, 101, 108], "user": [1, 25, 61, 66, 67, 68, 78, 90, 91, 92, 93, 95, 98, 101, 104, 105], "who": [1, 105, 106, 108], "wish": [1, 95, 105, 108], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 22, 23, 24, 25, 28, 39, 40, 42, 46, 47, 49, 50, 51, 53, 54, 55, 59, 61, 62, 64, 66, 67, 68, 72, 74, 76, 78, 83, 86, 87, 88, 90, 91, 92, 93, 95, 96, 98, 101, 102, 104, 105, 106, 107, 108], "codebas": [1, 105, 108], "setup": 1, "requir": [1, 3, 4, 61, 78, 92, 93, 101, 108], "time": [1, 3, 10, 46, 55, 66, 67, 68, 78, 108], "python3": [1, 103], "m": [1, 3, 7, 9, 11, 12, 17, 18, 55, 86, 90, 91, 92, 93, 95], "venv": 1, "echo": 1, "export": 1, "pythonpath": 1, "dirnam": 1, "virtual_env": 1, "bin": [1, 78], "activ": [1, 10, 17, 62, 90, 108], "sourc": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104], "pip": [1, 105, 108], "instal": 1, "r": [1, 8, 50, 78, 101], "dev": 1, "txt": 1, "Or": 1, "ipu": [1, 78], "subsequ": [1, 3, 6], "run": [1, 6, 23, 24, 61, 66, 67, 68, 78, 90, 91, 102, 105, 108], "pre": [1, 66, 67, 68, 102, 108], "flight": 1, "check": [1, 72, 77, 78, 79, 101, 108], "help": [1, 105, 106, 108], "see": [1, 3, 4, 8, 9, 11, 12, 17, 18, 19, 20, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 64, 77, 78, 93, 101, 102, 105, 106, 107, 108], "command": 1, "id": [1, 22, 66, 67, 68], "recommend": [1, 25, 29, 78, 104, 105, 108], "python": [1, 5, 78, 103], "intepret": 1, "set": [1, 3, 4, 7, 10, 11, 12, 16, 40, 47, 48, 49, 61, 66, 67, 68, 72, 74, 78, 83, 85, 89, 92, 93, 101, 108], "format": [1, 78, 90, 91, 105, 108], "save": [1, 66, 67, 68, 78, 101], "enabl": [1, 61, 68, 72, 78, 80, 93, 95, 101, 108], "consid": [1, 4, 78, 108], "env": [1, 101], "file": 1, "exampl": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 37, 46, 47, 48, 50, 55, 61, 66, 67, 68, 72, 77, 78, 101, 102, 103, 106, 108], "pwd": 1, "differ": [1, 3, 6, 11, 12, 25, 50, 55, 59, 61, 66, 67, 68, 78, 80, 86, 95, 104, 108], "path": [1, 22, 25, 104], "devcontain": 1, "cd": 1, "make": [1, 3, 24, 47, 61, 78, 93, 95, 98, 108], "html": 1, "view": [1, 24, 74, 78], "_build": 1, "index": [1, 4, 5, 8, 40, 50, 78, 83, 101], "your": [1, 78, 101, 108], "browser": 1, "version": [2, 25, 39, 45, 55, 66, 67, 68, 78, 86, 92, 93, 95, 96, 98, 104, 108], "common": [2, 26, 45, 46, 66, 67, 68, 106, 108], "modul": [2, 3, 5, 6, 7, 8, 10, 11, 12, 16, 19, 23, 24, 25, 28, 35, 50, 55, 61, 78, 84, 86, 87, 88, 90, 91, 92, 93, 95, 96, 98, 102, 103, 104, 108], "in_channel": 3, "int": [3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 25, 38, 40, 42, 43, 44, 46, 47, 48, 50, 52, 60, 64, 66, 67, 68, 75, 77, 78, 83, 85, 101, 102, 104, 108], "out_channel": 3, "kernel_s": 3, "stride": [3, 47, 78], "1": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 37, 40, 46, 47, 48, 50, 51, 55, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 72, 78, 83, 88, 101, 103, 105, 108], "pad": [3, 8, 13, 20, 47, 50, 78], "0": [3, 4, 7, 8, 9, 10, 13, 17, 18, 19, 20, 37, 38, 40, 42, 46, 47, 48, 49, 50, 51, 53, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 72, 77, 78, 83, 101, 103, 108], "dilat": [3, 47], "group": [3, 27, 28, 29, 30, 47, 61, 65, 66, 67, 68, 72, 78], "bia": [3, 10, 11, 12, 15, 47, 52, 53, 54, 61, 75, 103, 108], "bool": [3, 4, 7, 8, 10, 11, 12, 13, 16, 17, 20, 24, 25, 38, 48, 49, 50, 56, 61, 62, 66, 67, 68, 72, 78, 97, 101, 102, 103, 104], "fals": [3, 4, 7, 8, 10, 11, 12, 16, 17, 24, 38, 48, 49, 50, 61, 62, 66, 67, 68, 72, 74, 78, 101, 103], "padding_mod": 3, "str": [3, 4, 9, 11, 12, 17, 18, 22, 24, 25, 28, 39, 42, 46, 47, 48, 51, 53, 54, 55, 56, 62, 64, 66, 67, 68, 71, 72, 78, 89, 102, 103, 104], "zero": [3, 7, 8, 10, 15, 49, 50, 61, 66, 67, 68, 75, 78, 93, 101], "devic": [3, 8, 10, 11, 12, 47, 53, 54, 55, 61, 78, 102], "ani": [3, 6, 7, 8, 9, 10, 11, 12, 17, 18, 24, 25, 33, 47, 53, 54, 61, 65, 66, 67, 68, 72, 78, 89, 92, 93, 95, 96, 97, 101, 102, 103, 104, 105, 106, 108], "none": [3, 4, 5, 8, 9, 10, 11, 12, 15, 17, 18, 20, 24, 28, 38, 39, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 68, 71, 72, 74, 75, 78, 97, 98, 100, 101, 102, 103, 108], "dtype": [3, 4, 8, 10, 11, 12, 48, 53, 54, 55, 61, 64, 78, 101, 102], "constraint": [3, 9, 11, 12, 17, 18, 20, 39, 46, 47, 51, 53, 54, 55, 61, 62, 64, 68, 102, 105, 108], "to_output_scal": [3, 9, 11, 12, 17, 18, 39, 46, 47, 51, 53, 54, 55, 62, 64, 105], "weight_mup_typ": [3, 11, 12], "liter": [3, 11, 12, 15, 75, 78], "weight": [3, 4, 8, 10, 11, 12, 15, 16, 17, 19, 20, 37, 47, 48, 50, 52, 53, 54, 57, 58, 59, 60, 61, 62, 66, 67, 68, 72, 75, 78, 90, 93, 103, 108], "norm": [3, 8, 11, 12, 15, 50, 75, 78], "output": [3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 17, 18, 24, 25, 31, 32, 33, 34, 39, 46, 47, 48, 50, 51, 53, 54, 55, 61, 62, 63, 64, 75, 78, 87, 101, 102, 103, 104, 108], "1d": [3, 4, 47], "convolut": [3, 47], "incom": [3, 11, 12, 53, 54], "data": [3, 10, 11, 12, 15, 22, 47, 53, 54, 64, 75, 78, 85, 102], "layer": [3, 6, 10, 11, 12, 13, 14, 16, 19, 20, 40, 52, 59, 66, 67, 68, 83, 86, 93, 108], "default": [3, 4, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 22, 24, 25, 39, 40, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 66, 67, 68, 72, 74, 78, 83, 88, 93, 95, 96, 97, 98, 101, 103, 104, 108], "we": [3, 25, 66, 67, 68, 78, 88, 91, 93, 95, 101, 102, 104, 105, 106, 108], "suppli": [3, 87, 88, 90, 93, 95, 101, 108], "an": [3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 22, 23, 24, 25, 33, 39, 40, 47, 49, 50, 55, 59, 61, 66, 67, 68, 72, 74, 75, 78, 83, 87, 88, 89, 90, 92, 93, 100, 101, 102, 104, 105, 108], "integ": [3, 10, 46, 78, 101], "string": [3, 47, 78, 103], "plane": [3, 10, 47], "In": [3, 9, 11, 12, 17, 18, 24, 39, 46, 47, 51, 53, 54, 55, 59, 61, 62, 64, 74, 78, 93, 96, 101, 108], "simplest": 3, "case": [3, 4, 9, 11, 12, 17, 18, 25, 39, 46, 47, 48, 51, 53, 54, 55, 62, 64, 66, 67, 68, 74, 78, 88, 93, 96, 98, 104, 108], "valu": [3, 4, 6, 8, 10, 11, 12, 16, 18, 24, 25, 37, 42, 47, 48, 57, 58, 59, 61, 66, 67, 68, 72, 74, 78, 87, 90, 91, 93, 101, 102, 104, 108], "input": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 31, 32, 33, 34, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 78, 81, 82, 88, 91, 92, 93, 101, 102, 103, 104, 108], "size": [3, 4, 8, 10, 11, 12, 13, 14, 19, 20, 22, 25, 48, 50, 61, 78, 101, 104], "n": [3, 4, 8, 10, 18, 48, 55, 61, 78, 102], "c_": 3, "text": [3, 4, 8, 9, 10, 11, 12, 17, 18, 22, 46, 47, 48, 51, 62, 63, 64, 66, 67, 68, 78], "l": [3, 4, 61], "l_": 3, "precis": [3, 11, 12, 55, 61, 105, 108], "describ": [3, 4, 7, 10, 16, 40, 48, 78, 83, 107], "n_i": 3, "_j": 3, "sum_": [3, 4], "k": [3, 4, 11, 12, 48, 55, 74, 78], "star": 3, "where": [3, 4, 8, 9, 10, 11, 12, 17, 18, 48, 50, 51, 53, 54, 55, 61, 62, 63, 66, 67, 68, 78, 90, 92, 93, 102, 108], "valid": [3, 47, 55, 78, 93, 108], "cross": [3, 4, 48, 78, 108], "correl": 3, "_": [3, 7, 61, 66, 67, 68, 101, 105], "oper": [3, 7, 10, 16, 24, 25, 26, 47, 49, 53, 54, 55, 61, 64, 78, 80, 88, 93, 101, 103, 104, 106, 108], "batch": [3, 4, 8, 10, 22, 25, 48, 50, 55, 66, 67, 68, 78, 104], "c": [3, 4, 10, 46, 48, 61, 77, 78, 101], "denot": [3, 24, 78, 108], "number": [3, 4, 9, 11, 12, 13, 17, 18, 19, 20, 22, 33, 41, 42, 46, 47, 48, 50, 52, 53, 54, 60, 78, 108], "channel": [3, 7, 10, 78], "length": [3, 22, 25, 47, 78, 104], "signal": [3, 47], "sequenc": [3, 6, 13, 20, 22, 25, 52, 78, 104], "tensorfloat32": [3, 11, 12, 47, 53, 54, 55], "On": [3, 6, 11, 12, 55, 66, 67, 68], "certain": [3, 11, 12, 52, 55, 60, 66, 67, 68, 88, 102], "rocm": [3, 11, 12, 55], "when": [3, 4, 6, 9, 10, 11, 12, 16, 18, 47, 48, 51, 55, 61, 66, 67, 68, 78, 90, 91, 92, 96, 98, 102, 108], "float16": [3, 11, 12, 55, 61, 66, 67, 68, 78], "backward": [3, 4, 11, 12, 23, 24, 25, 42, 48, 55, 59, 66, 67, 68, 78, 80, 81, 85, 87, 88, 90, 91, 92, 93, 100, 101, 102, 103, 104, 108], "control": [3, 19, 61, 65, 108], "singl": [3, 4, 6, 10, 47, 58, 66, 67, 68, 78, 86], "one": [3, 9, 11, 12, 17, 18, 28, 39, 46, 47, 51, 53, 54, 55, 59, 61, 62, 64, 66, 67, 68, 78, 86, 101, 108], "element": [3, 4, 7, 10, 16, 18, 39, 47, 48, 49, 51, 56, 61, 64, 74, 78], "tupl": [3, 16, 22, 28, 38, 43, 44, 47, 53, 59, 60, 66, 67, 68, 78, 97, 101, 102, 103, 108], "amount": [3, 4, 48], "It": [3, 4, 6, 25, 61, 64, 66, 67, 68, 78, 101, 104, 108], "either": [3, 4, 48, 74, 78, 101], "same": [3, 4, 6, 7, 9, 10, 11, 12, 17, 18, 40, 47, 48, 55, 61, 63, 78, 83, 88, 90, 91, 101, 108], "give": [3, 20, 78, 93, 105, 108], "implicit": [3, 47], "both": [3, 10, 40, 47, 55, 61, 78, 83, 101, 103, 108], "side": [3, 47, 78], "space": [3, 37, 47], "between": [3, 4, 6, 24, 37, 40, 47, 48, 59, 66, 67, 68, 78, 83, 108], "kernel": [3, 47, 61, 78, 108], "point": [3, 4, 24, 25, 42, 50, 61, 78, 87, 88, 92, 104, 108], "known": [3, 17, 62, 106], "\u00e0": 3, "trou": 3, "algorithm": [3, 9, 47, 61, 66, 67], "harder": 3, "link": 3, "ha": [3, 4, 7, 10, 16, 28, 47, 48, 55, 61, 66, 67, 68, 74, 78, 92, 93, 101, 107, 108], "nice": [3, 78], "visual": 3, "what": [3, 6, 61, 66, 67, 68, 87, 101, 105], "doe": [3, 4, 5, 6, 8, 48, 55, 61, 66, 67, 68, 72, 74, 78, 86, 95, 108], "connect": [3, 6, 20, 57, 58, 59, 93, 108], "must": [3, 9, 11, 12, 17, 18, 28, 37, 39, 46, 47, 51, 53, 54, 55, 61, 62, 64, 78, 86, 87, 88, 101, 108], "divis": [3, 47, 78, 108], "At": 3, "all": [3, 5, 8, 11, 12, 23, 24, 25, 40, 50, 61, 64, 66, 67, 68, 74, 78, 83, 87, 88, 89, 93, 101, 104, 108], "convolv": [3, 47], "2": [3, 7, 8, 9, 10, 16, 17, 18, 38, 46, 50, 51, 53, 54, 55, 61, 66, 67, 68, 78, 88, 101, 103, 108], "becom": [3, 4, 6, 48, 78], "have": [3, 4, 8, 23, 24, 50, 53, 54, 55, 59, 66, 67, 68, 78, 87, 88, 90, 91, 92, 93, 101, 105, 106, 108], "two": [3, 4, 31, 48, 55, 59, 61, 66, 67, 68, 78, 86, 101, 108], "conv": 3, "each": [3, 4, 6, 7, 8, 10, 11, 12, 24, 25, 47, 48, 50, 53, 61, 66, 67, 68, 78, 90, 91, 92, 101, 102, 103, 104, 108], "half": [3, 61, 78], "produc": [3, 78, 108], "concaten": 3, "its": [3, 39, 55, 66, 67, 78, 82, 85, 86, 97, 101, 105, 108], "own": [3, 93, 95], "filter": [3, 47, 78], "frac": [3, 4, 7, 10, 11, 12, 16, 18, 47, 61, 64, 78], "_channel": [3, 47], "posit": [3, 4, 19, 78, 102], "depthwis": 3, "other": [3, 6, 21, 46, 47, 55, 61, 66, 67, 68, 78, 92, 106, 108], "word": [3, 8, 50], "multipli": [3, 4, 9, 13, 17, 18, 48, 51, 55, 61, 62, 63, 64, 78, 108], "perform": [3, 4, 6, 47, 61, 64, 66, 67, 68, 72, 78, 101, 108], "argument": [3, 4, 9, 51, 55, 61, 66, 67, 68, 78, 101, 102, 108], "circumst": [3, 47, 61], "given": [3, 4, 5, 6, 8, 19, 22, 40, 42, 44, 47, 48, 50, 61, 65, 74, 77, 78, 83, 87, 88, 89, 90, 91, 97, 101, 103, 108], "tensor": [3, 4, 8, 11, 12, 15, 16, 18, 22, 24, 25, 38, 39, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 72, 75, 81, 82, 85, 87, 88, 92, 95, 100, 101, 102, 103, 104, 108], "cuda": [3, 47, 61, 66, 67, 68, 78], "cudnn": [3, 47, 61], "select": [3, 31, 32, 33, 34, 47, 61, 78], "nondeterminist": [3, 47, 61, 78], "increas": [3, 14, 47, 61, 101], "If": [3, 4, 7, 8, 10, 11, 12, 40, 47, 48, 49, 50, 53, 54, 55, 61, 64, 66, 67, 68, 74, 78, 83, 90, 91, 101, 102], "undesir": [3, 47, 61], "you": [3, 4, 47, 53, 54, 55, 61, 66, 67, 68, 78, 101, 102, 106, 108], "try": [3, 47, 61, 66, 67, 68, 108], "determinist": [3, 8, 47, 50, 61, 78], "potenti": [3, 47, 61, 78], "cost": [3, 47, 61, 78], "backend": [3, 47, 61, 86, 95, 96], "true": [3, 4, 7, 8, 10, 11, 12, 16, 24, 25, 47, 48, 49, 50, 61, 66, 67, 68, 72, 74, 78, 90, 91, 97, 101, 102, 103, 104], "random": [3, 22, 47, 61, 78, 101], "more": [3, 8, 47, 50, 61, 62, 64, 66, 67, 68, 78, 92, 101, 106, 108], "inform": [3, 23, 47, 61, 78, 85, 88, 92], "so": [3, 18, 47, 61, 64, 66, 67, 68, 78, 86, 92, 93, 95, 101, 102, 108], "shape": [3, 4, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 46, 47, 48, 50, 51, 53, 54, 61, 62, 63, 64, 78, 101], "howev": [3, 47, 66, 67, 68, 78, 93, 95, 108], "mode": [3, 10, 47, 61, 78, 101], "doesn": [3, 47, 86, 93, 95, 96, 98, 101], "t": [3, 8, 24, 25, 44, 47, 50, 53, 54, 66, 67, 68, 77, 78, 86, 87, 88, 93, 95, 96, 98, 101, 104, 106, 108], "than": [3, 8, 47, 50, 59, 61, 66, 67, 68, 78, 86, 92, 93, 102], "complex": [3, 46, 47, 78, 102], "type": [3, 8, 11, 12, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 46, 47, 50, 57, 59, 61, 63, 64, 66, 67, 68, 72, 77, 78, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 102, 103, 104], "e": [3, 4, 8, 10, 47, 50, 55, 61, 74, 78, 86, 87, 88, 92, 101], "complex32": [3, 47, 78], "complex64": [3, 47, 78], "complex128": [3, 47, 78], "paramet": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 72, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 102, 103, 104, 105], "imag": [3, 4, 10, 78], "block": [3, 78, 108], "add": [3, 5, 57, 66, 67, 68, 78, 93, 105, 106, 108], "learnabl": [3, 8, 10, 11, 12, 16], "reflect": [3, 78, 103, 107, 108], "replic": 3, "circular": 3, "option": [3, 4, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 22, 24, 25, 28, 39, 40, 46, 47, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 72, 78, 83, 85, 88, 93, 95, 97, 101, 102, 103, 104], "name": [3, 9, 11, 12, 17, 18, 22, 25, 28, 39, 46, 47, 51, 53, 54, 55, 62, 64, 78, 102, 104], "gradient": [3, 4, 8, 9, 11, 12, 17, 18, 20, 31, 32, 33, 34, 39, 46, 47, 48, 50, 51, 53, 54, 55, 59, 62, 64, 66, 67, 68, 78, 85, 90, 93, 101, 108], "gmean": [3, 9, 11, 12, 17, 18, 39, 46, 47, 51, 53, 54, 55, 62, 64, 105, 108], "hmean": [3, 9, 11, 12, 17, 18, 39, 46, 47, 51, 53, 54, 55, 62, 64, 105], "amean": [3, 9, 11, 12, 17, 18, 39, 46, 47, 51, 53, 54, 55, 62, 64, 105], "to_grad_input_scal": [3, 9, 11, 12, 17, 18, 39, 47, 51, 53, 54, 62, 64, 105], "detail": [3, 8, 9, 11, 12, 17, 18, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 62, 64, 66, 67, 77, 78, 93, 101, 102, 106, 108], "_size": 3, "sampl": [3, 4, 7, 8, 11, 12, 22, 48, 49, 50, 61, 78], "mathcal": [3, 8, 11, 12], "sqrt": [3, 9, 10, 11, 12, 16, 38, 51, 61, 66, 67, 78], "left": [3, 32, 34, 55, 61, 78, 108], "lfloor": 3, "right": [3, 32, 34, 55], "rfloor": 3, "16": [3, 7, 47, 78, 88, 108], "33": [3, 47], "3": [3, 4, 8, 9, 10, 18, 46, 48, 50, 51, 61, 66, 67, 68, 78, 108], "randn": [3, 4, 7, 9, 10, 11, 12, 17, 18, 46, 47, 48, 78, 103, 108], "20": [3, 6, 7, 10, 11, 12, 46, 47, 78], "50": [3, 108], "mult": [4, 9, 13, 17, 18, 48, 51, 61, 62, 63, 64], "float": [4, 7, 8, 9, 10, 13, 16, 17, 18, 19, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 42, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 78, 81, 82, 83, 85, 87, 88, 92, 100, 102, 104, 108], "size_averag": [4, 48, 56], "ignore_index": [4, 48], "100": [4, 37, 48, 78], "reduc": [4, 48, 56, 78, 90, 91], "reduct": [4, 48, 56, 78], "mean": [4, 7, 9, 10, 11, 12, 16, 17, 18, 24, 27, 29, 30, 38, 48, 53, 54, 56, 78, 86, 108], "label_smooth": [4, 48], "comput": [4, 7, 8, 10, 18, 27, 29, 30, 38, 40, 48, 50, 56, 61, 64, 66, 67, 78, 83, 101, 108], "entropi": [4, 48, 108], "loss": [4, 24, 25, 48, 66, 67, 68, 87, 88, 92, 104, 108], "logit": [4, 48, 78], "target": [4, 48, 56, 68, 78, 89, 97, 102, 108], "train": [4, 7, 8, 10, 49, 50, 59, 61, 66, 67, 68, 105, 106, 108], "classif": 4, "problem": [4, 105, 108], "provid": [4, 6, 25, 27, 29, 30, 31, 32, 33, 34, 61, 65, 66, 67, 68, 74, 78, 88, 92, 93, 104, 106, 108], "should": [4, 18, 39, 47, 48, 57, 59, 61, 66, 67, 68, 76, 78, 90, 91, 92, 93, 95, 96, 101, 102, 103, 108], "assign": [4, 78], "particularli": [4, 108], "unbalanc": 4, "expect": [4, 10, 16, 50, 78, 90, 91, 108], "contain": [4, 5, 6, 8, 23, 48, 50, 66, 67, 68, 78, 85, 87, 90, 91, 92, 97, 100, 101, 108], "unnorm": [4, 48], "do": [4, 7, 8, 49, 50, 66, 67, 68, 78, 101, 102, 107, 108], "need": [4, 47, 59, 78, 86, 92, 101, 103, 108], "sum": [4, 16, 18, 48, 64, 78], "gener": [4, 22, 23, 24, 25, 42, 66, 67, 68, 77, 78, 87, 88, 93, 103, 104, 108], "unbatch": 4, "minibatch": [4, 47, 48], "d_1": [4, 48], "d_2": [4, 48], "d_k": [4, 48], "geq": [4, 48], "dimension": [4, 8, 10, 18, 48, 55, 78], "last": [4, 6, 10, 11, 12, 52, 60, 74, 78, 86], "being": [4, 8, 48, 59, 66, 67, 68, 78, 86, 95, 101, 102], "higher": [4, 61, 78], "dimens": [4, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 47, 52, 53, 54, 55, 60, 64, 78, 101], "per": [4, 10, 16, 48, 66, 67, 68, 72, 78, 101], "pixel": 4, "2d": [4, 78], "criterion": 4, "indic": [4, 8, 24, 25, 48, 50, 61, 66, 67, 68, 78, 101, 104], "rang": [4, 18, 25, 64, 78, 86, 90, 91, 93, 102, 104, 108], "specifi": [4, 8, 48, 50, 61, 64, 66, 67, 68, 74, 78, 88, 92, 101, 108], "accept": [4, 6, 78, 101], "necessarili": [4, 78], "unreduc": 4, "ell": 4, "x": [4, 9, 10, 16, 17, 24, 38, 42, 51, 62, 63, 77, 78, 93, 101, 103, 108], "y": [4, 10, 16, 53, 54, 78, 101], "l_1": 4, "dot": [4, 55, 61, 78], "l_n": 4, "top": [4, 93], "quad": 4, "w_": 4, "y_n": 4, "log": [4, 78, 108], "exp": [4, 18, 64, 78], "x_": [4, 18, 64], "cdot": 4, "mathbb": 4, "ignor": [4, 48, 77, 78, 108], "_index": 4, "w": [4, 8, 10, 50, 78, 101], "span": [4, 78], "well": [4, 66, 67, 68, 78, 106, 108], "begin": [4, 48, 66, 67, 68, 74, 78, 108], "end": [4, 5, 6, 19, 48, 66, 67, 68, 74, 78, 108], "logsoftmax": 4, "nllloss": 4, "probabl": [4, 7, 13, 19, 20, 48, 49, 61, 78], "label": [4, 22, 25, 104], "beyond": [4, 66, 67, 108], "item": [4, 74, 78], "blend": 4, "smooth": [4, 48], "etc": 4, "w_c": 4, "y_": 4, "better": [4, 61, 93], "allow": [4, 6, 59, 78, 86, 108], "optim": [4, 61, 86, 95, 96, 105], "onli": [4, 10, 25, 31, 32, 33, 34, 42, 48, 55, 61, 69, 77, 78, 81, 82, 86, 87, 90, 91, 92, 95, 101, 102, 104, 106, 108], "too": [4, 61, 78, 90, 91], "restrict": [4, 55], "manual": [4, 6, 48, 66, 67, 68, 78, 86, 93, 108], "rescal": [4, 18, 48], "deprec": [4, 48, 78], "By": [4, 48, 78, 93, 96, 98, 108], "averag": [4, 40, 48, 66, 67, 83], "over": [4, 6, 10, 16, 47, 48, 57, 58, 59, 61, 66, 67, 68, 78, 93, 101, 108], "multipl": [4, 48, 55, 78, 81, 82, 88, 108], "field": [4, 48, 76, 78], "instead": [4, 48, 66, 67, 68, 78], "contribut": [4, 8, 40, 48, 50, 57, 58, 59, 83], "non": [4, 8, 13, 20, 41, 42, 48, 50, 55, 59, 61, 72, 78, 88, 101, 108], "applic": [4, 48, 78, 101], "observ": [4, 48, 78], "depend": [4, 24, 48, 55, 61, 72, 78, 93, 102, 108], "return": [4, 6, 15, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 40, 44, 48, 55, 57, 59, 61, 63, 64, 66, 67, 68, 72, 74, 75, 77, 78, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 101, 102, 103, 104, 108], "taken": [4, 108], "process": [4, 8, 48, 66, 67, 68, 87, 93, 102], "meantim": [4, 48], "arg": [4, 6, 25, 39, 48, 66, 67, 68, 76, 78, 97, 101, 102, 104], "overrid": [4, 48, 101], "A": [4, 5, 6, 7, 8, 13, 14, 18, 19, 20, 48, 50, 55, 61, 64, 66, 67, 68, 78, 85, 86, 105, 108], "mixtur": [4, 48], "origin": [4, 17, 48, 62, 78, 82, 102], "ground": [4, 48], "truth": [4, 48], "uniform": [4, 48, 78], "distribut": [4, 7, 9, 48, 49, 51, 78, 106, 108], "rethink": [4, 48], "incept": [4, 48], "architectur": [4, 48], "vision": [4, 48], "chang": [4, 5, 6, 8, 9, 13, 17, 18, 24, 48, 51, 61, 62, 63, 64, 66, 67, 68, 78, 86, 88, 108], "nonlinear": [4, 9, 13, 17, 18, 48, 51, 61, 62, 63, 64], "typic": [4, 9, 13, 17, 18, 48, 51, 61, 62, 63, 64, 78, 96, 98, 108], "high": [4, 9, 13, 17, 18, 48, 51, 61, 62, 63, 64, 78], "correspond": [4, 8, 9, 13, 17, 18, 25, 28, 44, 48, 50, 51, 61, 62, 63, 64, 66, 67, 68, 74, 78, 93, 101, 104], "sharper": [4, 9, 13, 17, 18, 48, 51, 61, 62, 63, 64], "low": [4, 9, 13, 17, 18, 48, 51, 61, 62, 63, 64, 78, 105, 108], "temperatur": [4, 9, 13, 17, 18, 48, 51, 61, 62, 63, 64], "while": [4, 9, 13, 17, 18, 48, 51, 61, 62, 63, 64, 78, 101], "flatter": [4, 9, 13, 17, 18, 48, 51, 61, 62, 63, 64], "otherwis": [4, 66, 67, 68, 74, 78, 101], "scalar": [4, 10, 55, 78, 81, 82, 100, 108], "align": [4, 48, 61, 66, 67, 68, 78], "5": [4, 6, 7, 8, 9, 10, 16, 37, 46, 47, 48, 49, 50, 51, 53, 61, 66, 67, 68, 78, 108], "requires_grad": [4, 8, 48, 78, 101], "empti": [4, 78], "long": [4, 78], "random_": [4, 78], "softmax": [4, 13, 19, 20, 48, 61, 78, 105, 108], "dim": [4, 18, 38, 48, 61, 64, 78], "iter": [5, 66, 67, 68, 72, 74, 78, 89, 95], "modulelist": [5, 6], "automat": [5, 6, 24, 25, 61, 78, 92, 93, 96, 101, 103, 104, 108], "configur": [5, 6], "depth": [5, 6, 40, 69, 83, 108], "sake": [5, 6, 84, 92], "track": [5, 6, 24, 25, 78, 87, 92, 104], "caus": [5, 6, 78, 108], "after": [5, 6, 28, 55, 66, 67, 68, 78, 93, 101], "initi": [5, 6, 8, 10, 11, 12, 16, 40, 50, 66, 67, 68, 78, 83, 108], "construct": [5, 6, 8, 15, 50, 75, 78], "like": [5, 6, 20, 66, 67, 68, 74, 78, 101, 108], "regular": [5, 7, 67, 72, 93], "list": [5, 6, 8, 10, 50, 66, 67, 68, 78, 95, 102, 106], "properli": 5, "regist": [5, 6, 66, 67, 68, 78], "visibl": 5, "method": [5, 6, 25, 66, 72, 74, 78, 86, 87, 88, 90, 91, 92, 95, 101, 102, 103, 104, 105, 108], "append": [5, 6, 19, 55, 78, 108], "extend": [5, 73, 101], "self": [5, 13, 17, 20, 61, 62, 66, 67, 68, 77, 78, 102, 103, 108], "insert": [5, 74, 90, 91], "befor": [5, 64, 66, 67, 68, 78, 90, 91, 101, 102, 108], "sequenti": [6, 19], "order": [6, 59, 61, 66, 67, 68, 74, 78, 102, 108], "pass": [6, 8, 23, 24, 25, 42, 59, 61, 66, 67, 68, 72, 77, 78, 80, 81, 82, 85, 90, 91, 92, 93, 96, 100, 101, 102, 103, 104, 108], "constructor": 6, "altern": [6, 40, 65, 83, 108], "ordereddict": 6, "forward": [6, 7, 23, 24, 25, 42, 61, 78, 80, 81, 82, 85, 86, 90, 91, 92, 93, 95, 96, 100, 101, 102, 103, 104, 108], "chain": [6, 78, 92], "final": [6, 12, 54, 55, 92, 93], "call": [6, 7, 23, 24, 25, 61, 66, 67, 68, 78, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104], "treat": [6, 10, 18, 78], "whole": 6, "transform": [6, 10, 11, 12, 19, 20, 23, 24, 25, 39, 40, 53, 54, 65, 66, 67, 68, 78, 83, 104, 105, 106, 108], "store": [6, 8, 78, 102], "submodul": 6, "": [6, 14, 31, 32, 33, 34, 53, 54, 55, 61, 66, 67, 68, 74, 78, 92, 101, 102, 103, 108], "exactli": [6, 108], "sound": 6, "hand": 6, "cascad": 6, "wai": [6, 78, 86, 93, 101, 108], "creat": [6, 8, 72, 74, 78], "small": [6, 108], "model": [6, 21, 24, 25, 59, 66, 67, 68, 72, 87, 88, 90, 91, 92, 93, 99, 104, 105], "conv2d": 6, "relu": [6, 103], "64": [6, 61, 108], "second": [6, 8, 55, 66, 67, 101], "abov": [6, 61, 78, 108], "conv1": 6, "relu1": 6, "conv2": 6, "relu2": 6, "p": [7, 8, 15, 49, 50, 55, 61, 75, 78], "inplac": [7, 17, 49, 62, 66, 67, 68, 101, 103], "chosen": [7, 31, 32, 33, 34, 61], "independ": [7, 72, 78, 93], "bernoulli": [7, 49, 78], "everi": [7, 18, 40, 78, 83, 101, 102], "proven": 7, "effect": [7, 78, 90, 91, 108], "techniqu": [7, 108], "prevent": [7, 64, 78, 101], "co": [7, 78], "adapt": [7, 108], "neuron": 7, "paper": [7, 10, 16, 40, 66, 67, 83, 93, 105, 108], "improv": [7, 61, 66, 67, 68], "neural": [7, 17, 62], "network": [7, 12, 17, 54, 62, 66, 67, 68], "featur": [7, 53, 54, 55, 61, 105, 106, 108], "detector": 7, "furthermor": [7, 78], "factor": [7, 14, 31, 32, 33, 34, 59, 61, 68, 69, 70, 71, 72, 80, 81, 82, 93, 108], "dure": [7, 8, 24, 25, 50, 61, 78, 101, 104, 108], "evalu": [7, 10, 61, 102, 108], "simpli": [7, 108], "ident": [7, 108], "place": [7, 49, 50, 78, 101, 108], "num_embed": 8, "embedding_dim": [8, 10, 50], "padding_idx": [8, 50], "max_norm": [8, 50], "norm_typ": [8, 50], "scale_grad_by_freq": [8, 50], "spars": [8, 18, 50, 53, 54, 55, 78], "_weight": 8, "_freez": 8, "lookup": [8, 50], "tabl": [8, 50], "look": [8, 50, 55, 66, 67, 68, 78, 102, 108], "up": [8, 50, 78, 101, 102, 108], "fix": [8, 50, 78, 108], "dictionari": [8, 66, 67, 68, 74, 78, 93], "often": [8, 50, 78, 108], "retriev": [8, 28, 50, 78, 101, 102], "them": [8, 18, 64, 78, 93, 101, 102, 106], "vector": [8, 50, 55, 78], "entri": [8, 50, 66, 67, 68, 78], "therefor": [8, 50, 78], "updat": [8, 50, 72, 74, 78, 105, 108], "remain": [8, 50], "newli": 8, "anoth": [8, 78], "larger": [8, 50, 57, 58, 59, 78, 93, 108], "renorm": [8, 50, 78], "invers": [8, 50, 78], "frequenc": [8, 50], "mini": [8, 10, 50], "matrix": [8, 50, 55, 61, 78], "regard": [8, 50, 66, 67, 108], "inttensor": [8, 78], "longtensor": [8, 50, 78], "arbitrari": [8, 23, 24, 25, 50, 61, 78, 93, 100, 104, 108], "extract": [8, 50, 102], "h": [8, 10, 61, 78], "_dim": 8, "10": [8, 10, 15, 37, 46, 50, 75, 78, 103, 108], "4": [8, 14, 46, 50, 78, 101, 103, 105, 108], "9": [8, 50, 66, 67, 68, 78], "xdoctest": [8, 50, 68, 101], "ignore_w": [8, 50], "0251": 8, "6902": 8, "7172": 8, "6431": 8, "0748": 8, "6969": 8, "4970": 8, "3448": 8, "9685": 8, "3677": 8, "7265": 8, "1685": 8, "4362": 8, "4004": 8, "9400": 8, "9124": 8, "3616": 8, "1151": 8, "0000": [8, 50, 78], "1535": 8, "0309": 8, "9315": 8, "1655": 8, "9897": 8, "0635": 8, "7895": 8, "7089": 8, "0364": 8, "6778": 8, "5803": 8, "2678": 8, "no_grad": [8, 66, 67, 68, 78], "ones": [8, 10, 16, 50, 61, 78], "classmethod": 8, "from_pretrain": 8, "freez": 8, "instanc": [8, 10, 66, 67, 68, 78, 92], "floattensor": [8, 78], "get": [8, 72, 74, 78, 106, 108], "learn": [8, 10, 11, 12, 17, 62, 66, 67, 68, 72, 108], "pretrain": 8, "6": [8, 46, 78, 103], "1000": [8, 37], "3000": 8, "approxim": [9, 17, 51, 62, 108], "gaussian": [9, 17, 51, 62], "error": [9, 17, 24, 25, 51, 56, 61, 62, 78, 101, 102, 104], "linear": [9, 12, 17, 51, 54, 62, 63, 78, 90, 91, 103, 105, 108], "phi": [9, 51], "cumul": [9, 51], "tanh": [9, 51, 78], "estim": [9, 10, 51], "pi": [9, 51, 78], "044715": [9, 51], "normalized_shap": [10, 16, 52, 60], "ep": [10, 16, 38, 52, 60, 66, 67], "1e": [10, 16, 52, 60, 66, 67, 68, 78, 108], "05": [10, 16, 52, 60, 78, 88, 108], "elementwise_affin": [10, 16], "normal": [10, 16, 42, 52, 60, 78, 108], "mathrm": [10, 38, 66, 67], "var": [10, 78], "epsilon": [10, 16, 38, 66, 67], "gamma": [10, 16, 66, 67, 68], "beta": [10, 53, 54, 55, 61, 66, 67, 78, 105, 108], "deviat": [10, 78, 100, 101, 102, 103, 108], "calcul": [10, 40, 69, 70, 71, 83], "d": [10, 53, 54, 74, 78, 101, 103, 108], "affin": [10, 78], "via": [10, 78, 87, 88, 92, 93, 102, 108], "bias": [10, 93], "unbias": 10, "unlik": [10, 24, 25, 78, 104, 108], "entir": [10, 78, 108], "statist": 10, "_shape": 10, "ldot": [10, 66, 67, 68, 78], "singleton": [10, 78], "specif": [10, 61, 66, 67, 68, 78, 90, 91, 102], "denomin": [10, 16, 66, 67], "numer": [10, 16, 24, 25, 50, 66, 67, 84, 90, 91, 104, 108], "stabil": [10, 16, 66, 67], "boolean": [10, 16, 61, 78, 101], "addit": [10, 11, 12, 18, 46, 53, 54, 66, 67, 68, 78, 92, 108], "nlp": 10, "sentence_length": 10, "embed": [10, 19, 40, 83, 105], "layer_norm": [10, 105], "three": [10, 32, 34, 61], "spatial": 10, "shown": [10, 24, 108], "in_featur": [11, 12], "out_featur": [11, 12], "_featur": [11, 12, 53, 54], "h_": [11, 12], "includ": [11, 12, 53, 54, 78, 106], "30": [11, 12, 47, 78], "128": [11, 12, 61, 78], "print": [11, 12, 103, 108], "appropri": [12, 72, 78], "hidden_s": [13, 14, 19, 20, 103], "head": [13, 19, 20], "is_caus": [13, 20, 61], "dropout_p": [13, 19, 20, 61], "multi": [13, 20], "attent": [13, 19, 20, 22, 40, 61, 83, 108], "hidden": [13, 14, 19, 20], "causal": [13, 20, 61], "mask": [13, 19, 20, 22, 61, 78], "post": [13, 19, 20, 66, 67, 68, 78, 107], "dropout": [13, 19, 20, 61, 105], "expansion_factor": 14, "swiglu": 14, "intermedi": [14, 61, 66, 67, 68, 92, 102], "rel": [14, 20, 40, 57, 59, 78, 83, 88], "mup_typ": [15, 72, 75], "mup_scaling_depth": [15, 72, 75], "\u03bcp": [15, 40, 73, 75, 76, 83, 105, 107], "object": [15, 66, 67, 68, 74, 75, 76, 78, 85, 92, 101], "annot": [15, 23, 75, 103], "parameterdata": [15, 69, 70, 71, 72, 75, 79], "protocol": [15, 75, 76, 79], "assert": [15, 61, 75], "rm": [16, 60, 105], "normalis": [16, 59], "trail": 16, "root": 16, "squar": [16, 56, 61, 66, 67, 78], "sigmoid": [17, 62, 63, 78], "swish": [17, 62], "sigma": [17, 62, 63, 78], "logist": [17, 62, 63], "gelu": [17, 62, 93, 105, 108], "wa": [17, 62, 78, 102], "coin": [17, 62], "reinforc": [17, 62], "gate": [17, 62, 63], "experi": [17, 62, 108], "later": [17, 62, 78], "lie": [18, 64], "li": 18, "adjust": 18, "accordingli": 18, "defin": [18, 28, 61, 64, 65, 66, 67, 68, 77, 78, 93, 101, 108], "x_i": [18, 64], "sum_j": [18, 64], "x_j": [18, 64], "unspecifi": [18, 66, 67, 68, 78], "inf": [18, 61, 78], "along": [18, 22, 64, 66, 67, 68, 78, 108], "slice": [18, 64, 78, 88, 102], "vocab_s": 19, "residual_sc": 19, "callabl": [19, 39, 40, 58, 66, 67, 68, 71, 72, 78, 83, 89, 93, 95, 96, 97, 102, 103, 108], "transformer_residual_scaling_rul": [19, 105], "local": [19, 103], "_tau": 19, "decod": 19, "current": [19, 25, 61, 66, 67, 68, 78, 86, 93, 95, 102, 104, 105, 106, 107, 108], "just": [19, 22, 66, 67, 68, 78, 101, 102, 108], "demonstr": [19, 105], "lack": [19, 74], "kei": [19, 61, 74, 78, 85, 92, 93, 105], "usag": [19, 35, 78], "infer": [19, 78], "token": [19, 22, 25, 104], "vocabulari": 19, "residu": [19, 20, 40, 57, 58, 59, 83, 93, 108], "scheme": [19, 40, 78, 83], "trunk": 19, "core": [19, 105], "mhsa_tau": 20, "mlp_tau": 20, "prenorm": 20, "http": [20, 78, 105, 108], "arxiv": [20, 105], "org": [20, 105], "ab": [20, 78, 105], "2002": 20, "04745": 20, "warn": [20, 25, 61, 104], "here": [20, 61, 78, 93, 95, 106, 108], "incorrect": [20, 78, 101], "branch": [20, 57, 58, 59, 108], "skip": [20, 57, 58, 59, 66, 67, 68, 101, 108], "mlp": [20, 40, 83, 103, 105, 108], "tool": [21, 108], "analys": [21, 103, 108], "metric": [21, 23, 24, 92, 105], "within": [21, 78, 86, 95, 102, 108], "pretrainedtokenizerbas": [22, 25, 104], "batch_siz": [22, 25, 101, 104, 108], "seq_len": [22, 25, 104], "dataset_path": [22, 25, 104], "wikitext": [22, 25, 104], "dataset_nam": [22, 25, 104], "103": [22, 25, 104], "v1": [22, 25, 104], "shuffle_buffer_s": 22, "10000": 22, "seed": 22, "1472": 22, "dataset": [22, 25, 104], "shift": [22, 78], "huggingfac": [22, 25, 104], "visualis": [22, 24, 92, 105], "chunk": [22, 78], "determin": [22, 55, 108], "10_000": 22, "shuffl": 22, "input_idx": 22, "attn_mask": [22, 25, 61, 104], "g": [23, 24, 40, 63, 66, 67, 78, 83, 87, 88, 92, 101], "graph": [23, 24, 25, 66, 67, 78, 87, 88, 89, 92, 93, 95, 96, 97, 98, 101, 102, 104], "datafram": 23, "convert": [23, 43, 78, 98, 108], "fx": [23, 24, 86, 87, 88, 89, 92, 95, 96, 98, 102, 103, 108], "panda": 23, "indend": 23, "been": [23, 24, 28, 78, 87, 88, 93, 101, 108], "track_scal": [23, 24, 25, 87, 88, 104, 105], "possibli": [23, 24], "scales_graph": [23, 24, 25, 87, 88, 92, 104], "result": [23, 24, 57, 59, 78, 92, 102], "intern": [23, 47, 90, 91, 92], "plot": [23, 25, 92, 104, 105], "pd": 23, "titl": 24, "mean_ab": [24, 85], "prune_same_scal": 24, "show_arrow": 24, "show_error_bar": 24, "show_zero_tensor": 24, "xmin": 24, "xmax": 24, "ax": [24, 25, 104], "matplotlib": [24, 25, 104], "intend": [24, 66, 67, 68, 88, 92, 100, 101], "inpt": [24, 87, 88, 92], "don": [24, 25, 66, 67, 68, 87, 88, 104, 108], "prune": [24, 25, 87, 88, 89, 104], "deem": [24, 25, 88, 104], "perspect": [24, 25, 104, 108], "faint": [24, 25, 104], "colour": [24, 25, 104], "horizont": [24, 25, 104], "line": [24, 25, 104, 108], "row": [24, 25, 50, 78, 104], "repres": [24, 25, 78, 85, 89, 92, 93, 95, 97, 100, 101, 102, 103, 104, 108], "bar": [24, 25, 104], "maximum": [24, 25, 42, 50, 78, 104], "minimum": [24, 25, 42, 78, 104], "seen": [24, 25, 78, 104, 108], "show": [24, 105, 108], "axi": [24, 78], "abs_mean": [24, 85], "std": [24, 78, 85], "abs_max": [24, 85], "abs_min": [24, 85], "numel": [24, 78, 85], "practic": [24, 78, 92, 96, 108], "reshap": [24, 78, 88], "clearer": 24, "arrow": 24, "max": [24, 66, 67, 78, 108], "min": [24, 78, 108], "displai": 24, "plot_kwarg": [25, 104], "experiment": [25, 61, 78, 90, 91, 93, 104], "conveni": [25, 95, 104], "combin": [25, 53, 54, 55, 57, 58, 78, 86, 104, 108], "example_batch": [25, 104, 105], "work": [25, 61, 78, 86, 94, 103, 104, 105, 106, 108], "wide": [25, 93, 104], "interfac": [25, 93, 95, 104], "futur": [25, 78, 86, 101, 104], "now": [25, 78, 92, 96, 101, 104, 108], "re": [25, 64, 78, 104, 105, 106, 108], "base": [25, 53, 54, 61, 68, 72, 77, 101, 104, 108], "templat": [25, 104], "tracked_model": [25, 104], "keyword": [25, 61, 78, 102, 104], "alias": 26, "arithmet": 27, "constrain": [27, 29, 30, 93, 108], "constraint_nam": 28, "rais": [28, 61, 74, 78, 101], "valueerror": 28, "geometr": [29, 78, 108], "harmon": 30, "xavier": [30, 108], "glorot": [30, 108], "output_scal": [31, 32, 33, 34, 39, 108], "grad_input_scal": [31, 33, 39, 108], "op": [31, 32, 33, 34, 66, 67, 68, 78, 86, 90, 91, 101, 102, 106, 108], "equal": [31, 32, 33, 34, 40, 50, 57, 58, 59, 78, 83, 108], "left_grad_scal": [32, 34], "right_grad_scal": [32, 34], "grad": [33, 39, 47, 53, 66, 67, 68, 78, 81, 82, 101, 108], "compon": 35, "advanc": 35, "librari": [35, 92, 93, 105, 106, 108], "alpha": [37, 46, 78], "lower": [37, 47, 61, 66, 67, 68], "upper": [37, 61, 78], "interpol": [37, 78], "logarithm": 37, "constant": 37, "ratio": [37, 40, 57, 58, 59, 78, 83, 108], "limit": [37, 61, 92, 105], "keepdim": [38, 78], "wise": [39, 51, 56], "take": [39, 61, 78, 93, 108], "kwarg": [39, 66, 67, 68, 76, 78, 97, 101, 102], "residual_mult": [40, 83], "residual_attn_ratio": [40, 83], "tau": [40, 57, 58, 59, 68, 83, 108], "rule": [40, 61, 65, 66, 67, 68, 78, 83], "stack": [40, 83, 108], "start": [40, 78, 83, 102, 108], "ensur": [40, 61, 78, 83, 101, 102, 108], "varianc": [40, 83], "attn": [40, 83], "hyperparamet": [40, 83, 108], "total": [40, 78, 83], "appendix": [40, 83], "ffn": [40, 83], "fn": [40, 58, 83, 96], "simul": [41, 78, 90, 91], "exponent_bit": [42, 43, 44], "mantissa_bit": [42, 43, 44], "round": [42, 78, 90, 91], "stochast": [42, 66, 90, 91], "srbit": 42, "represent": [42, 78, 90, 91], "properti": [42, 78], "bit": [42, 78], "max_absolute_valu": 42, "absolut": [42, 78], "min_absolute_norm": 42, "min_absolute_subnorm": 42, "subnorm": 42, "quantis": [42, 90, 91], "differenti": [42, 66, 67, 68, 78, 101], "quantise_bwd": 42, "quantise_fwd": 42, "fpformat": [43, 44, 90, 105], "_i": 46, "broadcast": [46, 55, 61, 78], "promot": 46, "to_left_grad_scal": [46, 55, 105], "to_right_grad_scal": [46, 55, 105], "0202": 46, "0985": 46, "3506": 46, "6056": 46, "21": 46, "19": 46, "3944": 46, "b": [46, 53, 54, 68, 78, 101], "9732": 46, "3497": 46, "6245": 46, "4022": 46, "3743": 46, "7724": 46, "5811": 46, "8017": 46, "7695": 46, "3930": 46, "3672": 46, "1450": 46, "18": [46, 78], "6971": 46, "0736": 46, "17": 46, "0994": 46, "3216": 46, "7845": 46, "1610": 46, "1868": 46, "4090": 46, "8": [46, 61, 66, 67, 78, 108], "9902": 46, "3667": 46, "7": [46, 78], "3925": 46, "6147": 46, "scale_pow": [47, 53], "compos": [47, 86], "sever": 47, "iw": 47, "kw": 47, "sw": 47, "padw": 47, "even": [47, 55, 78, 108], "odd": 47, "dw": 47, "split": [47, 59, 78], "power": [47, 53], "crossentropyloss": [48, 105, 108], "predict": [48, 78], "section": [48, 78, 105, 108], "divid": [48, 78], "randint": [48, 78], "int64": [48, 78], "dictionaryand": 50, "analyt": 50, "respect": [50, 66, 67, 68, 78, 101], "column": [50, 78], "modifi": [50, 66, 67, 68, 78, 101], "under": 50, "v": [50, 66, 67, 68, 74, 78], "embedding_matrix": 50, "rand": [50, 61, 78], "8490": 50, "9625": 50, "6753": 50, "9666": 50, "7761": 50, "6108": 50, "6246": 50, "9751": 50, "3618": 50, "4161": 50, "2419": 50, "7383": 50, "0237": 50, "7794": 50, "0528": 50, "3385": 50, "8612": 50, "1867": 50, "zero_": [50, 78], "5609": 50, "5384": 50, "8720": 50, "6262": 50, "2438": 50, "7471": 50, "layernorm": [52, 105], "xa": [53, 54], "layout": [53, 54, 55, 78, 102], "autograd": [53, 54, 55, 66, 67, 68, 78, 101], "notic": [53, 54, 55], "miss": [53, 54, 55, 106], "pleas": [53, 54, 55, 61, 66, 67, 78, 101, 107, 108], "open": [53, 54, 55], "request": [53, 54, 55, 66, 67, 68, 106], "product": [55, 61, 78], "behavior": [55, 66, 67, 68, 78, 101], "prepend": [55, 66, 67, 68, 78], "purpos": [55, 78, 90, 91, 108], "remov": [55, 66, 67, 68, 74, 78, 88, 97, 108], "least": [55, 78], "thu": [55, 108], "j": [55, 78], "logic": 55, "though": [55, 59, 78, 86, 95, 106, 108], "particular": [55, 78, 93, 108], "mm": [55, 78], "measur": [56, 108], "mseloss": 56, "togeth": [57, 108], "conjunct": [57, 59, 92, 96, 108], "residual_split": [57, 58, 105, 108], "come": [57, 78, 86], "favor": [57, 58, 59], "maintain": 58, "residual_add": [58, 59, 105, 108], "prior": [59, 61, 101], "necessari": [59, 78, 87, 101, 108], "delai": [59, 78, 108], "still": [59, 78, 86, 93, 101, 106], "benefici": 59, "behav": [59, 66, 67, 68, 78], "rmsnorm": [60, 105], "queri": 61, "whatev": [61, 78], "underli": [61, 78, 86], "avail": [61, 92, 108], "flash": 61, "greater": [61, 78], "identifi": [61, 78, 87, 93], "versu": 61, "enable_gqa": 61, "effici": [61, 78, 101, 108], "def": [61, 77, 78, 93, 101, 103, 108], "scale_factor": 61, "math": [61, 103], "els": [61, 66, 67, 68, 74, 78], "attn_bia": 61, "temp_mask": 61, "tril": [61, 78], "diagon": [61, 78], "masked_fill_": [61, 78], "logical_not": [61, 78], "repeat_interleav": [61, 78], "attn_weight": 61, "transpos": [61, 78], "subject": [61, 78], "alwai": [61, 78, 92, 101], "accord": [61, 78, 93], "To": [61, 78, 98, 102, 105, 108], "disabl": [61, 72], "sure": 61, "mymodel": 61, "__init__": [61, 103, 108], "super": [61, 103, 108], "There": [61, 78, 101, 108], "flashattent": 61, "faster": [61, 108], "parallel": 61, "partit": 61, "memori": [61, 66, 67, 68, 78, 101, 108], "match": [61, 66, 67, 68, 78], "formul": 61, "attempt": [61, 108], "most": [61, 78, 101, 106, 108], "fine": [61, 66, 67, 68, 78], "grain": 61, "context": [61, 66, 67, 68, 78, 101], "manag": [61, 78], "prefer": 61, "mechan": [61, 108], "sdpa_kernel": 61, "enable_flash_sdp": 61, "global": [61, 72, 86], "enable_mem_efficient_sdp": 61, "enable_math_sdp": 61, "fuse": [61, 66, 67, 68, 108], "event": [61, 78], "reason": [61, 92, 106], "why": [61, 108], "cannot": [61, 78], "due": [61, 66, 67, 68, 78], "natur": 61, "float64": [61, 66, 67, 68, 78], "kept": 61, "bfloat16": [61, 66, 67, 68, 78], "numerical_accuraci": 61, "gqa": 61, "flash_attent": 61, "nest": [61, 78, 86, 93, 95], "number_of_heads_queri": 61, "number_of_heads_key_valu": 61, "number_of_heads_kei": 61, "number_of_heads_valu": 61, "hq": 61, "ev": 61, "part": 61, "score": 61, "triangular": 61, "form": [61, 108], "causalbia": 61, "thrown": [61, 78], "32": [61, 78], "sdpbackend": 61, "llama3": 61, "silu": [63, 105], "desir": [64, 78, 108], "cast": [64, 78], "overflow": [64, 108], "mup": [65, 66, 67, 68, 72], "adam": [65, 67, 70, 72, 105], "adamw": [65, 70, 105], "sgd": [65, 71, 78, 105], "box": [65, 102, 105, 108], "scaled_paramet": [65, 105], "finer": 65, "downstream": 65, "lr": [65, 66, 67, 68, 69, 70, 71, 72, 78], "param": [66, 67, 68, 69, 70, 72, 78], "dict": [66, 67, 68, 72, 74, 78, 93, 97, 102], "001": [66, 67, 68], "weight_decai": [66, 67, 68, 72], "independent_weight_decai": [66, 67, 68, 72], "allow_non_unit_scaling_param": [66, 67, 68, 72], "110mm": [66, 67, 68], "4pt": [66, 67, 68], "textbf": [66, 67, 68], "beta_1": [66, 67], "beta_2": [66, 67], "theta_0": [66, 67, 68], "theta": [66, 67, 68], "hspace": [66, 67, 68], "13mm": [66, 67, 68], "lambda": [66, 67, 68, 78], "decai": [66, 67, 68, 72], "textit": [66, 67, 68], "amsgrad": [66, 67], "maxim": [66, 67, 68, 105], "m_0": [66, 67], "leftarrow": [66, 67, 68], "moment": [66, 67], "v_0": [66, 67], "widehat": [66, 67], "ex": [66, 67, 68], "5mm": [66, 67, 68], "10mm": [66, 67, 68], "g_t": [66, 67, 68], "nabla_": [66, 67, 68], "f_t": [66, 67, 68], "theta_": [66, 67, 68], "neq": [66, 68], "m_t": [66, 67], "m_": [66, 67], "v_t": [66, 67], "v_": [66, 67], "2_t": [66, 67], "big": [66, 67], "theta_t": [66, 67, 68], "bf": [66, 67, 68], "further": [66, 67, 78, 108], "refer": [66, 67, 78, 105, 107, 108], "rate": [66, 67, 68, 72], "yet": [66, 67, 78, 93, 105, 108], "our": [66, 67, 93, 95, 101, 105, 106, 108], "captur": [66, 67, 96, 98], "coeffici": [66, 67], "999": [66, 67, 103, 108], "term": [66, 67, 78, 108], "l2": [66, 68], "penalti": [66, 68], "whether": [66, 67, 68, 78, 93, 101], "variant": [66, 67], "converg": [66, 67], "foreach": [66, 67, 68], "loop": [66, 67, 68], "sinc": [66, 67, 68, 78], "usual": [66, 67, 68, 78, 108], "significantli": [66, 67, 68, 108], "sizeof": [66, 67, 68], "peak": [66, 67, 68], "tensorlist": [66, 67, 68], "prohibit": [66, 67, 68], "fewer": [66, 67, 68], "through": [66, 67, 68, 78, 101, 102, 106, 108], "switch": [66, 67, 68], "flag": [66, 67, 68], "minim": [66, 67, 68], "safe": [66, 67, 78], "impair": [66, 67, 68], "ungraph": [66, 67], "leav": [66, 67, 68, 78, 108], "occur": [66, 67, 68, 78, 108], "step": [66, 67, 68, 72, 78, 108], "float32": [66, 67, 68, 78], "add_param_group": [66, 67, 68], "param_group": [66, 67, 68, 72], "tune": [66, 67, 68, 108], "frozen": [66, 67, 68], "made": [66, 67, 68, 101], "trainabl": [66, 67, 68], "progress": [66, 67, 68, 78], "load_state_dict": [66, 67, 68, 78], "state_dict": [66, 67, 68], "load": [66, 67, 68, 78], "state": [66, 67, 68, 78], "register_load_state_dict_post_hook": [66, 67, 68], "hook": [66, 67, 68, 78, 101], "removablehandl": [66, 67, 68], "signatur": [66, 67, 68, 77, 78, 101], "fire": [66, 67, 68], "alreadi": [66, 67, 68, 78], "handl": [66, 67, 68, 78, 101, 102], "util": [66, 67, 68, 78, 105, 108], "removeablehandl": [66, 67, 68], "register_load_state_dict_pre_hook": [66, 67, 68], "shallow": [66, 67, 68, 74], "copi": [66, 67, 68, 74, 78, 93], "new": [66, 67, 68, 74, 78, 86, 90, 91, 92, 95, 96, 97, 105, 106, 108], "register_state_dict_post_hook": [66, 67, 68], "register_state_dict_pre_hook": [66, 67, 68], "register_step_post_hook": [66, 67, 68], "register_step_pre_hook": [66, 67, 68], "new_arg": [66, 67, 68], "new_kwarg": [66, 67, 68], "hold": [66, 67, 68, 78], "Its": [66, 67, 68], "content": [66, 67, 68, 101], "characterist": [66, 67, 68], "itself": [66, 67, 68, 78], "NOT": [66, 67, 68], "map": [66, 67, 68, 78, 102], "metadata": [66, 67, 68, 76], "associ": [66, 67, 68, 92], "zip": [66, 67, 68], "actual": [66, 67, 68, 78], "without": [66, 67, 68, 78, 86, 103, 106, 108], "verif": [66, 67, 68], "might": [66, 67, 68, 78, 108], "someth": [66, 67, 68, 108], "momentum_buff": [66, 67, 68], "01": [66, 67, 68, 78, 108], "closur": [66, 67, 68], "reevalu": [66, 67, 68], "zero_grad": [66, 67, 68], "set_to_non": [66, 67, 68], "reset": [66, 67, 68], "footprint": [66, 67, 68], "modestli": [66, 67, 68], "tri": [66, 67, 68, 78], "access": [66, 67, 68, 78, 92, 101], "attribut": [66, 67, 68, 73, 77, 78, 101, 102], "guarante": [66, 67, 68, 78, 102, 106], "did": [66, 67, 68], "receiv": [66, 67, 68, 108], "altogeth": [66, 67, 68], "decoupl": 67, "readout_constraint": [68, 71], "linearreadout": [68, 105], "mu": [68, 78], "momentum": 68, "dampen": 68, "nesterov": 68, "15mm": 68, "_t": 68, "g_": 68, "formula": [68, 101], "deep": [68, 108], "__": 68, "loss_fn": 68, "lr_scale_func": 72, "adam_lr_scale_func": 72, "paramst": 72, "tag": [72, 76], "lr_scale_func_sgd": [72, 105], "overridden": [72, 101], "fail": [72, 78, 108], "rememb": 74, "clear": [74, 102], "od": 74, "fromkei": 74, "move_to_end": 74, "move": [74, 78, 86, 95, 107], "keyerror": 74, "pop": 74, "found": [74, 105, 108], "popitem": 74, "pair": [74, 78, 100], "lifo": 74, "fifo": 74, "setdefault": 74, "present": [74, 78, 97, 105, 108], "extra": [76, 108], "implicitli": 76, "proto": 77, "meth": 77, "Such": 77, "primarili": 77, "static": [77, 101], "checker": 77, "recogn": 77, "structur": [77, 101, 102], "subtyp": 77, "duck": 77, "func": [77, 101], "pep": 77, "544": 77, "decor": [77, 101], "runtime_check": 77, "act": 77, "simpl": [77, 78], "mind": 77, "runtim": 77, "presenc": 77, "genproto": 77, "conjug": 78, "conj": 78, "matric": 78, "real": 78, "mh": 78, "revers": 78, "permut": 78, "throw": 78, "releas": [78, 86, 105, 108], "mt": 78, "arang": 78, "ndim": 78, "abs_": 78, "alia": 78, "absolute_": 78, "aco": 78, "acos_": 78, "acosh": 78, "acosh_": 78, "add_": 78, "addbmm": 78, "batch1": 78, "batch2": 78, "addbmm_": 78, "addcdiv": 78, "tensor1": 78, "tensor2": 78, "addcdiv_": 78, "addcmul": 78, "addcmul_": 78, "addmm": 78, "mat1": 78, "mat2": 78, "addmm_": 78, "addmv": 78, "mat": 78, "vec": 78, "addmv_": 78, "addr": 78, "vec1": 78, "vec2": 78, "addr_": 78, "adjoint": 78, "align_a": 78, "explicit": 78, "align_to": 78, "127": 78, "refine_nam": 78, "img": 78, "scale_channel": 78, "num_channel": 78, "more_img": 78, "video": [78, 105], "agnost": 78, "api": [78, 102, 105, 108], "ellipsi": 78, "expand": [78, 101], "mention": 78, "appear": 78, "unment": 78, "named_tensor": 78, "front": 78, "keep": [78, 108], "rest": 78, "allclos": 78, "rtol": [78, 88], "atol": 78, "08": 78, "equal_nan": 78, "amax": 78, "amin": 78, "aminmax": 78, "angl": 78, "apply_": 78, "cpu": 78, "arcco": 78, "arccos_": 78, "arccosh": 78, "arccosh_": 78, "arcsin": 78, "arcsin_": 78, "arcsinh": 78, "arcsinh_": 78, "arctan": 78, "arctan2": 78, "arctan2_": 78, "atan2_": 78, "arctan_": 78, "arctanh": 78, "arctanh_": 78, "argmax": 78, "argmin": 78, "argsort": 78, "descend": [78, 102], "argwher": 78, "as_strid": 78, "storage_offset": 78, "as_strided_": 78, "as_strided_scatt": 78, "src": 78, "as_subclass": 78, "cl": 78, "pointer": 78, "stai": [78, 108], "attach": 78, "subclass": [78, 101], "asin": 78, "asin_": 78, "asinh": 78, "asinh_": 78, "atan": 78, "atan2": 78, "atan_": 78, "atanh": 78, "atanh_": 78, "retain_graph": 78, "create_graph": 78, "wrt": 78, "addition": 78, "accumul": 78, "stream": 78, "semant": [78, 102], "leaf": 78, "grad_fn": 78, "strictli": 78, "reli": [78, 93], "github": [78, 105, 108], "com": [78, 105, 108], "pull": 78, "60521": 78, "issuecom": 78, "867061780": 78, "omit": 78, "freed": 78, "nearli": 78, "much": [78, 93, 108], "deriv": [78, 108], "were": [78, 101], "baddbmm": 78, "baddbmm_": 78, "texttt": 78, "bernoulli_": 78, "fill": 78, "locat": 78, "integr": 78, "draw": 78, "binari": 78, "th": 78, "_tensor": 78, "memory_format": [78, 102], "preserve_format": 78, "bincount": 78, "minlength": 78, "bitwise_and": 78, "bitwise_and_": 78, "bitwise_left_shift": 78, "bitwise_left_shift_": 78, "bitwise_not": 78, "bitwise_not_": 78, "bitwise_or": 78, "bitwise_or_": 78, "bitwise_right_shift": 78, "bitwise_right_shift_": 78, "bitwise_xor": 78, "bitwise_xor_": 78, "bmm": 78, "broadcast_to": 78, "byte": 78, "uint8": 78, "cauchy_": 78, "median": 78, "drawn": 78, "cauchi": 78, "dfrac": 78, "cdoubl": 78, "ceil": 78, "ceil_": 78, "cfloat": 78, "chalf": 78, "char": 78, "int8": 78, "choleski": 78, "cholesky_invers": 78, "cholesky_solv": 78, "input2": 78, "clamp": 78, "clamp_": 78, "clip": [78, 108], "clip_": 78, "clone": [78, 101, 105, 108], "coalesc": 78, "uncoalesc": 78, "coo": 78, "col_indic": 78, "csr": 78, "sparse_csr": 78, "nnz": 78, "int32": 78, "mkl": 78, "routin": 78, "avoid": 78, "downcast": 78, "lose": 78, "ey": 78, "to_sparse_csr": 78, "conj_phys": 78, "conj_physical_": 78, "contigu": 78, "contiguous_format": 78, "copy_": 78, "non_block": 78, "resid": 78, "gpu": 78, "asynchron": 78, "host": 78, "copysign": 78, "copysign_": 78, "corrcoef": 78, "cos_": 78, "cosh": 78, "cosh_": 78, "count_nonzero": 78, "cov": 78, "correct": [78, 90, 91, 101, 108], "fweight": 78, "aweight": 78, "crow_indic": 78, "compress": 78, "destin": 78, "pin": 78, "cummax": 78, "cummin": 78, "cumprod": 78, "cumprod_": 78, "cumsum": 78, "cumsum_": 78, "data_ptr": 78, "address": [78, 86, 108], "deg2rad": 78, "deg2rad_": 78, "dense_dim": 78, "dens": 78, "len": 78, "sparse_dim": 78, "hybrid": 78, "dequant": 78, "quantiz": 78, "det": 78, "detach": 78, "never": [78, 88], "affect": 78, "share": [78, 101, 108], "storag": [78, 101], "trigger": 78, "detach_": 78, "diag": 78, "diag_emb": 78, "offset": 78, "dim1": 78, "dim2": 78, "diagflat": 78, "diagonal_scatt": 78, "diff": 78, "digamma": 78, "digamma_": 78, "dim_ord": 78, "physic": 78, "how": [78, 101, 105], "laid": 78, "outermost": 78, "innermost": 78, "channels_last": 78, "dist": 78, "div": 78, "rounding_mod": 78, "div_": 78, "divide_": 78, "doubl": [78, 101], "dsplit": 78, "split_size_or_sect": 78, "element_s": 78, "individu": 78, "eq": 78, "eq_": 78, "erf": 78, "erf_": 78, "erfc": 78, "erfc_": 78, "erfinv": 78, "erfinv_": 78, "exp2": 78, "exp2_": 78, "exp_": 78, "alloc": 78, "As": [78, 91, 108], "especi": 78, "write": 78, "expand_a": 78, "about": [78, 85], "expm1": 78, "expm1_": 78, "exponential_": 78, "lambd": 78, "pdf": 78, "densiti": 78, "theori": [78, 108], "exponenti": 78, "interv": 78, "impli": 78, "fill_": 78, "fill_diagonal_": 78, "fill_valu": 78, "wrap": [78, 96, 102, 103, 108], "main": 78, "tall": 78, "fix_": 78, "flatten": 78, "start_dim": 78, "end_dim": 78, "flip": 78, "fliplr": 78, "flipud": 78, "float_pow": 78, "expon": 78, "float_power_": 78, "floor": 78, "floor_": 78, "floor_divid": 78, "floor_divide_": 78, "fmax": 78, "fmin": 78, "fmod": 78, "divisor": 78, "fmod_": 78, "frac_": 78, "frexp": 78, "mantissa": 78, "gather": 78, "gcd": 78, "gcd_": 78, "ge": 78, "ge_": 78, "geometric_": 78, "trial": 78, "success": 78, "henc": [78, 93], "wherea": 78, "geqrf": 78, "ger": 78, "get_devic": 78, "ordin": 78, "greater_": 78, "greater_equ": 78, "greater_equal_": 78, "gt": 78, "gt_": 78, "hardshrink": 78, "has_nam": 78, "heavisid": 78, "heaviside_": 78, "histc": 78, "histogram": 78, "hsplit": 78, "hypot": 78, "hypot_": 78, "i0": 78, "i0_": 78, "igamma": 78, "igamma_": 78, "igammac": 78, "igammac_": 78, "imaginari": 78, "3100": 78, "3553j": 78, "5445": 78, "7896j": 78, "6492": 78, "0633j": 78, "0638": 78, "8119j": 78, "3553": 78, "7896": 78, "0633": 78, "8119": 78, "index_add": 78, "index_add_": [78, 101], "subtract": 78, "index_copi": 78, "index_copy_": 78, "duplic": 78, "index_fil": 78, "index_fill_": 78, "index_put": 78, "index_put_": 78, "put": [78, 108], "express": [78, 93, 97], "undefin": [78, 101], "index_reduce_": 78, "include_self": 78, "prod": 78, "identit": 78, "11": 78, "12": 78, "44": 78, "72": 78, "14": 78, "22": 78, "36": 78, "index_select": 78, "inner": [78, 93], "int_repr": 78, "uint8_t": 78, "is_coalesc": 78, "is_complex": 78, "is_conj": 78, "is_contigu": 78, "is_cpu": 78, "is_cuda": 78, "is_floating_point": 78, "is_infer": 78, "is_ipu": 78, "is_leaf": 78, "convent": [78, 102], "popul": [78, 102], "retain_grad": 78, "engin": [78, 101], "requires_grad_": [78, 92, 103, 108], "is_meta": 78, "meta": [78, 92], "carri": 78, "is_mp": 78, "mp": 78, "is_neg": 78, "neg": 78, "is_pin": 78, "is_quant": 78, "is_set_to": 78, "exact": [78, 108], "is_shar": 78, "is_sign": 78, "sign": [78, 108], "is_spars": 78, "is_sparse_csr": 78, "is_xla": 78, "xla": 78, "is_xpu": 78, "xpu": 78, "isclos": 78, "isfinit": 78, "isinf": 78, "isnan": 78, "isneginf": 78, "isposinf": 78, "isreal": 78, "istft": 78, "n_fft": 78, "hop_length": 78, "win_length": 78, "window": 78, "center": 78, "onesid": 78, "return_complex": 78, "tolist": 78, "items": 78, "kron": 78, "kthvalu": 78, "lcm": 78, "lcm_": 78, "ldexp": 78, "ldexp_": 78, "le": 78, "le_": 78, "lerp": 78, "lerp_": 78, "less": 78, "lt": 78, "less_": 78, "less_equ": 78, "less_equal_": 78, "lgamma": 78, "lgamma_": 78, "log10": 78, "log10_": 78, "log1p": 78, "log1p_": 78, "log2": 78, "log2_": 78, "log_": 78, "log_normal_": 78, "parameter": 78, "ln": 78, "logaddexp": 78, "logaddexp2": 78, "logcumsumexp": 78, "logdet": 78, "logical_and": 78, "logical_and_": 78, "logical_not_": 78, "logical_or": 78, "logical_or_": 78, "logical_xor": 78, "logical_xor_": 78, "logit_": 78, "logsumexp": 78, "lt_": 78, "lu": 78, "pivot": 78, "get_info": 78, "lu_solv": 78, "lu_data": 78, "lu_pivot": 78, "map_": 78, "masked_fil": 78, "booltensor": 78, "masked_scatt": 78, "masked_scatter_": 78, "continu": 78, "occurr": 78, "mani": [78, 93, 101, 108], "masked_select": 78, "matmul": [78, 90, 91, 105], "matrix_exp": 78, "matrix_pow": 78, "linalg": 78, "module_load": 78, "get_swap_module_params_on_convers": 78, "buffer": 78, "remap": 78, "swap_tensor": 78, "moveaxi": 78, "movedim": 78, "msort": 78, "mtia": 78, "mul": 78, "mul_": 78, "multinomi": 78, "num_sampl": 78, "multiply_": 78, "mv": 78, "mvlgamma": 78, "mvlgamma_": 78, "idx": [78, 101], "unnam": 78, "charact": 78, "underscor": 78, "variabl": [78, 101], "nan_to_num": 78, "nan": 78, "posinf": 78, "neginf": 78, "nan_to_num_": 78, "nanmean": 78, "nanmedian": 78, "nanquantil": 78, "q": 78, "nansum": 78, "narrow": 78, "narrow_copi": 78, "nbyte": 78, "consum": 78, "ndimens": 78, "ne": 78, "ne_": 78, "neg_": 78, "negative_": 78, "nelement": 78, "new_empti": 78, "pin_memori": 78, "uniniti": 78, "record": [78, 92, 101, 102], "would": [78, 101], "8182e": 78, "5765e": 78, "41": 78, "0545e": 78, "0949e": 78, "4842e": 78, "0000e": 78, "00": 78, "new_empty_strid": 78, "new_ful": 78, "141592": 78, "1416": 78, "new_on": 78, "new_tensor": 78, "want": [78, 106], "numpi": [78, 101], "arrai": 78, "from_numpi": 78, "read": [78, 108], "array_lik": 78, "new_zero": 78, "nextaft": 78, "nextafter_": 78, "nonzero": 78, "nonzero_stat": 78, "count": 78, "truncat": 78, "smaller": [78, 108], "invalid": 78, "input_tensor": 78, "static_s": 78, "rank": 78, "fro": 78, "normal_": 78, "not_equ": 78, "not_equal_": 78, "forc": 78, "ndarrai": 78, "convers": [78, 108], "vice": 78, "versa": 78, "resolve_conj": 78, "resolve_neg": 78, "isn": 78, "won": 78, "shorthand": 78, "orgqr": 78, "ormqr": 78, "input3": 78, "outer": 78, "pinvers": 78, "polygamma": 78, "polygamma_": 78, "pow": 78, "pow_": 78, "put_": 78, "q_per_channel_axi": 78, "q_per_channel_scal": 78, "q_per_channel_zero_point": 78, "zero_point": 78, "q_scale": 78, "q_zero_point": 78, "qr": 78, "qscheme": 78, "qtensor": 78, "quantil": 78, "rad2deg": 78, "rad2deg_": 78, "discret": 78, "bound": 78, "53": 78, "ravel": 78, "reciproc": 78, "reciprocal_": 78, "record_stream": 78, "mark": [78, 101], "dealloc": [78, 102], "reus": 78, "until": [78, 108], "queu": 78, "complet": [78, 89, 106], "cach": [78, 86, 95], "awar": 78, "correctli": 78, "life": 78, "cycl": 78, "But": 78, "unexpectedli": 78, "let": 78, "know": [78, 101], "suitabl": 78, "abl": [78, 93, 108], "think": 78, "carefulli": 78, "safeti": 78, "These": [78, 92, 108], "analog": 78, "tradeoff": 78, "gc": 78, "situat": 78, "lifetim": 78, "poll": 78, "race": 78, "creation": 78, "sync": 78, "back": 78, "suffici": [78, 93, 108], "realloc": 78, "done": [78, 93], "counterintuit": 78, "old": [78, 108], "becaus": [78, 108], "wait": 78, "concret": [78, 102], "s0": 78, "s1": 78, "wait_stream": 78, "some_comm_op": 78, "synchron": 78, "del": 78, "decid": 78, "immedi": 78, "wouldn": 78, "finish": 78, "profil": 78, "chrome": 78, "trace": [78, 93], "export_chrome_trac": 78, "earli": 78, "overlap": 78, "commun": 78, "late": 78, "live": 78, "guidanc": 78, "fsdp": 78, "cudacachingalloc": 78, "refin": 78, "special": [78, 93, 106], "renam": 78, "lift": 78, "coexist": 78, "greedili": 78, "named_img": 78, "register_hook": 78, "execut": [78, 86, 95, 102], "register_post_accumulate_grad_hook": 78, "unless": [78, 101], "enable_grad": 78, "0100": 78, "0200": 78, "0300": 78, "remaind": 78, "remainder_": 78, "rename_map": 78, "position": 78, "drop": [78, 108], "One": 78, "renamed_img": 78, "height": 78, "width": 78, "rename_": 78, "maxnorm": 78, "renorm_": 78, "repeat": [78, 108], "similar": [78, 101, 108], "tile": 78, "output_s": 78, "fact": [78, 108], "tell": 78, "obtain": 78, "dataload": 78, "preprocess": 78, "sai": 78, "saved_weight": 78, "25": 78, "loaded_weight": 78, "5503": 78, "4926": 78, "1158": 78, "8303": 78, "1007": 78, "9853": 78, "2316": 78, "6606": 78, "compat": [78, 102], "reshape_a": 78, "resize_": 78, "resiz": 78, "fit": 78, "preserv": [78, 108], "level": [78, 108], "reinterpret": 78, "unchang": [78, 81], "custom": [78, 93, 101], "set_": 78, "use_deterministic_algorithm": 78, "fill_uninitialized_memori": 78, "go": [78, 101, 108], "unaffect": 78, "resize_as_": 78, "retains_grad": 78, "roll": 78, "rot90": 78, "decim": 78, "round_": 78, "rsqrt": 78, "rsqrt_": 78, "scatter": 78, "scatter_": 78, "manner": 78, "moreov": 78, "inclus": 78, "uniqu": 78, "pick": 78, "arbitrarili": 78, "propag": 78, "scatter_add_": 78, "scatter_reduce_": 78, "23": 78, "4600": 78, "2300": 78, "previou": [78, 88, 93], "scatter_add": 78, "fashion": 78, "scatter_reduc": 78, "select_scatt": 78, "sgn": 78, "sgn_": 78, "share_memory_": 78, "untypedstorag": 78, "short": 78, "int16": 78, "sigmoid_": 78, "sign_": 78, "signbit": 78, "sin": 78, "sin_": 78, "sinc_": 78, "sinh": 78, "sinh_": 78, "slice_scatt": 78, "slogdet": 78, "smm": 78, "sort": [78, 101], "sparse_mask": 78, "advis": 78, "whose": [78, 103], "nse": 78, "cat": 78, "sparse_coo_tensor": 78, "6550": 78, "2397": 78, "1611": 78, "0779": 78, "2326": 78, "0558": 78, "4711": 78, "9678": 78, "5138": 78, "0411": 78, "9417": 78, "5158": 78, "0793": 78, "0036": 78, "2569": 78, "1055": 78, "sparse_coo": 78, "sparse_resize_": 78, "sparse_resize_and_clear_": 78, "split_siz": 78, "sqrt_": 78, "square_": 78, "squeez": 78, "squeeze_": 78, "sspaddmm": 78, "stft": 78, "pad_mod": 78, "typedstorag": 78, "directli": [78, 101, 106, 108], "untyped_storag": 78, "storage_typ": 78, "jump": 78, "next": [78, 108], "sub": 78, "sub_": 78, "subtract_": 78, "sum_to_s": 78, "svd": 78, "compute_uv": 78, "swapax": 78, "axis0": 78, "axis1": 78, "swapaxes_": 78, "swapdim": 78, "dim0": 78, "swapdims_": 78, "t_": 78, "take_along_dim": 78, "tan": 78, "tan_": 78, "tanh_": 78, "tensor_split": 78, "indices_or_sect": 78, "5044": 78, "0005": 78, "3310": 78, "0584": 78, "cuda0": 78, "to_dens": 78, "masked_grad": 78, "to_mkldnn": 78, "mkldnn": 78, "to_padded_tensor": 78, "to_spars": 78, "sparsedim": 78, "coordin": 78, "blocksiz": 78, "could": [78, 108], "sparse_csc": 78, "sparse_bsr": 78, "sparse_bsc": 78, "bsr": 78, "bsc": 78, "runtimeerror": [78, 101], "except": 78, "evenli": 78, "csc": 78, "minu": 78, "sparsecsr": 78, "to_sparse_bsc": 78, "row_indic": 78, "ccol_indic": 78, "to_sparse_bsr": 78, "to_sparse_coo": 78, "_nnz": 78, "to_sparse_csc": 78, "012766935862600803": 78, "5415473580360413": 78, "08909505605697632": 78, "7729271650314331": 78, "topk": 78, "largest": 78, "transpose_": 78, "triangular_solv": 78, "unitriangular": 78, "tril_": 78, "triu": 78, "triu_": 78, "true_divid": 78, "true_divide_": 78, "trunc": 78, "trunc_": 78, "async": 78, "type_a": 78, "unbind": 78, "seq": 78, "unflatten": 78, "unfold": 78, "sizedim": 78, "happen": [78, 101], "uniform_": 78, "return_invers": 78, "return_count": 78, "unique_consecut": 78, "elimin": [78, 108], "consecut": 78, "unsafe_chunk": 78, "unsafe_split": 78, "unsqueez": 78, "unsqueeze_": 78, "vdot": 78, "subspac": 78, "across": 78, "satisfi": 78, "condit": 78, "foral": 78, "unclear": 78, "z": [78, 101], "2nd": 78, "3rd": 78, "proportion": 78, "twice": 78, "met": 78, "overload": 78, "torchscript": [78, 108], "program": [78, 108], "9482": 78, "0310": 78, "4999": 78, "5316": 78, "1520": 78, "7472": 78, "5617": 78, "8649": 78, "4724": 78, "0334": 78, "2976": 78, "8499": 78, "2109": 78, "9913": 78, "9607": 78, "6123": 78, "1064483442": 78, "1124191867": 78, "1069546515": 78, "1089989247": 78, "1105482831": 78, "1061112040": 78, "1057999968": 78, "1084397505": 78, "1071760287": 78, "1123489973": 78, "1097310419": 78, "1084649136": 78, "1101533110": 78, "1073668768": 78, "1082790149": 78, "1088634448": 78, "1000000000": 78, "0047": 78, "0310j": 78, "5316j": 78, "7472j": 78, "8649j": 78, "0334j": 78, "8499j": 78, "9913j": 78, "6123j": 78, "202": 78, "154": 78, "59": 78, "182": 78, "243": 78, "253": 78, "188": 78, "185": 78, "252": 78, "191": 78, "63": 78, "240": 78, "227": 78, "165": 78, "27": 78, "190": 78, "146": 78, "203": 78, "15": 78, "106": 78, "93": 78, "205": 78, "192": 78, "112": 78, "206": 78, "189": 78, "95": 78, "152": 78, "147": 78, "89": 78, "43": 78, "246": 78, "87": 78, "235": [78, 103], "226": 78, "254": 78, "111": 78, "117": 78, "177": [78, 108], "28": 78, "view_a": 78, "vsplit": 78, "xlogi": 78, "xlogy_": 78, "typeguard": 79, "dynamo": 84, "fwd_tensor": 85, "fwd": [85, 108], "bwd": [85, 103, 108], "slightli": [86, 88, 108], "unit_scal": [86, 92, 105, 106], "introduc": [86, 108], "_dynamo": [86, 95, 96], "optimis": [86, 95, 96, 105], "thereaft": [86, 95], "written": 86, "successfulli": 86, "rather": 86, "graphmodul": [86, 95, 102], "simulate_fp8": [86, 92, 93, 105, 106], "node": [87, 88, 89, 92, 97, 102], "pruned_graph": [87, 88], "52587890625e": 88, "negligibli": 88, "toler": 88, "signific": [88, 108], "onc": [89, 101], "fwd_format": 90, "bwd_format": 90, "torchdynamo": [90, 91, 93, 95, 96, 98], "scaled_dot_product_attent": [90, 91, 105], "inspect": [90, 91], "fp32": [90, 91, 108], "speedup": [90, 91, 108], "variou": [90, 92], "fp8": [91, 108], "literatur": 91, "noun": 91, "et": 91, "al": 91, "2022": 91, "micikeviciu": 91, "e4": [91, 108], "e5": [91, 108], "analysi": [92, 93, 103, 104, 105, 108], "prune_non_float_tensor": [92, 105], "prune_same_scale_tensor": [92, 105], "tend": [92, 108], "procedur": 93, "recurs": [93, 95, 96, 98, 102, 103], "build": [93, 108], "fundament": 93, "proce": 93, "five": 93, "stage": 93, "identif": 93, "compar": [93, 105], "guid": [93, 105], "unconstrain": 93, "proof": 93, "initialis": [93, 108], "approach": [93, 95, 107, 108], "compil": [93, 95, 96, 105, 106, 108], "system": [93, 95], "easi": [93, 95], "interoper": [93, 95], "definit": [93, 105, 107], "basic": [93, 108], "told": 93, "explicitli": 93, "substitut": 93, "new_gelu": 93, "test": [93, 106, 108], "said": 93, "anticip": 93, "ultim": 93, "alon": 93, "prioriti": 93, "non_recurse_funct": 95, "graph_modul": 95, "backend_1": 95, "backend_2": 95, "_modul": 95, "torch_nn_modules_to_user_modul": [96, 105], "patch": 96, "target_fn": 97, "keep_type_expr": 97, "accompani": 97, "retain": 97, "mod": 98, "trivial_subclass": 98, "develop": [99, 108], "dataclass": 100, "scalepair": [101, 105], "ctx": 101, "functionctx": 101, "vjp": 101, "needs_input_grad": 101, "jvp": 101, "grad_input": 101, "got": 101, "mark_dirti": 101, "setup_context": 101, "matter": 101, "torch_doctest_autograd": 101, "staticmethod": 101, "x_npy": 101, "once_differenti": 101, "grad_output": 101, "lead": [101, 108], "wrong": 101, "mark_non_differenti": 101, "save_for_backward": 101, "g1": 101, "g2": 101, "saved_tensor": 101, "zeros_lik": 101, "oppos": 101, "leak": 101, "saved_tensors_hook": 101, "intermediari": 101, "neither": 101, "nor": 101, "recomput": 101, "tutori": [101, 108], "weren": 101, "grad_out": 101, "gx": 101, "gy": 101, "gz": 101, "save_for_forward": 101, "x_t": 101, "y_t": 101, "fwad": 101, "dual_level": 101, "a_dual": 101, "make_du": 101, "set_materialize_grad": 101, "materi": 101, "simplefunc": 101, "No": 101, "induc": 101, "insid": 101, "vmap": 101, "info": 101, "in_dim": 101, "underneath": 101, "generate_vmap_rul": 101, "choos": 101, "out_dim": 101, "instrument": 102, "boxed_run": 102, "args_list": 102, "interpret": 102, "promptli": 102, "call_funct": 102, "invoc": 102, "call_method": 102, "opoverload": 102, "symint": 102, "symbool": 102, "symfloat": 102, "call_modul": 102, "fetch_args_kwargs_from_env": 102, "fetch": 102, "environ": 102, "fetch_attr": 102, "hierarchi": 102, "fulli": 102, "qualifi": 102, "get_attr": 102, "Will": 102, "map_nodes_to_valu": 102, "belong": 102, "report": 102, "realli": 102, "referenc": 102, "placehold": 102, "tracer": 102, "target_to_funct": 102, "initial_env": 102, "enable_io_process": 102, "partial": 102, "process_input": 102, "process_output": 102, "run_nod": 102, "recurse_modul": 103, "syntax_highlight": 103, "autowrap_modul": 103, "einop": 103, "home": 103, "runner": 103, "lib": 103, "site": 103, "packag": 103, "py": 103, "autowrap_funct": 103, "dummi": 103, "union": 103, "fed": [103, 108], "plain": 103, "toggl": 103, "behavour": 103, "moduletyp": 103, "fc1": 103, "fc2": 103, "236": 103, "fc1_weight": 103, "018": [103, 108], "54": 103, "fc1_bia": 103, "0182": 103, "51": 103, "_c": [103, 108], "_nn": [103, 108], "578": [103, 108], "204": [103, 108], "337": 103, "288": 103, "fc2_weight": 103, "00902": [103, 108], "13": 103, "fc2_bia": 103, "00904": 103, "31": 103, "linear_1": [103, 108], "welcom": 105, "design": [105, 108], "facilit": 105, "\u00b5p": 105, "outlin": [105, 108], "icml": [105, 108], "2023": [105, 108], "parametr": 105, "2407": 105, "17465": 105, "notebook": [105, 108], "languag": 105, "against": 105, "sp": 105, "git": [105, 108], "graphcor": [105, 108], "research": [105, 108], "broad": 105, "overview": [105, 108], "occasion": [105, 108], "bug": [105, 106, 108], "keen": [105, 106, 108], "encount": [105, 108], "slide": 105, "fork": [105, 108], "repo": [105, 108], "instruct": [105, 108], "consider": 105, "conv1d": 105, "depthmodulelist": 105, "depthsequenti": 105, "mhsa": 105, "transformerdecod": 105, "transformerlay": 105, "graph_to_datafram": 105, "apply_constraint": 105, "format_to_tupl": 105, "tuple_to_format": 105, "cross_entropi": [105, 108], "linear_readout": 105, "mse_loss": 105, "residual_appli": 105, "rms_norm": 105, "silu_glu": 105, "lr_scale_for_depth": 105, "lr_scale_func_adam": 105, "scale_bwd": 105, "scale_fwd": 105, "prune_selected_nod": 105, "simulate_format": 105, "apply_transform": 105, "patch_to_expand_modul": 105, "replace_node_with_funct": 105, "analyse_modul": [105, 108], "scaletrack": 105, "scaletrackinginterpret": 105, "logarithmic_interpol": 105, "scale_elementwis": 105, "despit": 106, "best": [106, 108], "effort": 106, "free": 106, "assist": 106, "anyon": 106, "issu": [106, 108], "coverag": 106, "ve": 106, "focuss": 106, "difficulti": 106, "although": [106, 108], "suspect": 106, "haven": 106, "exhaust": 106, "encourag": 106, "touch": 106, "equat": 107, "legaci": 107, "cover": 108, "brief": 108, "discuss": 108, "paradigm": 108, "aim": 108, "involv": 108, "scratch": 108, "assumpt": 108, "advantag": 108, "great": 108, "roughli": 108, "headroom": 108, "grow": 108, "shrink": 108, "underflow": 108, "drift": 108, "far": 108, "fp16": 108, "behaviour": 108, "dynam": 108, "decreas": 108, "treatment": 108, "motiv": 108, "sens": 108, "understand": 108, "bf16": 108, "veri": 108, "larg": 108, "3e": 108, "38": 108, "45": 108, "60": 108, "000": 108, "6e": 108, "speed": 108, "scope": 108, "introduct": 108, "tricki": 108, "easier": 108, "breakdown": 108, "alongsid": 108, "unscaledmlp": 108, "linear_2": 108, "annotated_cod": 108, "linear_1_weight": 108, "83": 108, "linear_1_bia": 108, "84": 108, "322": 108, "289": 108, "linear_2_weight": 108, "48": 108, "linear_2_bia": 108, "00894": 108, "198": 108, "firstli": 108, "decompos": 108, "secondli": 108, "fwd_scale": 108, "bwd_scale": 108, "enough": 108, "unscal": 108, "scaledmlp": 108, "716": 108, "729": 108, "707": 108, "706": 108, "693": 108, "03": 108, "979": 108, "good": 108, "art": 108, "aris": 108, "clearli": 108, "explod": 108, "degrad": 108, "steadili": 108, "meet": 108, "concern": 108, "merit": 108, "investig": 108, "attain": 108, "substanti": 108, "push": 108, "themselv": 108, "solv": 108, "outsid": 108, "separ": 108, "care": 108, "residuallay": 108, "contrast": 108, "find": 108, "down": 108, "emploi": 108, "trick": 108, "comprehens": 108, "scenario": 108, "arriv": 108, "fan_in": 108, "fan_out": 108, "grad_weight_scal": 108, "grad_bias_scal": 108, "ideal": 108, "compromis": 108, "eager": 108, "trip": 108, "fortun": 108, "hi": 108, "overhead": 108, "fusion": 108, "answer": 108, "jit": 108, "script": 108, "rectifi": 108, "flexibl": 108, "unit_scaled_funct": 108, "unitscaledmodul": 108, "incur": 108, "naiv": 108, "benchmark": 108, "thorough": 108, "strongli": 108, "latest": 108, "recent": 108, "upgrad": 108, "preview": 108, "nightli": 108}, "objects": {"": [[2, 0, 0, "-", "unit_scaling"]], "unit_scaling": [[3, 1, 1, "", "Conv1d"], [4, 1, 1, "", "CrossEntropyLoss"], [5, 1, 1, "", "DepthModuleList"], [6, 1, 1, "", "DepthSequential"], [7, 1, 1, "", "Dropout"], [8, 1, 1, "", "Embedding"], [9, 1, 1, "", "GELU"], [10, 1, 1, "", "LayerNorm"], [11, 1, 1, "", "Linear"], [12, 1, 1, "", "LinearReadout"], [13, 1, 1, "", "MHSA"], [14, 1, 1, "", "MLP"], [15, 4, 1, "", "Parameter"], [16, 1, 1, "", "RMSNorm"], [17, 1, 1, "", "SiLU"], [18, 1, 1, "", "Softmax"], [19, 1, 1, "", "TransformerDecoder"], [20, 1, 1, "", "TransformerLayer"], [21, 0, 0, "-", "analysis"], [26, 0, 0, "-", "constraints"], [35, 0, 0, "-", "core"], [41, 0, 0, "-", "formats"], [45, 0, 0, "-", "functional"], [65, 0, 0, "-", "optim"], [73, 0, 0, "-", "parameter"], [80, 0, 0, "-", "scale"], [83, 4, 1, "", "transformer_residual_scaling_rule"], [84, 0, 0, "-", "transforms"], [99, 0, 0, "-", "utils"], [104, 4, 1, "", "visualiser"]], "unit_scaling.Conv1d": [[3, 2, 1, "", "bias"], [3, 2, 1, "", "weight"]], "unit_scaling.DepthModuleList": [[5, 3, 1, "", "append"], [5, 3, 1, "", "extend"], [5, 3, 1, "", "insert"]], "unit_scaling.DepthSequential": [[6, 3, 1, "", "append"]], "unit_scaling.Embedding": [[8, 3, 1, "", "from_pretrained"], [8, 2, 1, "", "weight"]], "unit_scaling.LayerNorm": [[10, 2, 1, "", "bias"], [10, 2, 1, "", "weight"]], "unit_scaling.Linear": [[11, 2, 1, "", "bias"], [11, 2, 1, "", "weight"]], "unit_scaling.LinearReadout": [[12, 2, 1, "", "bias"], [12, 2, 1, "", "weight"]], "unit_scaling.RMSNorm": [[16, 2, 1, "", "weight"]], "unit_scaling.TransformerDecoder": [[19, 3, 1, "", "append"]], "unit_scaling.analysis": [[22, 4, 1, "", "example_batch"], [23, 4, 1, "", "graph_to_dataframe"], [24, 4, 1, "", "plot"], [25, 4, 1, "", "visualiser"]], "unit_scaling.constraints": [[27, 4, 1, "", "amean"], [28, 4, 1, "", "apply_constraint"], [29, 4, 1, "", "gmean"], [30, 4, 1, "", "hmean"], [31, 4, 1, "", "to_grad_input_scale"], [32, 4, 1, "", "to_left_grad_scale"], [33, 4, 1, "", "to_output_scale"], [34, 4, 1, "", "to_right_grad_scale"]], "unit_scaling.core": [[36, 0, 0, "-", "functional"]], "unit_scaling.core.functional": [[37, 4, 1, "", "logarithmic_interpolation"], [38, 4, 1, "", "rms"], [39, 4, 1, "", "scale_elementwise"], [40, 4, 1, "", "transformer_residual_scaling_rule"]], "unit_scaling.formats": [[42, 1, 1, "", "FPFormat"], [43, 4, 1, "", "format_to_tuple"], [44, 4, 1, "", "tuple_to_format"]], "unit_scaling.formats.FPFormat": [[42, 5, 1, "", "bits"], [42, 5, 1, "", "max_absolute_value"], [42, 5, 1, "", "min_absolute_normal"], [42, 5, 1, "", "min_absolute_subnormal"], [42, 3, 1, "", "quantise"], [42, 3, 1, "", "quantise_bwd"], [42, 3, 1, "", "quantise_fwd"]], "unit_scaling.functional": [[46, 4, 1, "", "add"], [47, 4, 1, "", "conv1d"], [48, 4, 1, "", "cross_entropy"], [49, 4, 1, "", "dropout"], [50, 4, 1, "", "embedding"], [51, 4, 1, "", "gelu"], [52, 4, 1, "", "layer_norm"], [53, 4, 1, "", "linear"], [54, 4, 1, "", "linear_readout"], [55, 4, 1, "", "matmul"], [56, 4, 1, "", "mse_loss"], [57, 4, 1, "", "residual_add"], [58, 4, 1, "", "residual_apply"], [59, 4, 1, "", "residual_split"], [60, 4, 1, "", "rms_norm"], [61, 4, 1, "", "scaled_dot_product_attention"], [62, 4, 1, "", "silu"], [63, 4, 1, "", "silu_glu"], [64, 4, 1, "", "softmax"]], "unit_scaling.optim": [[66, 1, 1, "", "Adam"], [67, 1, 1, "", "AdamW"], [68, 1, 1, "", "SGD"], [69, 4, 1, "", "lr_scale_for_depth"], [70, 4, 1, "", "lr_scale_func_adam"], [71, 4, 1, "", "lr_scale_func_sgd"], [72, 4, 1, "", "scaled_parameters"]], "unit_scaling.optim.Adam": [[66, 3, 1, "", "add_param_group"], [66, 3, 1, "", "load_state_dict"], [66, 3, 1, "", "register_load_state_dict_post_hook"], [66, 3, 1, "", "register_load_state_dict_pre_hook"], [66, 3, 1, "", "register_state_dict_post_hook"], [66, 3, 1, "", "register_state_dict_pre_hook"], [66, 3, 1, "", "register_step_post_hook"], [66, 3, 1, "", "register_step_pre_hook"], [66, 3, 1, "", "state_dict"], [66, 3, 1, "", "step"], [66, 3, 1, "", "zero_grad"]], "unit_scaling.optim.AdamW": [[67, 3, 1, "", "add_param_group"], [67, 3, 1, "", "load_state_dict"], [67, 3, 1, "", "register_load_state_dict_post_hook"], [67, 3, 1, "", "register_load_state_dict_pre_hook"], [67, 3, 1, "", "register_state_dict_post_hook"], [67, 3, 1, "", "register_state_dict_pre_hook"], [67, 3, 1, "", "register_step_post_hook"], [67, 3, 1, "", "register_step_pre_hook"], [67, 3, 1, "", "state_dict"], [67, 3, 1, "", "step"], [67, 3, 1, "", "zero_grad"]], "unit_scaling.optim.SGD": [[68, 3, 1, "", "add_param_group"], [68, 3, 1, "", "load_state_dict"], [68, 3, 1, "", "register_load_state_dict_post_hook"], [68, 3, 1, "", "register_load_state_dict_pre_hook"], [68, 3, 1, "", "register_state_dict_post_hook"], [68, 3, 1, "", "register_state_dict_pre_hook"], [68, 3, 1, "", "register_step_post_hook"], [68, 3, 1, "", "register_step_pre_hook"], [68, 3, 1, "", "state_dict"], [68, 3, 1, "", "step"], [68, 3, 1, "", "zero_grad"]], "unit_scaling.parameter": [[74, 1, 1, "", "OrderedDict"], [75, 4, 1, "", "Parameter"], [76, 1, 1, "", "ParameterData"], [77, 1, 1, "", "Protocol"], [78, 1, 1, "", "Tensor"], [79, 4, 1, "", "has_parameter_data"]], "unit_scaling.parameter.OrderedDict": [[74, 3, 1, "", "clear"], [74, 3, 1, "", "copy"], [74, 3, 1, "", "fromkeys"], [74, 3, 1, "", "get"], [74, 3, 1, "", "items"], [74, 3, 1, "", "keys"], [74, 3, 1, "", "move_to_end"], [74, 3, 1, "", "pop"], [74, 3, 1, "", "popitem"], [74, 3, 1, "", "setdefault"], [74, 3, 1, "", "update"], [74, 3, 1, "", "values"]], "unit_scaling.parameter.Tensor": [[78, 2, 1, "", "H"], [78, 2, 1, "", "T"], [78, 3, 1, "", "abs"], [78, 3, 1, "", "abs_"], [78, 3, 1, "", "absolute"], [78, 3, 1, "", "absolute_"], [78, 3, 1, "", "acos"], [78, 3, 1, "", "acos_"], [78, 3, 1, "", "acosh"], [78, 3, 1, "", "acosh_"], [78, 3, 1, "", "add"], [78, 3, 1, "", "add_"], [78, 3, 1, "", "addbmm"], [78, 3, 1, "", "addbmm_"], [78, 3, 1, "", "addcdiv"], [78, 3, 1, "", "addcdiv_"], [78, 3, 1, "", "addcmul"], [78, 3, 1, "", "addcmul_"], [78, 3, 1, "", "addmm"], [78, 3, 1, "", "addmm_"], [78, 3, 1, "", "addmv"], [78, 3, 1, "", "addmv_"], [78, 3, 1, "", "addr"], [78, 3, 1, "", "addr_"], [78, 3, 1, "", "adjoint"], [78, 3, 1, "", "align_as"], [78, 3, 1, "", "align_to"], [78, 3, 1, "", "all"], [78, 3, 1, "", "allclose"], [78, 3, 1, "", "amax"], [78, 3, 1, "", "amin"], [78, 3, 1, "", "aminmax"], [78, 3, 1, "", "angle"], [78, 3, 1, "", "any"], [78, 3, 1, "", "apply_"], [78, 3, 1, "", "arccos"], [78, 3, 1, "", "arccos_"], [78, 3, 1, "", "arccosh"], [78, 3, 1, "", "arccosh_"], [78, 3, 1, "", "arcsin"], [78, 3, 1, "", "arcsin_"], [78, 3, 1, "", "arcsinh"], [78, 3, 1, "", "arcsinh_"], [78, 3, 1, "", "arctan"], [78, 3, 1, "", "arctan2"], [78, 3, 1, "", "arctan2_"], [78, 3, 1, "", "arctan_"], [78, 3, 1, "", "arctanh"], [78, 3, 1, "", "arctanh_"], [78, 3, 1, "", "argmax"], [78, 3, 1, "", "argmin"], [78, 3, 1, "", "argsort"], [78, 3, 1, "", "argwhere"], [78, 3, 1, "", "as_strided"], [78, 3, 1, "", "as_strided_"], [78, 3, 1, "", "as_strided_scatter"], [78, 3, 1, "", "as_subclass"], [78, 3, 1, "", "asin"], [78, 3, 1, "", "asin_"], [78, 3, 1, "", "asinh"], [78, 3, 1, "", "asinh_"], [78, 3, 1, "", "atan"], [78, 3, 1, "", "atan2"], [78, 3, 1, "", "atan2_"], [78, 3, 1, "", "atan_"], [78, 3, 1, "", "atanh"], [78, 3, 1, "", "atanh_"], [78, 3, 1, "", "backward"], [78, 3, 1, "", "baddbmm"], [78, 3, 1, "", "baddbmm_"], [78, 3, 1, "", "bernoulli"], [78, 3, 1, "", "bernoulli_"], [78, 3, 1, "", "bfloat16"], [78, 3, 1, "", "bincount"], [78, 3, 1, "", "bitwise_and"], [78, 3, 1, "", "bitwise_and_"], [78, 3, 1, "", "bitwise_left_shift"], [78, 3, 1, "", "bitwise_left_shift_"], [78, 3, 1, "", "bitwise_not"], [78, 3, 1, "", "bitwise_not_"], [78, 3, 1, "", "bitwise_or"], [78, 3, 1, "", "bitwise_or_"], [78, 3, 1, "", "bitwise_right_shift"], [78, 3, 1, "", "bitwise_right_shift_"], [78, 3, 1, "", "bitwise_xor"], [78, 3, 1, "", "bitwise_xor_"], [78, 3, 1, "", "bmm"], [78, 3, 1, "", "bool"], [78, 3, 1, "", "broadcast_to"], [78, 3, 1, "", "byte"], [78, 3, 1, "", "cauchy_"], [78, 3, 1, "", "cdouble"], [78, 3, 1, "", "ceil"], [78, 3, 1, "", "ceil_"], [78, 3, 1, "", "cfloat"], [78, 3, 1, "", "chalf"], [78, 3, 1, "", "char"], [78, 3, 1, "", "cholesky"], [78, 3, 1, "", "cholesky_inverse"], [78, 3, 1, "", "cholesky_solve"], [78, 3, 1, "", "chunk"], [78, 3, 1, "", "clamp"], [78, 3, 1, "", "clamp_"], [78, 3, 1, "", "clip"], [78, 3, 1, "", "clip_"], [78, 3, 1, "", "clone"], [78, 3, 1, "", "coalesce"], [78, 3, 1, "", "col_indices"], [78, 3, 1, "", "conj"], [78, 3, 1, "", "conj_physical"], [78, 3, 1, "", "conj_physical_"], [78, 3, 1, "", "contiguous"], [78, 3, 1, "", "copy_"], [78, 3, 1, "", "copysign"], [78, 3, 1, "", "copysign_"], [78, 3, 1, "", "corrcoef"], [78, 3, 1, "", "cos"], [78, 3, 1, "", "cos_"], [78, 3, 1, "", "cosh"], [78, 3, 1, "", "cosh_"], [78, 3, 1, "", "count_nonzero"], [78, 3, 1, "", "cov"], [78, 3, 1, "", "cpu"], [78, 3, 1, "", "cross"], [78, 3, 1, "", "crow_indices"], [78, 3, 1, "", "cuda"], [78, 3, 1, "", "cummax"], [78, 3, 1, "", "cummin"], [78, 3, 1, "", "cumprod"], [78, 3, 1, "", "cumprod_"], [78, 3, 1, "", "cumsum"], [78, 3, 1, "", "cumsum_"], [78, 3, 1, "", "data_ptr"], [78, 3, 1, "", "deg2rad"], [78, 3, 1, "", "deg2rad_"], [78, 3, 1, "", "dense_dim"], [78, 3, 1, "", "dequantize"], [78, 3, 1, "", "det"], [78, 3, 1, "", "detach"], [78, 3, 1, "", "detach_"], [78, 2, 1, "", "device"], [78, 3, 1, "", "diag"], [78, 3, 1, "", "diag_embed"], [78, 3, 1, "", "diagflat"], [78, 3, 1, "", "diagonal"], [78, 3, 1, "", "diagonal_scatter"], [78, 3, 1, "", "diff"], [78, 3, 1, "", "digamma"], [78, 3, 1, "", "digamma_"], [78, 3, 1, "", "dim"], [78, 3, 1, "", "dim_order"], [78, 3, 1, "", "dist"], [78, 3, 1, "", "div"], [78, 3, 1, "", "div_"], [78, 3, 1, "", "divide"], [78, 3, 1, "", "divide_"], [78, 3, 1, "", "dot"], [78, 3, 1, "", "double"], [78, 3, 1, "", "dsplit"], [78, 3, 1, "", "element_size"], [78, 3, 1, "", "eq"], [78, 3, 1, "", "eq_"], [78, 3, 1, "", "equal"], [78, 3, 1, "", "erf"], [78, 3, 1, "", "erf_"], [78, 3, 1, "", "erfc"], [78, 3, 1, "", "erfc_"], [78, 3, 1, "", "erfinv"], [78, 3, 1, "", "erfinv_"], [78, 3, 1, "", "exp"], [78, 3, 1, "", "exp2"], [78, 3, 1, "", "exp2_"], [78, 3, 1, "", "exp_"], [78, 3, 1, "", "expand"], [78, 3, 1, "", "expand_as"], [78, 3, 1, "", "expm1"], [78, 3, 1, "", "expm1_"], [78, 3, 1, "", "exponential_"], [78, 3, 1, "", "fill_"], [78, 3, 1, "", "fill_diagonal_"], [78, 3, 1, "", "fix"], [78, 3, 1, "", "fix_"], [78, 3, 1, "", "flatten"], [78, 3, 1, "", "flip"], [78, 3, 1, "", "fliplr"], [78, 3, 1, "", "flipud"], [78, 3, 1, "", "float"], [78, 3, 1, "", "float_power"], [78, 3, 1, "", "float_power_"], [78, 3, 1, "", "floor"], [78, 3, 1, "", "floor_"], [78, 3, 1, "", "floor_divide"], [78, 3, 1, "", "floor_divide_"], [78, 3, 1, "", "fmax"], [78, 3, 1, "", "fmin"], [78, 3, 1, "", "fmod"], [78, 3, 1, "", "fmod_"], [78, 3, 1, "", "frac"], [78, 3, 1, "", "frac_"], [78, 3, 1, "", "frexp"], [78, 3, 1, "", "gather"], [78, 3, 1, "", "gcd"], [78, 3, 1, "", "gcd_"], [78, 3, 1, "", "ge"], [78, 3, 1, "", "ge_"], [78, 3, 1, "", "geometric_"], [78, 3, 1, "", "geqrf"], [78, 3, 1, "", "ger"], [78, 3, 1, "", "get_device"], [78, 2, 1, "", "grad"], [78, 3, 1, "", "greater"], [78, 3, 1, "", "greater_"], [78, 3, 1, "", "greater_equal"], [78, 3, 1, "", "greater_equal_"], [78, 3, 1, "", "gt"], [78, 3, 1, "", "gt_"], [78, 3, 1, "", "half"], [78, 3, 1, "", "hardshrink"], [78, 3, 1, "", "has_names"], [78, 3, 1, "", "heaviside"], [78, 3, 1, "", "heaviside_"], [78, 3, 1, "", "histc"], [78, 3, 1, "", "histogram"], [78, 3, 1, "", "hsplit"], [78, 3, 1, "", "hypot"], [78, 3, 1, "", "hypot_"], [78, 3, 1, "", "i0"], [78, 3, 1, "", "i0_"], [78, 3, 1, "", "igamma"], [78, 3, 1, "", "igamma_"], [78, 3, 1, "", "igammac"], [78, 3, 1, "", "igammac_"], [78, 2, 1, "", "imag"], [78, 3, 1, "", "index_add"], [78, 3, 1, "", "index_add_"], [78, 3, 1, "", "index_copy"], [78, 3, 1, "", "index_copy_"], [78, 3, 1, "", "index_fill"], [78, 3, 1, "", "index_fill_"], [78, 3, 1, "", "index_put"], [78, 3, 1, "", "index_put_"], [78, 3, 1, "", "index_reduce_"], [78, 3, 1, "", "index_select"], [78, 3, 1, "", "indices"], [78, 3, 1, "", "inner"], [78, 3, 1, "", "int"], [78, 3, 1, "", "int_repr"], [78, 3, 1, "", "inverse"], [78, 3, 1, "", "ipu"], [78, 3, 1, "", "is_coalesced"], [78, 3, 1, "", "is_complex"], [78, 3, 1, "", "is_conj"], [78, 3, 1, "", "is_contiguous"], [78, 2, 1, "", "is_cpu"], [78, 2, 1, "", "is_cuda"], [78, 3, 1, "", "is_floating_point"], [78, 3, 1, "", "is_inference"], [78, 2, 1, "", "is_ipu"], [78, 2, 1, "", "is_leaf"], [78, 2, 1, "", "is_meta"], [78, 2, 1, "", "is_mps"], [78, 3, 1, "", "is_neg"], [78, 3, 1, "", "is_pinned"], [78, 2, 1, "", "is_quantized"], [78, 3, 1, "", "is_set_to"], [78, 3, 1, "", "is_shared"], [78, 3, 1, "", "is_signed"], [78, 2, 1, "", "is_sparse"], [78, 2, 1, "", "is_sparse_csr"], [78, 2, 1, "", "is_xla"], [78, 2, 1, "", "is_xpu"], [78, 3, 1, "", "isclose"], [78, 3, 1, "", "isfinite"], [78, 3, 1, "", "isinf"], [78, 3, 1, "", "isnan"], [78, 3, 1, "", "isneginf"], [78, 3, 1, "", "isposinf"], [78, 3, 1, "", "isreal"], [78, 3, 1, "", "istft"], [78, 3, 1, "", "item"], [78, 2, 1, "", "itemsize"], [78, 3, 1, "", "kron"], [78, 3, 1, "", "kthvalue"], [78, 3, 1, "", "lcm"], [78, 3, 1, "", "lcm_"], [78, 3, 1, "", "ldexp"], [78, 3, 1, "", "ldexp_"], [78, 3, 1, "", "le"], [78, 3, 1, "", "le_"], [78, 3, 1, "", "lerp"], [78, 3, 1, "", "lerp_"], [78, 3, 1, "", "less"], [78, 3, 1, "", "less_"], [78, 3, 1, "", "less_equal"], [78, 3, 1, "", "less_equal_"], [78, 3, 1, "", "lgamma"], [78, 3, 1, "", "lgamma_"], [78, 3, 1, "", "log"], [78, 3, 1, "", "log10"], [78, 3, 1, "", "log10_"], [78, 3, 1, "", "log1p"], [78, 3, 1, "", "log1p_"], [78, 3, 1, "", "log2"], [78, 3, 1, "", "log2_"], [78, 3, 1, "", "log_"], [78, 3, 1, "", "log_normal_"], [78, 3, 1, "", "logaddexp"], [78, 3, 1, "", "logaddexp2"], [78, 3, 1, "", "logcumsumexp"], [78, 3, 1, "", "logdet"], [78, 3, 1, "", "logical_and"], [78, 3, 1, "", "logical_and_"], [78, 3, 1, "", "logical_not"], [78, 3, 1, "", "logical_not_"], [78, 3, 1, "", "logical_or"], [78, 3, 1, "", "logical_or_"], [78, 3, 1, "", "logical_xor"], [78, 3, 1, "", "logical_xor_"], [78, 3, 1, "", "logit"], [78, 3, 1, "", "logit_"], [78, 3, 1, "", "logsumexp"], [78, 3, 1, "", "long"], [78, 3, 1, "", "lt"], [78, 3, 1, "", "lt_"], [78, 3, 1, "", "lu"], [78, 3, 1, "", "lu_solve"], [78, 2, 1, "", "mH"], [78, 2, 1, "", "mT"], [78, 3, 1, "", "map_"], [78, 3, 1, "", "masked_fill"], [78, 3, 1, "", "masked_fill_"], [78, 3, 1, "", "masked_scatter"], [78, 3, 1, "", "masked_scatter_"], [78, 3, 1, "", "masked_select"], [78, 3, 1, "", "matmul"], [78, 3, 1, "", "matrix_exp"], [78, 3, 1, "", "matrix_power"], [78, 3, 1, "", "max"], [78, 3, 1, "", "maximum"], [78, 3, 1, "", "mean"], [78, 3, 1, "", "median"], [78, 3, 1, "", "min"], [78, 3, 1, "", "minimum"], [78, 3, 1, "", "mm"], [78, 3, 1, "", "mode"], [78, 3, 1, "", "module_load"], [78, 3, 1, "", "moveaxis"], [78, 3, 1, "", "movedim"], [78, 3, 1, "", "msort"], [78, 3, 1, "", "mtia"], [78, 3, 1, "", "mul"], [78, 3, 1, "", "mul_"], [78, 3, 1, "", "multinomial"], [78, 3, 1, "", "multiply"], [78, 3, 1, "", "multiply_"], [78, 3, 1, "", "mv"], [78, 3, 1, "", "mvlgamma"], [78, 3, 1, "", "mvlgamma_"], [78, 2, 1, "", "names"], [78, 3, 1, "", "nan_to_num"], [78, 3, 1, "", "nan_to_num_"], [78, 3, 1, "", "nanmean"], [78, 3, 1, "", "nanmedian"], [78, 3, 1, "", "nanquantile"], [78, 3, 1, "", "nansum"], [78, 3, 1, "", "narrow"], [78, 3, 1, "", "narrow_copy"], [78, 2, 1, "", "nbytes"], [78, 2, 1, "", "ndim"], [78, 3, 1, "", "ndimension"], [78, 3, 1, "", "ne"], [78, 3, 1, "", "ne_"], [78, 3, 1, "", "neg"], [78, 3, 1, "", "neg_"], [78, 3, 1, "", "negative"], [78, 3, 1, "", "negative_"], [78, 3, 1, "", "nelement"], [78, 3, 1, "", "new_empty"], [78, 3, 1, "", "new_empty_strided"], [78, 3, 1, "", "new_full"], [78, 3, 1, "", "new_ones"], [78, 3, 1, "", "new_tensor"], [78, 3, 1, "", "new_zeros"], [78, 3, 1, "", "nextafter"], [78, 3, 1, "", "nextafter_"], [78, 3, 1, "", "nonzero"], [78, 3, 1, "", "nonzero_static"], [78, 3, 1, "", "norm"], [78, 3, 1, "", "normal_"], [78, 3, 1, "", "not_equal"], [78, 3, 1, "", "not_equal_"], [78, 3, 1, "", "numel"], [78, 3, 1, "", "numpy"], [78, 3, 1, "", "orgqr"], [78, 3, 1, "", "ormqr"], [78, 3, 1, "", "outer"], [78, 3, 1, "", "permute"], [78, 3, 1, "", "pin_memory"], [78, 3, 1, "", "pinverse"], [78, 3, 1, "", "polygamma"], [78, 3, 1, "", "polygamma_"], [78, 3, 1, "", "positive"], [78, 3, 1, "", "pow"], [78, 3, 1, "", "pow_"], [78, 3, 1, "", "prod"], [78, 3, 1, "", "put"], [78, 3, 1, "", "put_"], [78, 3, 1, "", "q_per_channel_axis"], [78, 3, 1, "", "q_per_channel_scales"], [78, 3, 1, "", "q_per_channel_zero_points"], [78, 3, 1, "", "q_scale"], [78, 3, 1, "", "q_zero_point"], [78, 3, 1, "", "qr"], [78, 3, 1, "", "qscheme"], [78, 3, 1, "", "quantile"], [78, 3, 1, "", "rad2deg"], [78, 3, 1, "", "rad2deg_"], [78, 3, 1, "", "random_"], [78, 3, 1, "", "ravel"], [78, 2, 1, "", "real"], [78, 3, 1, "", "reciprocal"], [78, 3, 1, "", "reciprocal_"], [78, 3, 1, "", "record_stream"], [78, 3, 1, "", "refine_names"], [78, 3, 1, "", "register_hook"], [78, 3, 1, "", "register_post_accumulate_grad_hook"], [78, 3, 1, "", "remainder"], [78, 3, 1, "", "remainder_"], [78, 3, 1, "", "rename"], [78, 3, 1, "", "rename_"], [78, 3, 1, "", "renorm"], [78, 3, 1, "", "renorm_"], [78, 3, 1, "", "repeat"], [78, 3, 1, "", "repeat_interleave"], [78, 2, 1, "", "requires_grad"], [78, 3, 1, "", "requires_grad_"], [78, 3, 1, "", "reshape"], [78, 3, 1, "", "reshape_as"], [78, 3, 1, "", "resize_"], [78, 3, 1, "", "resize_as_"], [78, 3, 1, "", "resolve_conj"], [78, 3, 1, "", "resolve_neg"], [78, 3, 1, "", "retain_grad"], [78, 2, 1, "", "retains_grad"], [78, 3, 1, "", "roll"], [78, 3, 1, "", "rot90"], [78, 3, 1, "", "round"], [78, 3, 1, "", "round_"], [78, 3, 1, "", "rsqrt"], [78, 3, 1, "", "rsqrt_"], [78, 3, 1, "", "scatter"], [78, 3, 1, "", "scatter_"], [78, 3, 1, "", "scatter_add"], [78, 3, 1, "", "scatter_add_"], [78, 3, 1, "", "scatter_reduce"], [78, 3, 1, "", "scatter_reduce_"], [78, 3, 1, "", "select"], [78, 3, 1, "", "select_scatter"], [78, 3, 1, "", "set_"], [78, 3, 1, "", "sgn"], [78, 3, 1, "", "sgn_"], [78, 2, 1, "", "shape"], [78, 3, 1, "", "share_memory_"], [78, 3, 1, "", "short"], [78, 3, 1, "", "sigmoid"], [78, 3, 1, "", "sigmoid_"], [78, 3, 1, "", "sign"], [78, 3, 1, "", "sign_"], [78, 3, 1, "", "signbit"], [78, 3, 1, "", "sin"], [78, 3, 1, "", "sin_"], [78, 3, 1, "", "sinc"], [78, 3, 1, "", "sinc_"], [78, 3, 1, "", "sinh"], [78, 3, 1, "", "sinh_"], [78, 3, 1, "", "size"], [78, 3, 1, "", "slice_scatter"], [78, 3, 1, "", "slogdet"], [78, 3, 1, "", "smm"], [78, 3, 1, "", "softmax"], [78, 3, 1, "", "sort"], [78, 3, 1, "", "sparse_dim"], [78, 3, 1, "", "sparse_mask"], [78, 3, 1, "", "sparse_resize_"], [78, 3, 1, "", "sparse_resize_and_clear_"], [78, 3, 1, "", "split"], [78, 3, 1, "", "sqrt"], [78, 3, 1, "", "sqrt_"], [78, 3, 1, "", "square"], [78, 3, 1, "", "square_"], [78, 3, 1, "", "squeeze"], [78, 3, 1, "", "squeeze_"], [78, 3, 1, "", "sspaddmm"], [78, 3, 1, "", "std"], [78, 3, 1, "", "stft"], [78, 3, 1, "", "storage"], [78, 3, 1, "", "storage_offset"], [78, 3, 1, "", "storage_type"], [78, 3, 1, "", "stride"], [78, 3, 1, "", "sub"], [78, 3, 1, "", "sub_"], [78, 3, 1, "", "subtract"], [78, 3, 1, "", "subtract_"], [78, 3, 1, "", "sum"], [78, 3, 1, "", "sum_to_size"], [78, 3, 1, "", "svd"], [78, 3, 1, "", "swapaxes"], [78, 3, 1, "", "swapaxes_"], [78, 3, 1, "", "swapdims"], [78, 3, 1, "", "swapdims_"], [78, 3, 1, "", "t"], [78, 3, 1, "", "t_"], [78, 3, 1, "", "take"], [78, 3, 1, "", "take_along_dim"], [78, 3, 1, "", "tan"], [78, 3, 1, "", "tan_"], [78, 3, 1, "", "tanh"], [78, 3, 1, "", "tanh_"], [78, 3, 1, "", "tensor_split"], [78, 3, 1, "", "tile"], [78, 3, 1, "", "to"], [78, 3, 1, "", "to_dense"], [78, 3, 1, "", "to_mkldnn"], [78, 3, 1, "", "to_padded_tensor"], [78, 3, 1, "", "to_sparse"], [78, 3, 1, "", "to_sparse_bsc"], [78, 3, 1, "", "to_sparse_bsr"], [78, 3, 1, "", "to_sparse_coo"], [78, 3, 1, "", "to_sparse_csc"], [78, 3, 1, "", "to_sparse_csr"], [78, 3, 1, "", "tolist"], [78, 3, 1, "", "topk"], [78, 3, 1, "", "trace"], [78, 3, 1, "", "transpose"], [78, 3, 1, "", "transpose_"], [78, 3, 1, "", "triangular_solve"], [78, 3, 1, "", "tril"], [78, 3, 1, "", "tril_"], [78, 3, 1, "", "triu"], [78, 3, 1, "", "triu_"], [78, 3, 1, "", "true_divide"], [78, 3, 1, "", "true_divide_"], [78, 3, 1, "", "trunc"], [78, 3, 1, "", "trunc_"], [78, 3, 1, "", "type"], [78, 3, 1, "", "type_as"], [78, 3, 1, "", "unbind"], [78, 3, 1, "", "unflatten"], [78, 3, 1, "", "unfold"], [78, 3, 1, "", "uniform_"], [78, 3, 1, "", "unique"], [78, 3, 1, "", "unique_consecutive"], [78, 3, 1, "", "unsafe_chunk"], [78, 3, 1, "", "unsafe_split"], [78, 3, 1, "", "unsqueeze"], [78, 3, 1, "", "unsqueeze_"], [78, 3, 1, "", "untyped_storage"], [78, 3, 1, "", "values"], [78, 3, 1, "", "var"], [78, 3, 1, "", "vdot"], [78, 3, 1, "", "view"], [78, 3, 1, "", "view_as"], [78, 3, 1, "", "vsplit"], [78, 3, 1, "", "where"], [78, 3, 1, "", "xlogy"], [78, 3, 1, "", "xlogy_"], [78, 3, 1, "", "xpu"], [78, 3, 1, "", "zero_"]], "unit_scaling.scale": [[81, 4, 1, "", "scale_bwd"], [82, 4, 1, "", "scale_fwd"]], "unit_scaling.transforms": [[85, 1, 1, "", "Metrics"], [86, 4, 1, "", "compile"], [87, 4, 1, "", "prune_non_float_tensors"], [88, 4, 1, "", "prune_same_scale_tensors"], [89, 4, 1, "", "prune_selected_nodes"], [90, 4, 1, "", "simulate_format"], [91, 4, 1, "", "simulate_fp8"], [92, 4, 1, "", "track_scales"], [93, 4, 1, "", "unit_scale"], [94, 0, 0, "-", "utils"]], "unit_scaling.transforms.Metrics": [[85, 1, 1, "", "Data"]], "unit_scaling.transforms.utils": [[95, 4, 1, "", "apply_transform"], [96, 4, 1, "", "patch_to_expand_modules"], [97, 4, 1, "", "replace_node_with_function"], [98, 4, 1, "", "torch_nn_modules_to_user_modules"]], "unit_scaling.utils": [[100, 1, 1, "", "ScalePair"], [101, 1, 1, "", "ScaleTracker"], [102, 1, 1, "", "ScaleTrackingInterpreter"], [103, 4, 1, "", "analyse_module"]], "unit_scaling.utils.ScaleTracker": [[101, 3, 1, "", "backward"], [101, 3, 1, "", "jvp"], [101, 3, 1, "", "mark_dirty"], [101, 3, 1, "", "mark_non_differentiable"], [101, 3, 1, "", "save_for_backward"], [101, 3, 1, "", "save_for_forward"], [101, 3, 1, "", "set_materialize_grads"], [101, 3, 1, "", "setup_context"], [101, 3, 1, "", "vjp"], [101, 3, 1, "", "vmap"]], "unit_scaling.utils.ScaleTrackingInterpreter": [[102, 3, 1, "", "boxed_run"], [102, 3, 1, "", "call_function"], [102, 3, 1, "", "call_method"], [102, 3, 1, "", "call_module"], [102, 3, 1, "", "fetch_args_kwargs_from_env"], [102, 3, 1, "", "fetch_attr"], [102, 3, 1, "", "get_attr"], [102, 3, 1, "", "map_nodes_to_values"], [102, 3, 1, "", "output"], [102, 3, 1, "", "placeholder"], [102, 3, 1, "", "run"], [102, 3, 1, "", "run_node"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": 0, "develop": [1, 105], "unit_sc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "conv1d": [3, 47], "crossentropyloss": 4, "depthmodulelist": 5, "depthsequenti": 6, "dropout": [7, 49], "embed": [8, 50], "gelu": [9, 51], "layernorm": 10, "linear": [11, 53], "linearreadout": 12, "mhsa": 13, "mlp": 14, "paramet": [15, 73, 74, 75, 76, 77, 78, 79], "rmsnorm": 16, "silu": [17, 62], "softmax": [18, 64], "transformerdecod": 19, "transformerlay": 20, "analysi": [21, 22, 23, 24, 25], "example_batch": 22, "graph_to_datafram": 23, "plot": 24, "visualis": [25, 104], "constraint": [26, 27, 28, 29, 30, 31, 32, 33, 34], "amean": 27, "apply_constraint": 28, "gmean": 29, "hmean": 30, "to_grad_input_scal": 31, "to_left_grad_scal": 32, "to_output_scal": 33, "to_right_grad_scal": 34, "core": [35, 36, 37, 38, 39, 40], "function": [36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "logarithmic_interpol": 37, "rm": 38, "scale_elementwis": 39, "transformer_residual_scaling_rul": [40, 83], "format": [41, 42, 43, 44], "fpformat": 42, "format_to_tupl": 43, "tuple_to_format": 44, "add": 46, "cross_entropi": 48, "layer_norm": 52, "linear_readout": 54, "matmul": 55, "mse_loss": 56, "residual_add": 57, "residual_appli": 58, "residual_split": 59, "rms_norm": 60, "scaled_dot_product_attent": 61, "silu_glu": 63, "optim": [65, 66, 67, 68, 69, 70, 71, 72], "adam": 66, "adamw": 67, "sgd": 68, "lr_scale_for_depth": 69, "lr_scale_func_adam": 70, "lr_scale_func_sgd": 71, "scaled_paramet": 72, "ordereddict": 74, "parameterdata": 76, "protocol": 77, "tensor": 78, "has_parameter_data": 79, "scale": [80, 81, 82, 105, 107, 108], "scale_bwd": 81, "scale_fwd": 82, "transform": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "metric": 85, "compil": 86, "prune_non_float_tensor": 87, "prune_same_scale_tensor": 88, "prune_selected_nod": 89, "simulate_format": 90, "simulate_fp8": 91, "track_scal": 92, "unit_scal": 93, "util": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "apply_transform": 95, "patch_to_expand_modul": 96, "replace_node_with_funct": 97, "torch_nn_modules_to_user_modul": 98, "scalepair": 100, "scaletrack": 101, "scaletrackinginterpret": 102, "analyse_modul": 103, "unit": [105, 108], "instal": [105, 108], "get": 105, "start": 105, "content": 105, "limit": 106, "almost": 107, "dot": 107, "product": 107, "attent": 107, "user": 108, "guid": 108, "what": 108, "i": 108, "how": 108, "model": 108, "kei": 108, "consider": 108, "optimis": 108}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API reference": [[0, "api-reference"]], "Development": [[1, "development"], [105, "development"]], "unit_scaling": [[2, "module-unit_scaling"]], "unit_scaling.Conv1d": [[3, "unit-scaling-conv1d"]], "unit_scaling.CrossEntropyLoss": [[4, "unit-scaling-crossentropyloss"]], "unit_scaling.DepthModuleList": [[5, "unit-scaling-depthmodulelist"]], "unit_scaling.DepthSequential": [[6, "unit-scaling-depthsequential"]], "unit_scaling.Dropout": [[7, "unit-scaling-dropout"]], "unit_scaling.Embedding": [[8, "unit-scaling-embedding"]], "unit_scaling.GELU": [[9, "unit-scaling-gelu"]], "unit_scaling.LayerNorm": [[10, "unit-scaling-layernorm"]], "unit_scaling.Linear": [[11, "unit-scaling-linear"]], "unit_scaling.LinearReadout": [[12, "unit-scaling-linearreadout"]], "unit_scaling.MHSA": [[13, "unit-scaling-mhsa"]], "unit_scaling.MLP": [[14, "unit-scaling-mlp"]], "unit_scaling.Parameter": [[15, "unit-scaling-parameter"]], "unit_scaling.RMSNorm": [[16, "unit-scaling-rmsnorm"]], "unit_scaling.SiLU": [[17, "unit-scaling-silu"]], "unit_scaling.Softmax": [[18, "unit-scaling-softmax"]], "unit_scaling.TransformerDecoder": [[19, "unit-scaling-transformerdecoder"]], "unit_scaling.TransformerLayer": [[20, "unit-scaling-transformerlayer"]], "unit_scaling.analysis": [[21, "module-unit_scaling.analysis"]], "unit_scaling.analysis.example_batch": [[22, "unit-scaling-analysis-example-batch"]], "unit_scaling.analysis.graph_to_dataframe": [[23, "unit-scaling-analysis-graph-to-dataframe"]], "unit_scaling.analysis.plot": [[24, "unit-scaling-analysis-plot"]], "unit_scaling.analysis.visualiser": [[25, "unit-scaling-analysis-visualiser"]], "unit_scaling.constraints": [[26, "module-unit_scaling.constraints"]], "unit_scaling.constraints.amean": [[27, "unit-scaling-constraints-amean"]], "unit_scaling.constraints.apply_constraint": [[28, "unit-scaling-constraints-apply-constraint"]], "unit_scaling.constraints.gmean": [[29, "unit-scaling-constraints-gmean"]], "unit_scaling.constraints.hmean": [[30, "unit-scaling-constraints-hmean"]], "unit_scaling.constraints.to_grad_input_scale": [[31, "unit-scaling-constraints-to-grad-input-scale"]], "unit_scaling.constraints.to_left_grad_scale": [[32, "unit-scaling-constraints-to-left-grad-scale"]], "unit_scaling.constraints.to_output_scale": [[33, "unit-scaling-constraints-to-output-scale"]], "unit_scaling.constraints.to_right_grad_scale": [[34, "unit-scaling-constraints-to-right-grad-scale"]], "unit_scaling.core": [[35, "module-unit_scaling.core"]], "unit_scaling.core.functional": [[36, "module-unit_scaling.core.functional"]], "unit_scaling.core.functional.logarithmic_interpolation": [[37, "unit-scaling-core-functional-logarithmic-interpolation"]], "unit_scaling.core.functional.rms": [[38, "unit-scaling-core-functional-rms"]], "unit_scaling.core.functional.scale_elementwise": [[39, "unit-scaling-core-functional-scale-elementwise"]], "unit_scaling.core.functional.transformer_residual_scaling_rule": [[40, "unit-scaling-core-functional-transformer-residual-scaling-rule"]], "unit_scaling.formats": [[41, "module-unit_scaling.formats"]], "unit_scaling.formats.FPFormat": [[42, "unit-scaling-formats-fpformat"]], "unit_scaling.formats.format_to_tuple": [[43, "unit-scaling-formats-format-to-tuple"]], "unit_scaling.formats.tuple_to_format": [[44, "unit-scaling-formats-tuple-to-format"]], "unit_scaling.functional": [[45, "module-unit_scaling.functional"]], "unit_scaling.functional.add": [[46, "unit-scaling-functional-add"]], "unit_scaling.functional.conv1d": [[47, "unit-scaling-functional-conv1d"]], "unit_scaling.functional.cross_entropy": [[48, "unit-scaling-functional-cross-entropy"]], "unit_scaling.functional.dropout": [[49, "unit-scaling-functional-dropout"]], "unit_scaling.functional.embedding": [[50, "unit-scaling-functional-embedding"]], "unit_scaling.functional.gelu": [[51, "unit-scaling-functional-gelu"]], "unit_scaling.functional.layer_norm": [[52, "unit-scaling-functional-layer-norm"]], "unit_scaling.functional.linear": [[53, "unit-scaling-functional-linear"]], "unit_scaling.functional.linear_readout": [[54, "unit-scaling-functional-linear-readout"]], "unit_scaling.functional.matmul": [[55, "unit-scaling-functional-matmul"]], "unit_scaling.functional.mse_loss": [[56, "unit-scaling-functional-mse-loss"]], "unit_scaling.functional.residual_add": [[57, "unit-scaling-functional-residual-add"]], "unit_scaling.functional.residual_apply": [[58, "unit-scaling-functional-residual-apply"]], "unit_scaling.functional.residual_split": [[59, "unit-scaling-functional-residual-split"]], "unit_scaling.functional.rms_norm": [[60, "unit-scaling-functional-rms-norm"]], "unit_scaling.functional.scaled_dot_product_attention": [[61, "unit-scaling-functional-scaled-dot-product-attention"]], "unit_scaling.functional.silu": [[62, "unit-scaling-functional-silu"]], "unit_scaling.functional.silu_glu": [[63, "unit-scaling-functional-silu-glu"]], "unit_scaling.functional.softmax": [[64, "unit-scaling-functional-softmax"]], "unit_scaling.optim": [[65, "module-unit_scaling.optim"]], "unit_scaling.optim.Adam": [[66, "unit-scaling-optim-adam"]], "unit_scaling.optim.AdamW": [[67, "unit-scaling-optim-adamw"]], "unit_scaling.optim.SGD": [[68, "unit-scaling-optim-sgd"]], "unit_scaling.optim.lr_scale_for_depth": [[69, "unit-scaling-optim-lr-scale-for-depth"]], "unit_scaling.optim.lr_scale_func_adam": [[70, "unit-scaling-optim-lr-scale-func-adam"]], "unit_scaling.optim.lr_scale_func_sgd": [[71, "unit-scaling-optim-lr-scale-func-sgd"]], "unit_scaling.optim.scaled_parameters": [[72, "unit-scaling-optim-scaled-parameters"]], "unit_scaling.parameter": [[73, "module-unit_scaling.parameter"]], "unit_scaling.parameter.OrderedDict": [[74, "unit-scaling-parameter-ordereddict"]], "unit_scaling.parameter.Parameter": [[75, "unit-scaling-parameter-parameter"]], "unit_scaling.parameter.ParameterData": [[76, "unit-scaling-parameter-parameterdata"]], "unit_scaling.parameter.Protocol": [[77, "unit-scaling-parameter-protocol"]], "unit_scaling.parameter.Tensor": [[78, "unit-scaling-parameter-tensor"]], "unit_scaling.parameter.has_parameter_data": [[79, "unit-scaling-parameter-has-parameter-data"]], "unit_scaling.scale": [[80, "module-unit_scaling.scale"]], "unit_scaling.scale.scale_bwd": [[81, "unit-scaling-scale-scale-bwd"]], "unit_scaling.scale.scale_fwd": [[82, "unit-scaling-scale-scale-fwd"]], "unit_scaling.transformer_residual_scaling_rule": [[83, "unit-scaling-transformer-residual-scaling-rule"]], "unit_scaling.transforms": [[84, "module-unit_scaling.transforms"]], "unit_scaling.transforms.Metrics": [[85, "unit-scaling-transforms-metrics"]], "unit_scaling.transforms.compile": [[86, "unit-scaling-transforms-compile"]], "unit_scaling.transforms.prune_non_float_tensors": [[87, "unit-scaling-transforms-prune-non-float-tensors"]], "unit_scaling.transforms.prune_same_scale_tensors": [[88, "unit-scaling-transforms-prune-same-scale-tensors"]], "unit_scaling.transforms.prune_selected_nodes": [[89, "unit-scaling-transforms-prune-selected-nodes"]], "unit_scaling.transforms.simulate_format": [[90, "unit-scaling-transforms-simulate-format"]], "unit_scaling.transforms.simulate_fp8": [[91, "unit-scaling-transforms-simulate-fp8"]], "unit_scaling.transforms.track_scales": [[92, "unit-scaling-transforms-track-scales"]], "unit_scaling.transforms.unit_scale": [[93, "unit-scaling-transforms-unit-scale"]], "unit_scaling.transforms.utils": [[94, "module-unit_scaling.transforms.utils"]], "unit_scaling.transforms.utils.apply_transform": [[95, "unit-scaling-transforms-utils-apply-transform"]], "unit_scaling.transforms.utils.patch_to_expand_modules": [[96, "unit-scaling-transforms-utils-patch-to-expand-modules"]], "unit_scaling.transforms.utils.replace_node_with_function": [[97, "unit-scaling-transforms-utils-replace-node-with-function"]], "unit_scaling.transforms.utils.torch_nn_modules_to_user_modules": [[98, "unit-scaling-transforms-utils-torch-nn-modules-to-user-modules"]], "unit_scaling.utils": [[99, "module-unit_scaling.utils"]], "unit_scaling.utils.ScalePair": [[100, "unit-scaling-utils-scalepair"]], "unit_scaling.utils.ScaleTracker": [[101, "unit-scaling-utils-scaletracker"]], "unit_scaling.utils.ScaleTrackingInterpreter": [[102, "unit-scaling-utils-scaletrackinginterpreter"]], "unit_scaling.utils.analyse_module": [[103, "unit-scaling-utils-analyse-module"]], "unit_scaling.visualiser": [[104, "unit-scaling-visualiser"]], "Unit Scaling": [[105, "unit-scaling"]], "Installation": [[105, "installation"], [108, "installation"]], "Getting Started": [[105, "getting-started"]], "Contents": [[105, null]], "Limitations": [[106, "limitations"]], "Almost-scaled dot-product attention": [[107, "almost-scaled-dot-product-attention"]], "User guide": [[108, "user-guide"]], "What is unit scaling?": [[108, "what-is-unit-scaling"]], "How to unit-scale a model": [[108, "how-to-unit-scale-a-model"]], "Key considerations for unit scaling": [[108, "key-considerations-for-unit-scaling"]], "Optimising unit-scaled models": [[108, "optimising-unit-scaled-models"]]}, "indexentries": {"module": [[2, "module-unit_scaling"], [21, "module-unit_scaling.analysis"], [26, "module-unit_scaling.constraints"], [35, "module-unit_scaling.core"], [36, "module-unit_scaling.core.functional"], [41, "module-unit_scaling.formats"], [45, "module-unit_scaling.functional"], [65, "module-unit_scaling.optim"], [73, "module-unit_scaling.parameter"], [80, "module-unit_scaling.scale"], [84, "module-unit_scaling.transforms"], [94, "module-unit_scaling.transforms.utils"], [99, "module-unit_scaling.utils"]], "unit_scaling": [[2, "module-unit_scaling"]], "conv1d (class in unit_scaling)": [[3, "unit_scaling.Conv1d"]], "bias (unit_scaling.conv1d attribute)": [[3, "unit_scaling.Conv1d.bias"]], "weight (unit_scaling.conv1d attribute)": [[3, "unit_scaling.Conv1d.weight"]], "crossentropyloss (class in unit_scaling)": [[4, "unit_scaling.CrossEntropyLoss"]], "depthmodulelist (class in unit_scaling)": [[5, "unit_scaling.DepthModuleList"]], "append() (unit_scaling.depthmodulelist method)": [[5, "unit_scaling.DepthModuleList.append"]], "extend() (unit_scaling.depthmodulelist method)": [[5, "unit_scaling.DepthModuleList.extend"]], "insert() (unit_scaling.depthmodulelist method)": [[5, "unit_scaling.DepthModuleList.insert"]], "depthsequential (class in unit_scaling)": [[6, "unit_scaling.DepthSequential"]], "append() (unit_scaling.depthsequential method)": [[6, "unit_scaling.DepthSequential.append"]], "dropout (class in unit_scaling)": [[7, "unit_scaling.Dropout"]], "embedding (class in unit_scaling)": [[8, "unit_scaling.Embedding"]], "from_pretrained() (unit_scaling.embedding class method)": [[8, "unit_scaling.Embedding.from_pretrained"]], "weight (unit_scaling.embedding attribute)": [[8, "unit_scaling.Embedding.weight"]], "gelu (class in unit_scaling)": [[9, "unit_scaling.GELU"]], "layernorm (class in unit_scaling)": [[10, "unit_scaling.LayerNorm"]], "bias (unit_scaling.layernorm attribute)": [[10, "unit_scaling.LayerNorm.bias"]], "weight (unit_scaling.layernorm attribute)": [[10, "unit_scaling.LayerNorm.weight"]], "linear (class in unit_scaling)": [[11, "unit_scaling.Linear"]], "bias (unit_scaling.linear attribute)": [[11, "unit_scaling.Linear.bias"]], "weight (unit_scaling.linear attribute)": [[11, "unit_scaling.Linear.weight"]], "linearreadout (class in unit_scaling)": [[12, "unit_scaling.LinearReadout"]], "bias (unit_scaling.linearreadout attribute)": [[12, "unit_scaling.LinearReadout.bias"]], "weight (unit_scaling.linearreadout attribute)": [[12, "unit_scaling.LinearReadout.weight"]], "mhsa (class in unit_scaling)": [[13, "unit_scaling.MHSA"]], "mlp (class in unit_scaling)": [[14, "unit_scaling.MLP"]], "parameter() (in module unit_scaling)": [[15, "unit_scaling.Parameter"]], "rmsnorm (class in unit_scaling)": [[16, "unit_scaling.RMSNorm"]], "weight (unit_scaling.rmsnorm attribute)": [[16, "unit_scaling.RMSNorm.weight"]], "silu (class in unit_scaling)": [[17, "unit_scaling.SiLU"]], "softmax (class in unit_scaling)": [[18, "unit_scaling.Softmax"]], "transformerdecoder (class in unit_scaling)": [[19, "unit_scaling.TransformerDecoder"]], "append() (unit_scaling.transformerdecoder method)": [[19, "unit_scaling.TransformerDecoder.append"]], "transformerlayer (class in unit_scaling)": [[20, "unit_scaling.TransformerLayer"]], "unit_scaling.analysis": [[21, "module-unit_scaling.analysis"]], "example_batch() (in module unit_scaling.analysis)": [[22, "unit_scaling.analysis.example_batch"]], "graph_to_dataframe() (in module unit_scaling.analysis)": [[23, "unit_scaling.analysis.graph_to_dataframe"]], "plot() (in module unit_scaling.analysis)": [[24, "unit_scaling.analysis.plot"]], "visualiser() (in module unit_scaling.analysis)": [[25, "unit_scaling.analysis.visualiser"]], "unit_scaling.constraints": [[26, "module-unit_scaling.constraints"]], "amean() (in module unit_scaling.constraints)": [[27, "unit_scaling.constraints.amean"]], "apply_constraint() (in module unit_scaling.constraints)": [[28, "unit_scaling.constraints.apply_constraint"]], "gmean() (in module unit_scaling.constraints)": [[29, "unit_scaling.constraints.gmean"]], "hmean() (in module unit_scaling.constraints)": [[30, "unit_scaling.constraints.hmean"]], "to_grad_input_scale() (in module unit_scaling.constraints)": [[31, "unit_scaling.constraints.to_grad_input_scale"]], "to_left_grad_scale() (in module unit_scaling.constraints)": [[32, "unit_scaling.constraints.to_left_grad_scale"]], "to_output_scale() (in module unit_scaling.constraints)": [[33, "unit_scaling.constraints.to_output_scale"]], "to_right_grad_scale() (in module unit_scaling.constraints)": [[34, "unit_scaling.constraints.to_right_grad_scale"]], "unit_scaling.core": [[35, "module-unit_scaling.core"]], "unit_scaling.core.functional": [[36, "module-unit_scaling.core.functional"]], "logarithmic_interpolation() (in module unit_scaling.core.functional)": [[37, "unit_scaling.core.functional.logarithmic_interpolation"]], "rms() (in module unit_scaling.core.functional)": [[38, "unit_scaling.core.functional.rms"]], "scale_elementwise() (in module unit_scaling.core.functional)": [[39, "unit_scaling.core.functional.scale_elementwise"]], "transformer_residual_scaling_rule() (in module unit_scaling.core.functional)": [[40, "unit_scaling.core.functional.transformer_residual_scaling_rule"]], "unit_scaling.formats": [[41, "module-unit_scaling.formats"]], "fpformat (class in unit_scaling.formats)": [[42, "unit_scaling.formats.FPFormat"]], "bits (unit_scaling.formats.fpformat property)": [[42, "unit_scaling.formats.FPFormat.bits"]], "max_absolute_value (unit_scaling.formats.fpformat property)": [[42, "unit_scaling.formats.FPFormat.max_absolute_value"]], "min_absolute_normal (unit_scaling.formats.fpformat property)": [[42, "unit_scaling.formats.FPFormat.min_absolute_normal"]], "min_absolute_subnormal (unit_scaling.formats.fpformat property)": [[42, "unit_scaling.formats.FPFormat.min_absolute_subnormal"]], "quantise() (unit_scaling.formats.fpformat method)": [[42, "unit_scaling.formats.FPFormat.quantise"]], "quantise_bwd() (unit_scaling.formats.fpformat method)": [[42, "unit_scaling.formats.FPFormat.quantise_bwd"]], "quantise_fwd() (unit_scaling.formats.fpformat method)": [[42, "unit_scaling.formats.FPFormat.quantise_fwd"]], "format_to_tuple() (in module unit_scaling.formats)": [[43, "unit_scaling.formats.format_to_tuple"]], "tuple_to_format() (in module unit_scaling.formats)": [[44, "unit_scaling.formats.tuple_to_format"]], "unit_scaling.functional": [[45, "module-unit_scaling.functional"]], "add() (in module unit_scaling.functional)": [[46, "unit_scaling.functional.add"]], "conv1d() (in module unit_scaling.functional)": [[47, "unit_scaling.functional.conv1d"]], "cross_entropy() (in module unit_scaling.functional)": [[48, "unit_scaling.functional.cross_entropy"]], "dropout() (in module unit_scaling.functional)": [[49, "unit_scaling.functional.dropout"]], "embedding() (in module unit_scaling.functional)": [[50, "unit_scaling.functional.embedding"]], "gelu() (in module unit_scaling.functional)": [[51, "unit_scaling.functional.gelu"]], "layer_norm() (in module unit_scaling.functional)": [[52, "unit_scaling.functional.layer_norm"]], "linear() (in module unit_scaling.functional)": [[53, "unit_scaling.functional.linear"]], "linear_readout() (in module unit_scaling.functional)": [[54, "unit_scaling.functional.linear_readout"]], "matmul() (in module unit_scaling.functional)": [[55, "unit_scaling.functional.matmul"]], "mse_loss() (in module unit_scaling.functional)": [[56, "unit_scaling.functional.mse_loss"]], "residual_add() (in module unit_scaling.functional)": [[57, "unit_scaling.functional.residual_add"]], "residual_apply() (in module unit_scaling.functional)": [[58, "unit_scaling.functional.residual_apply"]], "residual_split() (in module unit_scaling.functional)": [[59, "unit_scaling.functional.residual_split"]], "rms_norm() (in module unit_scaling.functional)": [[60, "unit_scaling.functional.rms_norm"]], "scaled_dot_product_attention() (in module unit_scaling.functional)": [[61, "unit_scaling.functional.scaled_dot_product_attention"]], "silu() (in module unit_scaling.functional)": [[62, "unit_scaling.functional.silu"]], "silu_glu() (in module unit_scaling.functional)": [[63, "unit_scaling.functional.silu_glu"]], "softmax() (in module unit_scaling.functional)": [[64, "unit_scaling.functional.softmax"]], "unit_scaling.optim": [[65, "module-unit_scaling.optim"]], "adam (class in unit_scaling.optim)": [[66, "unit_scaling.optim.Adam"]], "add_param_group() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.add_param_group"]], "load_state_dict() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.register_step_pre_hook"]], "state_dict() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.state_dict"]], "step() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.step"]], "zero_grad() (unit_scaling.optim.adam method)": [[66, "unit_scaling.optim.Adam.zero_grad"]], "adamw (class in unit_scaling.optim)": [[67, "unit_scaling.optim.AdamW"]], "add_param_group() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.add_param_group"]], "load_state_dict() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.register_step_pre_hook"]], "state_dict() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.state_dict"]], "step() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.step"]], "zero_grad() (unit_scaling.optim.adamw method)": [[67, "unit_scaling.optim.AdamW.zero_grad"]], "sgd (class in unit_scaling.optim)": [[68, "unit_scaling.optim.SGD"]], "add_param_group() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.add_param_group"]], "load_state_dict() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.register_step_pre_hook"]], "state_dict() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.state_dict"]], "step() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.step"]], "zero_grad() (unit_scaling.optim.sgd method)": [[68, "unit_scaling.optim.SGD.zero_grad"]], "lr_scale_for_depth() (in module unit_scaling.optim)": [[69, "unit_scaling.optim.lr_scale_for_depth"]], "lr_scale_func_adam() (in module unit_scaling.optim)": [[70, "unit_scaling.optim.lr_scale_func_adam"]], "lr_scale_func_sgd() (in module unit_scaling.optim)": [[71, "unit_scaling.optim.lr_scale_func_sgd"]], "scaled_parameters() (in module unit_scaling.optim)": [[72, "unit_scaling.optim.scaled_parameters"]], "unit_scaling.parameter": [[73, "module-unit_scaling.parameter"]], "ordereddict (class in unit_scaling.parameter)": [[74, "unit_scaling.parameter.OrderedDict"]], "clear() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.clear"]], "copy() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.copy"]], "fromkeys() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.fromkeys"]], "get() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.get"]], "items() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.items"]], "keys() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.keys"]], "move_to_end() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.move_to_end"]], "pop() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.pop"]], "popitem() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.popitem"]], "setdefault() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.setdefault"]], "update() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.update"]], "values() (unit_scaling.parameter.ordereddict method)": [[74, "unit_scaling.parameter.OrderedDict.values"]], "parameter() (in module unit_scaling.parameter)": [[75, "unit_scaling.parameter.Parameter"]], "parameterdata (class in unit_scaling.parameter)": [[76, "unit_scaling.parameter.ParameterData"]], "protocol (class in unit_scaling.parameter)": [[77, "unit_scaling.parameter.Protocol"]], "h (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.H"]], "t (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.T"]], "tensor (class in unit_scaling.parameter)": [[78, "unit_scaling.parameter.Tensor"]], "abs() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.abs"]], "abs_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.abs_"]], "absolute() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.absolute"]], "absolute_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.absolute_"]], "acos() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.acos"]], "acos_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.acos_"]], "acosh() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.acosh"]], "acosh_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.acosh_"]], "add() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.add"]], "add_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.add_"]], "addbmm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addbmm"]], "addbmm_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addbmm_"]], "addcdiv() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addcdiv"]], "addcdiv_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addcdiv_"]], "addcmul() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addcmul"]], "addcmul_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addcmul_"]], "addmm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addmm"]], "addmm_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addmm_"]], "addmv() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addmv"]], "addmv_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addmv_"]], "addr() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addr"]], "addr_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.addr_"]], "adjoint() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.adjoint"]], "align_as() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.align_as"]], "align_to() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.align_to"]], "all() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.all"]], "allclose() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.allclose"]], "amax() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.amax"]], "amin() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.amin"]], "aminmax() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.aminmax"]], "angle() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.angle"]], "any() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.any"]], "apply_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.apply_"]], "arccos() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arccos"]], "arccos_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arccos_"]], "arccosh() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arccosh"]], "arccosh_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arccosh_"]], "arcsin() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arcsin"]], "arcsin_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arcsin_"]], "arcsinh() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arcsinh"]], "arcsinh_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arcsinh_"]], "arctan() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arctan"]], "arctan2() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arctan2"]], "arctan2_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arctan2_"]], "arctan_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arctan_"]], "arctanh() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arctanh"]], "arctanh_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.arctanh_"]], "argmax() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.argmax"]], "argmin() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.argmin"]], "argsort() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.argsort"]], "argwhere() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.argwhere"]], "as_strided() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.as_strided"]], "as_strided_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.as_strided_"]], "as_strided_scatter() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.as_strided_scatter"]], "as_subclass() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.as_subclass"]], "asin() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.asin"]], "asin_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.asin_"]], "asinh() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.asinh"]], "asinh_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.asinh_"]], "atan() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.atan"]], "atan2() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.atan2"]], "atan2_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.atan2_"]], "atan_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.atan_"]], "atanh() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.atanh"]], "atanh_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.atanh_"]], "backward() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.backward"]], "baddbmm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.baddbmm"]], "baddbmm_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.baddbmm_"]], "bernoulli() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bernoulli"]], "bernoulli_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bernoulli_"]], "bfloat16() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bfloat16"]], "bincount() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bincount"]], "bitwise_and() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_and"]], "bitwise_and_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_and_"]], "bitwise_left_shift() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_left_shift_"]], "bitwise_not() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_not"]], "bitwise_not_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_not_"]], "bitwise_or() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_or"]], "bitwise_or_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_or_"]], "bitwise_right_shift() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_right_shift_"]], "bitwise_xor() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_xor"]], "bitwise_xor_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bitwise_xor_"]], "bmm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bmm"]], "bool() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.bool"]], "broadcast_to() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.broadcast_to"]], "byte() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.byte"]], "cauchy_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cauchy_"]], "cdouble() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cdouble"]], "ceil() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ceil"]], "ceil_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ceil_"]], "cfloat() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cfloat"]], "chalf() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.chalf"]], "char() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.char"]], "cholesky() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cholesky"]], "cholesky_inverse() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cholesky_inverse"]], "cholesky_solve() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cholesky_solve"]], "chunk() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.chunk"]], "clamp() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.clamp"]], "clamp_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.clamp_"]], "clip() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.clip"]], "clip_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.clip_"]], "clone() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.clone"]], "coalesce() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.coalesce"]], "col_indices() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.col_indices"]], "conj() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.conj"]], "conj_physical() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.conj_physical"]], "conj_physical_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.conj_physical_"]], "contiguous() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.contiguous"]], "copy_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.copy_"]], "copysign() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.copysign"]], "copysign_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.copysign_"]], "corrcoef() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.corrcoef"]], "cos() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cos"]], "cos_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cos_"]], "cosh() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cosh"]], "cosh_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cosh_"]], "count_nonzero() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.count_nonzero"]], "cov() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cov"]], "cpu() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cpu"]], "cross() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cross"]], "crow_indices() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.crow_indices"]], "cuda() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cuda"]], "cummax() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cummax"]], "cummin() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cummin"]], "cumprod() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cumprod"]], "cumprod_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cumprod_"]], "cumsum() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cumsum"]], "cumsum_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.cumsum_"]], "data_ptr() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.data_ptr"]], "deg2rad() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.deg2rad"]], "deg2rad_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.deg2rad_"]], "dense_dim() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.dense_dim"]], "dequantize() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.dequantize"]], "det() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.det"]], "detach() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.detach"]], "detach_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.detach_"]], "device (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.device"]], "diag() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.diag"]], "diag_embed() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.diag_embed"]], "diagflat() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.diagflat"]], "diagonal() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.diagonal"]], "diagonal_scatter() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.diagonal_scatter"]], "diff() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.diff"]], "digamma() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.digamma"]], "digamma_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.digamma_"]], "dim() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.dim"]], "dim_order() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.dim_order"]], "dist() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.dist"]], "div() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.div"]], "div_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.div_"]], "divide() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.divide"]], "divide_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.divide_"]], "dot() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.dot"]], "double() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.double"]], "dsplit() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.dsplit"]], "element_size() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.element_size"]], "eq() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.eq"]], "eq_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.eq_"]], "equal() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.equal"]], "erf() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.erf"]], "erf_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.erf_"]], "erfc() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.erfc"]], "erfc_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.erfc_"]], "erfinv() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.erfinv"]], "erfinv_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.erfinv_"]], "exp() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.exp"]], "exp2() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.exp2"]], "exp2_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.exp2_"]], "exp_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.exp_"]], "expand() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.expand"]], "expand_as() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.expand_as"]], "expm1() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.expm1"]], "expm1_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.expm1_"]], "exponential_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.exponential_"]], "fill_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.fill_"]], "fill_diagonal_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.fill_diagonal_"]], "fix() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.fix"]], "fix_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.fix_"]], "flatten() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.flatten"]], "flip() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.flip"]], "fliplr() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.fliplr"]], "flipud() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.flipud"]], "float() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.float"]], "float_power() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.float_power"]], "float_power_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.float_power_"]], "floor() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.floor"]], "floor_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.floor_"]], "floor_divide() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.floor_divide"]], "floor_divide_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.floor_divide_"]], "fmax() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.fmax"]], "fmin() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.fmin"]], "fmod() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.fmod"]], "fmod_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.fmod_"]], "frac() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.frac"]], "frac_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.frac_"]], "frexp() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.frexp"]], "gather() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.gather"]], "gcd() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.gcd"]], "gcd_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.gcd_"]], "ge() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ge"]], "ge_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ge_"]], "geometric_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.geometric_"]], "geqrf() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.geqrf"]], "ger() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ger"]], "get_device() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.get_device"]], "grad (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.grad"]], "greater() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.greater"]], "greater_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.greater_"]], "greater_equal() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.greater_equal"]], "greater_equal_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.greater_equal_"]], "gt() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.gt"]], "gt_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.gt_"]], "half() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.half"]], "hardshrink() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.hardshrink"]], "has_names() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.has_names"]], "heaviside() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.heaviside"]], "heaviside_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.heaviside_"]], "histc() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.histc"]], "histogram() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.histogram"]], "hsplit() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.hsplit"]], "hypot() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.hypot"]], "hypot_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.hypot_"]], "i0() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.i0"]], "i0_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.i0_"]], "igamma() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.igamma"]], "igamma_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.igamma_"]], "igammac() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.igammac"]], "igammac_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.igammac_"]], "imag (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.imag"]], "index_add() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_add"]], "index_add_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_add_"]], "index_copy() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_copy"]], "index_copy_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_copy_"]], "index_fill() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_fill"]], "index_fill_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_fill_"]], "index_put() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_put"]], "index_put_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_put_"]], "index_reduce_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_reduce_"]], "index_select() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.index_select"]], "indices() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.indices"]], "inner() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.inner"]], "int() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.int"]], "int_repr() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.int_repr"]], "inverse() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.inverse"]], "ipu() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ipu"]], "is_coalesced() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_coalesced"]], "is_complex() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_complex"]], "is_conj() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_conj"]], "is_contiguous() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_contiguous"]], "is_cpu (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_cpu"]], "is_cuda (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_cuda"]], "is_floating_point() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_floating_point"]], "is_inference() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_inference"]], "is_ipu (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_ipu"]], "is_leaf (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_leaf"]], "is_meta (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_meta"]], "is_mps (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_mps"]], "is_neg() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_neg"]], "is_pinned() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_pinned"]], "is_quantized (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_quantized"]], "is_set_to() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_set_to"]], "is_shared() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_shared"]], "is_signed() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.is_signed"]], "is_sparse (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_sparse"]], "is_sparse_csr (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_sparse_csr"]], "is_xla (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_xla"]], "is_xpu (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.is_xpu"]], "isclose() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.isclose"]], "isfinite() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.isfinite"]], "isinf() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.isinf"]], "isnan() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.isnan"]], "isneginf() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.isneginf"]], "isposinf() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.isposinf"]], "isreal() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.isreal"]], "istft() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.istft"]], "item() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.item"]], "itemsize (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.itemsize"]], "kron() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.kron"]], "kthvalue() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.kthvalue"]], "lcm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lcm"]], "lcm_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lcm_"]], "ldexp() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ldexp"]], "ldexp_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ldexp_"]], "le() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.le"]], "le_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.le_"]], "lerp() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lerp"]], "lerp_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lerp_"]], "less() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.less"]], "less_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.less_"]], "less_equal() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.less_equal"]], "less_equal_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.less_equal_"]], "lgamma() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lgamma"]], "lgamma_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lgamma_"]], "log() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.log"]], "log10() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.log10"]], "log10_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.log10_"]], "log1p() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.log1p"]], "log1p_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.log1p_"]], "log2() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.log2"]], "log2_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.log2_"]], "log_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.log_"]], "log_normal_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.log_normal_"]], "logaddexp() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logaddexp"]], "logaddexp2() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logaddexp2"]], "logcumsumexp() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logcumsumexp"]], "logdet() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logdet"]], "logical_and() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logical_and"]], "logical_and_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logical_and_"]], "logical_not() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logical_not"]], "logical_not_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logical_not_"]], "logical_or() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logical_or"]], "logical_or_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logical_or_"]], "logical_xor() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logical_xor"]], "logical_xor_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logical_xor_"]], "logit() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logit"]], "logit_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logit_"]], "logsumexp() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.logsumexp"]], "long() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.long"]], "lt() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lt"]], "lt_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lt_"]], "lu() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lu"]], "lu_solve() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.lu_solve"]], "mh (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.mH"]], "mt (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.mT"]], "map_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.map_"]], "masked_fill() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.masked_fill"]], "masked_fill_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.masked_fill_"]], "masked_scatter() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.masked_scatter"]], "masked_scatter_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.masked_scatter_"]], "masked_select() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.masked_select"]], "matmul() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.matmul"]], "matrix_exp() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.matrix_exp"]], "matrix_power() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.matrix_power"]], "max() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.max"]], "maximum() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.maximum"]], "mean() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.mean"]], "median() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.median"]], "min() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.min"]], "minimum() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.minimum"]], "mm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.mm"]], "mode() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.mode"]], "module_load() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.module_load"]], "moveaxis() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.moveaxis"]], "movedim() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.movedim"]], "msort() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.msort"]], "mtia() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.mtia"]], "mul() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.mul"]], "mul_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.mul_"]], "multinomial() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.multinomial"]], "multiply() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.multiply"]], "multiply_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.multiply_"]], "mv() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.mv"]], "mvlgamma() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.mvlgamma"]], "mvlgamma_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.mvlgamma_"]], "names (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.names"]], "nan_to_num() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nan_to_num"]], "nan_to_num_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nan_to_num_"]], "nanmean() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nanmean"]], "nanmedian() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nanmedian"]], "nanquantile() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nanquantile"]], "nansum() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nansum"]], "narrow() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.narrow"]], "narrow_copy() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.narrow_copy"]], "nbytes (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.nbytes"]], "ndim (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.ndim"]], "ndimension() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ndimension"]], "ne() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ne"]], "ne_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ne_"]], "neg() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.neg"]], "neg_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.neg_"]], "negative() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.negative"]], "negative_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.negative_"]], "nelement() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nelement"]], "new_empty() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.new_empty"]], "new_empty_strided() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.new_empty_strided"]], "new_full() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.new_full"]], "new_ones() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.new_ones"]], "new_tensor() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.new_tensor"]], "new_zeros() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.new_zeros"]], "nextafter() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nextafter"]], "nextafter_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nextafter_"]], "nonzero() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nonzero"]], "nonzero_static() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.nonzero_static"]], "norm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.norm"]], "normal_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.normal_"]], "not_equal() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.not_equal"]], "not_equal_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.not_equal_"]], "numel() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.numel"]], "numpy() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.numpy"]], "orgqr() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.orgqr"]], "ormqr() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ormqr"]], "outer() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.outer"]], "permute() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.permute"]], "pin_memory() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.pin_memory"]], "pinverse() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.pinverse"]], "polygamma() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.polygamma"]], "polygamma_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.polygamma_"]], "positive() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.positive"]], "pow() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.pow"]], "pow_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.pow_"]], "prod() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.prod"]], "put() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.put"]], "put_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.put_"]], "q_per_channel_axis() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.q_per_channel_zero_points"]], "q_scale() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.q_scale"]], "q_zero_point() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.q_zero_point"]], "qr() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.qr"]], "qscheme() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.qscheme"]], "quantile() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.quantile"]], "rad2deg() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.rad2deg"]], "rad2deg_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.rad2deg_"]], "random_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.random_"]], "ravel() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.ravel"]], "real (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.real"]], "reciprocal() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.reciprocal"]], "reciprocal_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.reciprocal_"]], "record_stream() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.record_stream"]], "refine_names() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.refine_names"]], "register_hook() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.register_hook"]], "register_post_accumulate_grad_hook() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.register_post_accumulate_grad_hook"]], "remainder() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.remainder"]], "remainder_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.remainder_"]], "rename() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.rename"]], "rename_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.rename_"]], "renorm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.renorm"]], "renorm_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.renorm_"]], "repeat() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.repeat"]], "repeat_interleave() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.repeat_interleave"]], "requires_grad (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.requires_grad"]], "requires_grad_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.requires_grad_"]], "reshape() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.reshape"]], "reshape_as() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.reshape_as"]], "resize_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.resize_"]], "resize_as_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.resize_as_"]], "resolve_conj() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.resolve_conj"]], "resolve_neg() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.resolve_neg"]], "retain_grad() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.retain_grad"]], "retains_grad (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.retains_grad"]], "roll() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.roll"]], "rot90() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.rot90"]], "round() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.round"]], "round_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.round_"]], "rsqrt() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.rsqrt"]], "rsqrt_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.rsqrt_"]], "scatter() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.scatter"]], "scatter_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.scatter_"]], "scatter_add() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.scatter_add"]], "scatter_add_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.scatter_add_"]], "scatter_reduce() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.scatter_reduce"]], "scatter_reduce_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.scatter_reduce_"]], "select() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.select"]], "select_scatter() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.select_scatter"]], "set_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.set_"]], "sgn() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sgn"]], "sgn_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sgn_"]], "shape (unit_scaling.parameter.tensor attribute)": [[78, "unit_scaling.parameter.Tensor.shape"]], "share_memory_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.share_memory_"]], "short() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.short"]], "sigmoid() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sigmoid"]], "sigmoid_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sigmoid_"]], "sign() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sign"]], "sign_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sign_"]], "signbit() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.signbit"]], "sin() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sin"]], "sin_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sin_"]], "sinc() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sinc"]], "sinc_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sinc_"]], "sinh() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sinh"]], "sinh_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sinh_"]], "size() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.size"]], "slice_scatter() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.slice_scatter"]], "slogdet() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.slogdet"]], "smm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.smm"]], "softmax() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.softmax"]], "sort() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sort"]], "sparse_dim() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sparse_dim"]], "sparse_mask() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sparse_mask"]], "sparse_resize_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sparse_resize_and_clear_"]], "split() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.split"]], "sqrt() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sqrt"]], "sqrt_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sqrt_"]], "square() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.square"]], "square_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.square_"]], "squeeze() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.squeeze"]], "squeeze_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.squeeze_"]], "sspaddmm() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sspaddmm"]], "std() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.std"]], "stft() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.stft"]], "storage() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.storage"]], "storage_offset() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.storage_offset"]], "storage_type() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.storage_type"]], "stride() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.stride"]], "sub() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sub"]], "sub_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sub_"]], "subtract() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.subtract"]], "subtract_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.subtract_"]], "sum() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sum"]], "sum_to_size() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.sum_to_size"]], "svd() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.svd"]], "swapaxes() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.swapaxes"]], "swapaxes_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.swapaxes_"]], "swapdims() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.swapdims"]], "swapdims_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.swapdims_"]], "t() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.t"]], "t_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.t_"]], "take() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.take"]], "take_along_dim() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.take_along_dim"]], "tan() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.tan"]], "tan_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.tan_"]], "tanh() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.tanh"]], "tanh_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.tanh_"]], "tensor_split() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.tensor_split"]], "tile() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.tile"]], "to() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to"]], "to_dense() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to_dense"]], "to_mkldnn() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to_mkldnn"]], "to_padded_tensor() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to_padded_tensor"]], "to_sparse() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to_sparse"]], "to_sparse_bsc() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to_sparse_bsr"]], "to_sparse_coo() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to_sparse_coo"]], "to_sparse_csc() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to_sparse_csc"]], "to_sparse_csr() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.to_sparse_csr"]], "tolist() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.tolist"]], "topk() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.topk"]], "trace() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.trace"]], "transpose() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.transpose"]], "transpose_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.transpose_"]], "triangular_solve() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.triangular_solve"]], "tril() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.tril"]], "tril_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.tril_"]], "triu() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.triu"]], "triu_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.triu_"]], "true_divide() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.true_divide"]], "true_divide_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.true_divide_"]], "trunc() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.trunc"]], "trunc_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.trunc_"]], "type() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.type"]], "type_as() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.type_as"]], "unbind() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.unbind"]], "unflatten() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.unflatten"]], "unfold() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.unfold"]], "uniform_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.uniform_"]], "unique() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.unique"]], "unique_consecutive() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.unique_consecutive"]], "unsafe_chunk() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.unsafe_chunk"]], "unsafe_split() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.unsafe_split"]], "unsqueeze() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.unsqueeze"]], "unsqueeze_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.unsqueeze_"]], "untyped_storage() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.untyped_storage"]], "values() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.values"]], "var() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.var"]], "vdot() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.vdot"]], "view() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.view"]], "view_as() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.view_as"]], "vsplit() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.vsplit"]], "where() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.where"]], "xlogy() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.xlogy"]], "xlogy_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.xlogy_"]], "xpu() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.xpu"]], "zero_() (unit_scaling.parameter.tensor method)": [[78, "unit_scaling.parameter.Tensor.zero_"]], "has_parameter_data() (in module unit_scaling.parameter)": [[79, "unit_scaling.parameter.has_parameter_data"]], "unit_scaling.scale": [[80, "module-unit_scaling.scale"]], "scale_bwd() (in module unit_scaling.scale)": [[81, "unit_scaling.scale.scale_bwd"]], "scale_fwd() (in module unit_scaling.scale)": [[82, "unit_scaling.scale.scale_fwd"]], "transformer_residual_scaling_rule() (in module unit_scaling)": [[83, "unit_scaling.transformer_residual_scaling_rule"]], "unit_scaling.transforms": [[84, "module-unit_scaling.transforms"]], "metrics (class in unit_scaling.transforms)": [[85, "unit_scaling.transforms.Metrics"]], "metrics.data (class in unit_scaling.transforms)": [[85, "unit_scaling.transforms.Metrics.Data"]], "compile() (in module unit_scaling.transforms)": [[86, "unit_scaling.transforms.compile"]], "prune_non_float_tensors() (in module unit_scaling.transforms)": [[87, "unit_scaling.transforms.prune_non_float_tensors"]], "prune_same_scale_tensors() (in module unit_scaling.transforms)": [[88, "unit_scaling.transforms.prune_same_scale_tensors"]], "prune_selected_nodes() (in module unit_scaling.transforms)": [[89, "unit_scaling.transforms.prune_selected_nodes"]], "simulate_format() (in module unit_scaling.transforms)": [[90, "unit_scaling.transforms.simulate_format"]], "simulate_fp8() (in module unit_scaling.transforms)": [[91, "unit_scaling.transforms.simulate_fp8"]], "track_scales() (in module unit_scaling.transforms)": [[92, "unit_scaling.transforms.track_scales"]], "unit_scale() (in module unit_scaling.transforms)": [[93, "unit_scaling.transforms.unit_scale"]], "unit_scaling.transforms.utils": [[94, "module-unit_scaling.transforms.utils"]], "apply_transform() (in module unit_scaling.transforms.utils)": [[95, "unit_scaling.transforms.utils.apply_transform"]], "patch_to_expand_modules() (in module unit_scaling.transforms.utils)": [[96, "unit_scaling.transforms.utils.patch_to_expand_modules"]], "replace_node_with_function() (in module unit_scaling.transforms.utils)": [[97, "unit_scaling.transforms.utils.replace_node_with_function"]], "torch_nn_modules_to_user_modules() (in module unit_scaling.transforms.utils)": [[98, "unit_scaling.transforms.utils.torch_nn_modules_to_user_modules"]], "unit_scaling.utils": [[99, "module-unit_scaling.utils"]], "scalepair (class in unit_scaling.utils)": [[100, "unit_scaling.utils.ScalePair"]], "scaletracker (class in unit_scaling.utils)": [[101, "unit_scaling.utils.ScaleTracker"]], "backward() (unit_scaling.utils.scaletracker static method)": [[101, "unit_scaling.utils.ScaleTracker.backward"]], "jvp() (unit_scaling.utils.scaletracker static method)": [[101, "unit_scaling.utils.ScaleTracker.jvp"]], "mark_dirty() (unit_scaling.utils.scaletracker method)": [[101, "unit_scaling.utils.ScaleTracker.mark_dirty"]], "mark_non_differentiable() (unit_scaling.utils.scaletracker method)": [[101, "unit_scaling.utils.ScaleTracker.mark_non_differentiable"]], "save_for_backward() (unit_scaling.utils.scaletracker method)": [[101, "unit_scaling.utils.ScaleTracker.save_for_backward"]], "save_for_forward() (unit_scaling.utils.scaletracker method)": [[101, "unit_scaling.utils.ScaleTracker.save_for_forward"]], "set_materialize_grads() (unit_scaling.utils.scaletracker method)": [[101, "unit_scaling.utils.ScaleTracker.set_materialize_grads"]], "setup_context() (unit_scaling.utils.scaletracker static method)": [[101, "unit_scaling.utils.ScaleTracker.setup_context"]], "vjp() (unit_scaling.utils.scaletracker static method)": [[101, "unit_scaling.utils.ScaleTracker.vjp"]], "vmap() (unit_scaling.utils.scaletracker static method)": [[101, "unit_scaling.utils.ScaleTracker.vmap"]], "scaletrackinginterpreter (class in unit_scaling.utils)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter"]], "boxed_run() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.boxed_run"]], "call_function() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.call_function"]], "call_method() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.call_method"]], "call_module() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.call_module"]], "fetch_args_kwargs_from_env() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.fetch_attr"]], "get_attr() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.get_attr"]], "map_nodes_to_values() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.map_nodes_to_values"]], "output() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.output"]], "placeholder() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.placeholder"]], "run() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.run"]], "run_node() (unit_scaling.utils.scaletrackinginterpreter method)": [[102, "unit_scaling.utils.ScaleTrackingInterpreter.run_node"]], "analyse_module() (in module unit_scaling.utils)": [[103, "unit_scaling.utils.analyse_module"]], "visualiser() (in module unit_scaling)": [[104, "unit_scaling.visualiser"]]}})